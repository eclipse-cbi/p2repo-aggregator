/*
* generated by Xtext
*/
grammar InternalBeeLang;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.eclipse.b3.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.b3.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.b3.services.BeeLangGrammarAccess;

}

@parser::members {
 
 	private BeeLangGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(BeeLangGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleBeeModel
entryRuleBeeModel 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getBeeModelRule()); }
	 ruleBeeModel
{ after(grammarAccess.getBeeModelRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BeeModel
ruleBeeModel 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBeeModelAccess().getGroup()); }
(rule__BeeModel__Group__0)
{ after(grammarAccess.getBeeModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnit
entryRuleUnit 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getUnitRule()); }
	 ruleUnit
{ after(grammarAccess.getUnitRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Unit
ruleUnit 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitAccess().getGroup()); }
(rule__Unit__Group__0)
{ after(grammarAccess.getUnitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleProvidedCapability
entryRuleProvidedCapability 
:
{ before(grammarAccess.getProvidedCapabilityRule()); }
	 ruleProvidedCapability
{ after(grammarAccess.getProvidedCapabilityRule()); } 
	 EOF 
;

// Rule ProvidedCapability
ruleProvidedCapability 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getGroup()); }
(rule__ProvidedCapability__Group__0)
{ after(grammarAccess.getProvidedCapabilityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequiredCapability
entryRuleRequiredCapability 
:
{ before(grammarAccess.getRequiredCapabilityRule()); }
	 ruleRequiredCapability
{ after(grammarAccess.getRequiredCapabilityRule()); } 
	 EOF 
;

// Rule RequiredCapability
ruleRequiredCapability 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getGroup()); }
(rule__RequiredCapability__Group__0)
{ after(grammarAccess.getRequiredCapabilityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFilteredCapability
entryRuleFilteredCapability 
:
{ before(grammarAccess.getFilteredCapabilityRule()); }
	 ruleFilteredCapability
{ after(grammarAccess.getFilteredCapabilityRule()); } 
	 EOF 
;

// Rule FilteredCapability
ruleFilteredCapability 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFilteredCapabilityAccess().getGroup()); }
(rule__FilteredCapability__Group__0)
{ after(grammarAccess.getFilteredCapabilityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCapability
entryRuleCapability 
:
{ before(grammarAccess.getCapabilityRule()); }
	 ruleCapability
{ after(grammarAccess.getCapabilityRule()); } 
	 EOF 
;

// Rule Capability
ruleCapability 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCapabilityAccess().getGroup()); }
(rule__Capability__Group__0)
{ after(grammarAccess.getCapabilityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedPropertySet
entryRuleNamedPropertySet 
:
{ before(grammarAccess.getNamedPropertySetRule()); }
	 ruleNamedPropertySet
{ after(grammarAccess.getNamedPropertySetRule()); } 
	 EOF 
;

// Rule NamedPropertySet
ruleNamedPropertySet 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedPropertySetAccess().getGroup()); }
(rule__NamedPropertySet__Group__0)
{ after(grammarAccess.getNamedPropertySetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertySet
entryRulePropertySet 
:
{ before(grammarAccess.getPropertySetRule()); }
	 rulePropertySet
{ after(grammarAccess.getPropertySetRule()); } 
	 EOF 
;

// Rule PropertySet
rulePropertySet 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertySetAccess().getGroup()); }
(rule__PropertySet__Group__0)
{ after(grammarAccess.getPropertySetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyOperation
entryRulePropertyOperation 
:
{ before(grammarAccess.getPropertyOperationRule()); }
	 rulePropertyOperation
{ after(grammarAccess.getPropertyOperationRule()); } 
	 EOF 
;

// Rule PropertyOperation
rulePropertyOperation 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyOperationAccess().getAlternatives()); }
(rule__PropertyOperation__Alternatives)
{ after(grammarAccess.getPropertyOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalPropertyOperation
entryRuleConditionalPropertyOperation 
:
{ before(grammarAccess.getConditionalPropertyOperationRule()); }
	 ruleConditionalPropertyOperation
{ after(grammarAccess.getConditionalPropertyOperationRule()); } 
	 EOF 
;

// Rule ConditionalPropertyOperation
ruleConditionalPropertyOperation 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalPropertyOperationAccess().getGroup()); }
(rule__ConditionalPropertyOperation__Group__0)
{ after(grammarAccess.getConditionalPropertyOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyDefinitionOperation
entryRulePropertyDefinitionOperation 
:
{ before(grammarAccess.getPropertyDefinitionOperationRule()); }
	 rulePropertyDefinitionOperation
{ after(grammarAccess.getPropertyDefinitionOperationRule()); } 
	 EOF 
;

// Rule PropertyDefinitionOperation
rulePropertyDefinitionOperation 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyDefinitionOperationAccess().getGroup()); }
(rule__PropertyDefinitionOperation__Group__0)
{ after(grammarAccess.getPropertyDefinitionOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyValDeclaration
entryRulePropertyValDeclaration 
:
{ before(grammarAccess.getPropertyValDeclarationRule()); }
	 rulePropertyValDeclaration
{ after(grammarAccess.getPropertyValDeclarationRule()); } 
	 EOF 
;

// Rule PropertyValDeclaration
rulePropertyValDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyValDeclarationAccess().getGroup()); }
(rule__PropertyValDeclaration__Group__0)
{ after(grammarAccess.getPropertyValDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyVarDeclaration
entryRulePropertyVarDeclaration 
:
{ before(grammarAccess.getPropertyVarDeclarationRule()); }
	 rulePropertyVarDeclaration
{ after(grammarAccess.getPropertyVarDeclarationRule()); } 
	 EOF 
;

// Rule PropertyVarDeclaration
rulePropertyVarDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getGroup()); }
(rule__PropertyVarDeclaration__Group__0)
{ after(grammarAccess.getPropertyVarDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertySetOperation
entryRulePropertySetOperation 
:
{ before(grammarAccess.getPropertySetOperationRule()); }
	 rulePropertySetOperation
{ after(grammarAccess.getPropertySetOperationRule()); } 
	 EOF 
;

// Rule PropertySetOperation
rulePropertySetOperation 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertySetOperationAccess().getGroup()); }
(rule__PropertySetOperation__Group__0)
{ after(grammarAccess.getPropertySetOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleSynchronization
entryRuleSynchronization 
:
{ before(grammarAccess.getSynchronizationRule()); }
	 ruleSynchronization
{ after(grammarAccess.getSynchronizationRule()); } 
	 EOF 
;

// Rule Synchronization
ruleSynchronization 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSynchronizationAccess().getGroup()); }
(rule__Synchronization__Group__0)
{ after(grammarAccess.getSynchronizationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSynchronizedPart
entryRuleSynchronizedPart 
:
{ before(grammarAccess.getSynchronizedPartRule()); }
	 ruleSynchronizedPart
{ after(grammarAccess.getSynchronizedPartRule()); } 
	 EOF 
;

// Rule SynchronizedPart
ruleSynchronizedPart 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSynchronizedPartAccess().getAlternatives()); }
(rule__SynchronizedPart__Alternatives)
{ after(grammarAccess.getSynchronizedPartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathGroup
entryRulePathGroup 
:
{ before(grammarAccess.getPathGroupRule()); }
	 rulePathGroup
{ after(grammarAccess.getPathGroupRule()); } 
	 EOF 
;

// Rule PathGroup
rulePathGroup 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathGroupAccess().getGroup()); }
(rule__PathGroup__Group__0)
{ after(grammarAccess.getPathGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathVectorElement
entryRulePathVectorElement 
:
{ before(grammarAccess.getPathVectorElementRule()); }
	 rulePathVectorElement
{ after(grammarAccess.getPathVectorElementRule()); } 
	 EOF 
;

// Rule PathVectorElement
rulePathVectorElement 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathVectorElementAccess().getAlternatives()); }
(rule__PathVectorElement__Alternatives)
{ after(grammarAccess.getPathVectorElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFilteredPathVector
entryRuleFilteredPathVector 
:
{ before(grammarAccess.getFilteredPathVectorRule()); }
	 ruleFilteredPathVector
{ after(grammarAccess.getFilteredPathVectorRule()); } 
	 EOF 
;

// Rule FilteredPathVector
ruleFilteredPathVector 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFilteredPathVectorAccess().getGroup()); }
(rule__FilteredPathVector__Group__0)
{ after(grammarAccess.getFilteredPathVectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBasePathVector
entryRuleBasePathVector 
:
{ before(grammarAccess.getBasePathVectorRule()); }
	 ruleBasePathVector
{ after(grammarAccess.getBasePathVectorRule()); } 
	 EOF 
;

// Rule BasePathVector
ruleBasePathVector 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBasePathVectorAccess().getGroup()); }
(rule__BasePathVector__Group__0)
{ after(grammarAccess.getBasePathVectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnbasedPathVector
entryRuleUnbasedPathVector 
:
{ before(grammarAccess.getUnbasedPathVectorRule()); }
	 ruleUnbasedPathVector
{ after(grammarAccess.getUnbasedPathVectorRule()); } 
	 EOF 
;

// Rule UnbasedPathVector
ruleUnbasedPathVector 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnbasedPathVectorAccess().getGroup()); }
(rule__UnbasedPathVector__Group__0)
{ after(grammarAccess.getUnbasedPathVectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompoundPathVector
entryRuleCompoundPathVector 
:
{ before(grammarAccess.getCompoundPathVectorRule()); }
	 ruleCompoundPathVector
{ after(grammarAccess.getCompoundPathVectorRule()); } 
	 EOF 
;

// Rule CompoundPathVector
ruleCompoundPathVector 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompoundPathVectorAccess().getGroup()); }
(rule__CompoundPathVector__Group__0)
{ after(grammarAccess.getCompoundPathVectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePath
entryRulePath 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getPathRule()); }
	 rulePath
{ after(grammarAccess.getPathRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Path
rulePath 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathAccess().getAlternatives()); }
(rule__Path__Alternatives)
{ after(grammarAccess.getPathAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulePrerequisite
entryRulePrerequisite 
:
{ before(grammarAccess.getPrerequisiteRule()); }
	 rulePrerequisite
{ after(grammarAccess.getPrerequisiteRule()); } 
	 EOF 
;

// Rule Prerequisite
rulePrerequisite 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrerequisiteAccess().getGroup()); }
(rule__Prerequisite__Group__0)
{ after(grammarAccess.getPrerequisiteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWithClause
entryRuleWithClause 
:
{ before(grammarAccess.getWithClauseRule()); }
	 ruleWithClause
{ after(grammarAccess.getWithClauseRule()); } 
	 EOF 
;

// Rule WithClause
ruleWithClause 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWithClauseAccess().getGroup()); }
(rule__WithClause__Group__0)
{ after(grammarAccess.getWithClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrerequisiteEntry
entryRulePrerequisiteEntry 
:
{ before(grammarAccess.getPrerequisiteEntryRule()); }
	 rulePrerequisiteEntry
{ after(grammarAccess.getPrerequisiteEntryRule()); } 
	 EOF 
;

// Rule PrerequisiteEntry
rulePrerequisiteEntry 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrerequisiteEntryAccess().getAlternatives()); }
(rule__PrerequisiteEntry__Alternatives)
{ after(grammarAccess.getPrerequisiteEntryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDirectPartReferemce
entryRuleDirectPartReferemce 
:
{ before(grammarAccess.getDirectPartReferemceRule()); }
	 ruleDirectPartReferemce
{ after(grammarAccess.getDirectPartReferemceRule()); } 
	 EOF 
;

// Rule DirectPartReferemce
ruleDirectPartReferemce 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDirectPartReferemceAccess().getGroup()); }
(rule__DirectPartReferemce__Group__0)
{ after(grammarAccess.getDirectPartReferemceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCapabilityReferencedPart
entryRuleCapabilityReferencedPart 
:
{ before(grammarAccess.getCapabilityReferencedPartRule()); }
	 ruleCapabilityReferencedPart
{ after(grammarAccess.getCapabilityReferencedPartRule()); } 
	 EOF 
;

// Rule CapabilityReferencedPart
ruleCapabilityReferencedPart 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getGroup()); }
(rule__CapabilityReferencedPart__Group__0)
{ after(grammarAccess.getCapabilityReferencedPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompoundReferences
entryRuleCompoundReferences 
:
{ before(grammarAccess.getCompoundReferencesRule()); }
	 ruleCompoundReferences
{ after(grammarAccess.getCompoundReferencesRule()); } 
	 EOF 
;

// Rule CompoundReferences
ruleCompoundReferences 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompoundReferencesAccess().getGroup()); }
(rule__CompoundReferences__Group__0)
{ after(grammarAccess.getCompoundReferencesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuilder
entryRuleBuilder 
:
{ before(grammarAccess.getBuilderRule()); }
	 ruleBuilder
{ after(grammarAccess.getBuilderRule()); } 
	 EOF 
;

// Rule Builder
ruleBuilder 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuilderAccess().getGroup()); }
(rule__Builder__Group__0)
{ after(grammarAccess.getBuilderAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterList
entryRuleParameterList 
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterListAccess().getGroup()); }
(rule__ParameterList__Group__0)
{ after(grammarAccess.getParameterListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFirstParameter
entryRuleFirstParameter 
:
{ before(grammarAccess.getFirstParameterRule()); }
	 ruleFirstParameter
{ after(grammarAccess.getFirstParameterRule()); } 
	 EOF 
;

// Rule FirstParameter
ruleFirstParameter 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFirstParameterAccess().getAlternatives()); }
(rule__FirstParameter__Alternatives)
{ after(grammarAccess.getFirstParameterAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClosureParameter
entryRuleClosureParameter 
:
{ before(grammarAccess.getClosureParameterRule()); }
	 ruleClosureParameter
{ after(grammarAccess.getClosureParameterRule()); } 
	 EOF 
;

// Rule ClosureParameter
ruleClosureParameter 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClosureParameterAccess().getGroup()); }
(rule__ClosureParameter__Group__0)
{ after(grammarAccess.getClosureParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterDeclarationList
entryRuleParameterDeclarationList 
:
{ before(grammarAccess.getParameterDeclarationListRule()); }
	 ruleParameterDeclarationList
{ after(grammarAccess.getParameterDeclarationListRule()); } 
	 EOF 
;

// Rule ParameterDeclarationList
ruleParameterDeclarationList 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterDeclarationListAccess().getAlternatives()); }
(rule__ParameterDeclarationList__Alternatives)
{ after(grammarAccess.getParameterDeclarationListAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterDeclaration
entryRuleParameterDeclaration 
:
{ before(grammarAccess.getParameterDeclarationRule()); }
	 ruleParameterDeclaration
{ after(grammarAccess.getParameterDeclarationRule()); } 
	 EOF 
;

// Rule ParameterDeclaration
ruleParameterDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterDeclarationAccess().getGroup()); }
(rule__ParameterDeclaration__Group__0)
{ after(grammarAccess.getParameterDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterDeclarationEllipse
entryRuleParameterDeclarationEllipse 
:
{ before(grammarAccess.getParameterDeclarationEllipseRule()); }
	 ruleParameterDeclarationEllipse
{ after(grammarAccess.getParameterDeclarationEllipseRule()); } 
	 EOF 
;

// Rule ParameterDeclarationEllipse
ruleParameterDeclarationEllipse 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterDeclarationEllipseAccess().getGroup()); }
(rule__ParameterDeclarationEllipse__Group__0)
{ after(grammarAccess.getParameterDeclarationEllipseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputKeyword
entryRuleInputKeyword 
:
{ before(grammarAccess.getInputKeywordRule()); }
	 ruleInputKeyword
{ after(grammarAccess.getInputKeywordRule()); } 
	 EOF 
;

// Rule InputKeyword
ruleInputKeyword 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputKeywordAccess().getInputKeyword()); }

	'input' 

{ after(grammarAccess.getInputKeywordAccess().getInputKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutputKeyword
entryRuleOutputKeyword 
:
{ before(grammarAccess.getOutputKeywordRule()); }
	 ruleOutputKeyword
{ after(grammarAccess.getOutputKeywordRule()); } 
	 EOF 
;

// Rule OutputKeyword
ruleOutputKeyword 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputKeywordAccess().getOutputKeyword()); }

	'output' 

{ after(grammarAccess.getOutputKeywordAccess().getOutputKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuilderOutput
entryRuleBuilderOutput 
:
{ before(grammarAccess.getBuilderOutputRule()); }
	 ruleBuilderOutput
{ after(grammarAccess.getBuilderOutputRule()); } 
	 EOF 
;

// Rule BuilderOutput
ruleBuilderOutput 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuilderOutputAccess().getGroup()); }
(rule__BuilderOutput__Group__0)
{ after(grammarAccess.getBuilderOutputAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuilderInput
entryRuleBuilderInput 
:
{ before(grammarAccess.getBuilderInputRule()); }
	 ruleBuilderInput
{ after(grammarAccess.getBuilderInputRule()); } 
	 EOF 
;

// Rule BuilderInput
ruleBuilderInput 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuilderInputAccess().getGroup()); }
(rule__BuilderInput__Group__0)
{ after(grammarAccess.getBuilderInputAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRepositoryConfiguration
entryRuleRepositoryConfiguration 
:
{ before(grammarAccess.getRepositoryConfigurationRule()); }
	 ruleRepositoryConfiguration
{ after(grammarAccess.getRepositoryConfigurationRule()); } 
	 EOF 
;

// Rule RepositoryConfiguration
ruleRepositoryConfiguration 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRepositoryConfigurationAccess().getAlternatives()); }
(rule__RepositoryConfiguration__Alternatives)
{ after(grammarAccess.getRepositoryConfigurationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRepositoryDeclaration
entryRuleRepositoryDeclaration 
:
{ before(grammarAccess.getRepositoryDeclarationRule()); }
	 ruleRepositoryDeclaration
{ after(grammarAccess.getRepositoryDeclarationRule()); } 
	 EOF 
;

// Rule RepositoryDeclaration
ruleRepositoryDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRepositoryDeclarationAccess().getGroup()); }
(rule__RepositoryDeclaration__Group__0)
{ after(grammarAccess.getRepositoryDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResolutionStrategy
entryRuleResolutionStrategy 
:
{ before(grammarAccess.getResolutionStrategyRule()); }
	 ruleResolutionStrategy
{ after(grammarAccess.getResolutionStrategyRule()); } 
	 EOF 
;

// Rule ResolutionStrategy
ruleResolutionStrategy 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResolutionStrategyAccess().getGroup()); }
(rule__ResolutionStrategy__Group__0)
{ after(grammarAccess.getResolutionStrategyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContainerConfiguration
entryRuleContainerConfiguration 
:
{ before(grammarAccess.getContainerConfigurationRule()); }
	 ruleContainerConfiguration
{ after(grammarAccess.getContainerConfigurationRule()); } 
	 EOF 
;

// Rule ContainerConfiguration
ruleContainerConfiguration 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContainerConfigurationAccess().getGroup()); }
(rule__ContainerConfiguration__Group__0)
{ after(grammarAccess.getContainerConfigurationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleURI
entryRuleURI 
:
{ before(grammarAccess.getURIRule()); }
	 ruleURI
{ after(grammarAccess.getURIRule()); } 
	 EOF 
;

// Rule URI
ruleURI 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getURIAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getURIAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConcern
entryRuleConcern 
:
{ before(grammarAccess.getConcernRule()); }
	 ruleConcern
{ after(grammarAccess.getConcernRule()); } 
	 EOF 
;

// Rule Concern
ruleConcern 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConcernAccess().getGroup()); }
(rule__Concern__Group__0)
{ after(grammarAccess.getConcernAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConcernBlock
entryRuleConcernBlock 
:
{ before(grammarAccess.getConcernBlockRule()); }
	 ruleConcernBlock
{ after(grammarAccess.getConcernBlockRule()); } 
	 EOF 
;

// Rule ConcernBlock
ruleConcernBlock 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConcernBlockAccess().getGroup()); }
(rule__ConcernBlock__Group__0)
{ after(grammarAccess.getConcernBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFilter
entryRuleFilter 
:
{ before(grammarAccess.getFilterRule()); }
	 ruleFilter
{ after(grammarAccess.getFilterRule()); } 
	 EOF 
;

// Rule Filter
ruleFilter 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFilterAccess().getGroup()); }
(rule__Filter__Group__0)
{ after(grammarAccess.getFilterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePreCondition
entryRulePreCondition 
:
{ before(grammarAccess.getPreConditionRule()); }
	 rulePreCondition
{ after(grammarAccess.getPreConditionRule()); } 
	 EOF 
;

// Rule PreCondition
rulePreCondition 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPreConditionAccess().getGroup()); }
(rule__PreCondition__Group__0)
{ after(grammarAccess.getPreConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostCondition
entryRulePostCondition 
:
{ before(grammarAccess.getPostConditionRule()); }
	 rulePostCondition
{ after(grammarAccess.getPostConditionRule()); } 
	 EOF 
;

// Rule PostCondition
rulePostCondition 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostConditionAccess().getGroup()); }
(rule__PostCondition__Group__0)
{ after(grammarAccess.getPostConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssertionExpression
entryRuleAssertionExpression 
:
{ before(grammarAccess.getAssertionExpressionRule()); }
	 ruleAssertionExpression
{ after(grammarAccess.getAssertionExpressionRule()); } 
	 EOF 
;

// Rule AssertionExpression
ruleAssertionExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssertionExpressionAccess().getGroup()); }
(rule__AssertionExpression__Group__0)
{ after(grammarAccess.getAssertionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionList
entryRuleExpressionList 
:
{ before(grammarAccess.getExpressionListRule()); }
	 ruleExpressionList
{ after(grammarAccess.getExpressionListRule()); } 
	 EOF 
;

// Rule ExpressionList
ruleExpressionList 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getExpressionListAccess().getGroup()); }
(rule__ExpressionList__Group__0)
{ after(grammarAccess.getExpressionListAccess().getGroup()); }
)
(
{ before(grammarAccess.getExpressionListAccess().getGroup()); }
(rule__ExpressionList__Group__0)*
{ after(grammarAccess.getExpressionListAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignmentOperator
entryRuleAssignmentOperator 
:
{ before(grammarAccess.getAssignmentOperatorRule()); }
	 ruleAssignmentOperator
{ after(grammarAccess.getAssignmentOperatorRule()); } 
	 EOF 
;

// Rule AssignmentOperator
ruleAssignmentOperator 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); }
(rule__AssignmentOperator__Alternatives)
{ after(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalOperator
entryRuleRelationalOperator 
:
{ before(grammarAccess.getRelationalOperatorRule()); }
	 ruleRelationalOperator
{ after(grammarAccess.getRelationalOperatorRule()); } 
	 EOF 
;

// Rule RelationalOperator
ruleRelationalOperator 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
(rule__RelationalOperator__Alternatives)
{ after(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTopLevelExpression
entryRuleTopLevelExpression 
:
{ before(grammarAccess.getTopLevelExpressionRule()); }
	 ruleTopLevelExpression
{ after(grammarAccess.getTopLevelExpressionRule()); } 
	 EOF 
;

// Rule TopLevelExpression
ruleTopLevelExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTopLevelExpressionAccess().getAlternatives()); }
(rule__TopLevelExpression__Alternatives)
{ after(grammarAccess.getTopLevelExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall()); }
	ruleAssignmentExpression
{ after(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression 
:
{ before(grammarAccess.getAssignmentExpressionRule()); }
	 ruleAssignmentExpression
{ after(grammarAccess.getAssignmentExpressionRule()); } 
	 EOF 
;

// Rule AssignmentExpression
ruleAssignmentExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getGroup()); }
(rule__AssignmentExpression__Group__0)
{ after(grammarAccess.getAssignmentExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarDeclaration
entryRuleVarDeclaration 
:
{ before(grammarAccess.getVarDeclarationRule()); }
	 ruleVarDeclaration
{ after(grammarAccess.getVarDeclarationRule()); } 
	 EOF 
;

// Rule VarDeclaration
ruleVarDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarDeclarationAccess().getGroup()); }
(rule__VarDeclaration__Group__0)
{ after(grammarAccess.getVarDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValDeclaration
entryRuleValDeclaration 
:
{ before(grammarAccess.getValDeclarationRule()); }
	 ruleValDeclaration
{ after(grammarAccess.getValDeclarationRule()); } 
	 EOF 
;

// Rule ValDeclaration
ruleValDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValDeclarationAccess().getGroup()); }
(rule__ValDeclaration__Group__0)
{ after(grammarAccess.getValDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeRef
entryRuleTypeRef 
:
{ before(grammarAccess.getTypeRefRule()); }
	 ruleTypeRef
{ after(grammarAccess.getTypeRefRule()); } 
	 EOF 
;

// Rule TypeRef
ruleTypeRef 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeRefAccess().getAlternatives()); }
(rule__TypeRef__Alternatives)
{ after(grammarAccess.getTypeRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleTypeRef
entryRuleSimpleTypeRef 
:
{ before(grammarAccess.getSimpleTypeRefRule()); }
	 ruleSimpleTypeRef
{ after(grammarAccess.getSimpleTypeRefRule()); } 
	 EOF 
;

// Rule SimpleTypeRef
ruleSimpleTypeRef 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleTypeRefAccess().getGroup()); }
(rule__SimpleTypeRef__Group__0)
{ after(grammarAccess.getSimpleTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClosureTypeRef
entryRuleClosureTypeRef 
:
{ before(grammarAccess.getClosureTypeRefRule()); }
	 ruleClosureTypeRef
{ after(grammarAccess.getClosureTypeRefRule()); } 
	 EOF 
;

// Rule ClosureTypeRef
ruleClosureTypeRef 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClosureTypeRefAccess().getGroup()); }
(rule__ClosureTypeRef__Group__0)
{ after(grammarAccess.getClosureTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTypeRefParam
entryRuleTypeRefParam 
:
{ before(grammarAccess.getTypeRefParamRule()); }
	 ruleTypeRefParam
{ after(grammarAccess.getTypeRefParamRule()); } 
	 EOF 
;

// Rule TypeRefParam
ruleTypeRefParam 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeRefParamAccess().getTypeRefParserRuleCall()); }
	ruleTypeRef
{ after(grammarAccess.getTypeRefParamAccess().getTypeRefParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWildcardRefParam
entryRuleWildcardRefParam 
:
{ before(grammarAccess.getWildcardRefParamRule()); }
	 ruleWildcardRefParam
{ after(grammarAccess.getWildcardRefParamRule()); } 
	 EOF 
;

// Rule WildcardRefParam
ruleWildcardRefParam 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWildcardRefParamAccess().getGroup()); }
(rule__WildcardRefParam__Group__0)
{ after(grammarAccess.getWildcardRefParamAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCachedExpression
entryRuleCachedExpression 
:
{ before(grammarAccess.getCachedExpressionRule()); }
	 ruleCachedExpression
{ after(grammarAccess.getCachedExpressionRule()); } 
	 EOF 
;

// Rule CachedExpression
ruleCachedExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCachedExpressionAccess().getAlternatives()); }
(rule__CachedExpression__Alternatives)
{ after(grammarAccess.getCachedExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpression
entryRuleOrExpression 
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
(rule__OrExpression__Group__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression 
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
(rule__RelationalExpression__Group__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceOfExpression
entryRuleInstanceOfExpression 
:
{ before(grammarAccess.getInstanceOfExpressionRule()); }
	 ruleInstanceOfExpression
{ after(grammarAccess.getInstanceOfExpressionRule()); } 
	 EOF 
;

// Rule InstanceOfExpression
ruleInstanceOfExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceOfExpressionAccess().getGroup()); }
(rule__InstanceOfExpression__Group__0)
{ after(grammarAccess.getInstanceOfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression 
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
(rule__AdditiveExpression__Group__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression 
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
(rule__MultiplicativeExpression__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSetExpression
entryRuleSetExpression 
:
{ before(grammarAccess.getSetExpressionRule()); }
	 ruleSetExpression
{ after(grammarAccess.getSetExpressionRule()); } 
	 EOF 
;

// Rule SetExpression
ruleSetExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSetExpressionAccess().getGroup()); }
(rule__SetExpression__Group__0)
{ after(grammarAccess.getSetExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryOrInfixExpression
entryRuleUnaryOrInfixExpression 
:
{ before(grammarAccess.getUnaryOrInfixExpressionRule()); }
	 ruleUnaryOrInfixExpression
{ after(grammarAccess.getUnaryOrInfixExpressionRule()); } 
	 EOF 
;

// Rule UnaryOrInfixExpression
ruleUnaryOrInfixExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives()); }
(rule__UnaryOrInfixExpression__Alternatives)
{ after(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression 
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup()); }
(rule__UnaryExpression__Group__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePreopExpression
entryRulePreopExpression 
:
{ before(grammarAccess.getPreopExpressionRule()); }
	 rulePreopExpression
{ after(grammarAccess.getPreopExpressionRule()); } 
	 EOF 
;

// Rule PreopExpression
rulePreopExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPreopExpressionAccess().getGroup()); }
(rule__PreopExpression__Group__0)
{ after(grammarAccess.getPreopExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostopExpression
entryRulePostopExpression 
:
{ before(grammarAccess.getPostopExpressionRule()); }
	 rulePostopExpression
{ after(grammarAccess.getPostopExpressionRule()); } 
	 EOF 
;

// Rule PostopExpression
rulePostopExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostopExpressionAccess().getGroup()); }
(rule__PostopExpression__Group__0)
{ after(grammarAccess.getPostopExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInfixExpression
entryRuleInfixExpression 
:
{ before(grammarAccess.getInfixExpressionRule()); }
	 ruleInfixExpression
{ after(grammarAccess.getInfixExpressionRule()); } 
	 EOF 
;

// Rule InfixExpression
ruleInfixExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInfixExpressionAccess().getGroup()); }
(rule__InfixExpression__Group__0)
{ after(grammarAccess.getInfixExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCallExpression
entryRuleCallExpression 
:
{ before(grammarAccess.getCallExpressionRule()); }
	 ruleCallExpression
{ after(grammarAccess.getCallExpressionRule()); } 
	 EOF 
;

// Rule CallExpression
ruleCallExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallExpressionAccess().getGroup()); }
(rule__CallExpression__Group__0)
{ after(grammarAccess.getCallExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWildcardExpression
entryRuleWildcardExpression 
:
{ before(grammarAccess.getWildcardExpressionRule()); }
	 ruleWildcardExpression
{ after(grammarAccess.getWildcardExpressionRule()); } 
	 EOF 
;

// Rule WildcardExpression
ruleWildcardExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWildcardExpressionAccess().getGroup()); }
(rule__WildcardExpression__Group__0)
{ after(grammarAccess.getWildcardExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThrowExpression
entryRuleThrowExpression 
:
{ before(grammarAccess.getThrowExpressionRule()); }
	 ruleThrowExpression
{ after(grammarAccess.getThrowExpressionRule()); } 
	 EOF 
;

// Rule ThrowExpression
ruleThrowExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThrowExpressionAccess().getGroup()); }
(rule__ThrowExpression__Group__0)
{ after(grammarAccess.getThrowExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTryCatchExpression
entryRuleTryCatchExpression 
:
{ before(grammarAccess.getTryCatchExpressionRule()); }
	 ruleTryCatchExpression
{ after(grammarAccess.getTryCatchExpressionRule()); } 
	 EOF 
;

// Rule TryCatchExpression
ruleTryCatchExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getGroup()); }
(rule__TryCatchExpression__Group__0)
{ after(grammarAccess.getTryCatchExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCatchBlock
entryRuleCatchBlock 
:
{ before(grammarAccess.getCatchBlockRule()); }
	 ruleCatchBlock
{ after(grammarAccess.getCatchBlockRule()); } 
	 EOF 
;

// Rule CatchBlock
ruleCatchBlock 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCatchBlockAccess().getGroup()); }
(rule__CatchBlock__Group__0)
{ after(grammarAccess.getCatchBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchExpression
entryRuleSwitchExpression 
:
{ before(grammarAccess.getSwitchExpressionRule()); }
	 ruleSwitchExpression
{ after(grammarAccess.getSwitchExpressionRule()); } 
	 EOF 
;

// Rule SwitchExpression
ruleSwitchExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchExpressionAccess().getGroup()); }
(rule__SwitchExpression__Group__0)
{ after(grammarAccess.getSwitchExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCase
entryRuleCase 
:
{ before(grammarAccess.getCaseRule()); }
	 ruleCase
{ after(grammarAccess.getCaseRule()); } 
	 EOF 
;

// Rule Case
ruleCase 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseAccess().getGroup()); }
(rule__Case__Group__0)
{ after(grammarAccess.getCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlockExpression
entryRuleBlockExpression 
:
{ before(grammarAccess.getBlockExpressionRule()); }
	 ruleBlockExpression
{ after(grammarAccess.getBlockExpressionRule()); } 
	 EOF 
;

// Rule BlockExpression
ruleBlockExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockExpressionAccess().getGroup()); }
(rule__BlockExpression__Group__0)
{ after(grammarAccess.getBlockExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfExpression
entryRuleIfExpression 
:
{ before(grammarAccess.getIfExpressionRule()); }
	 ruleIfExpression
{ after(grammarAccess.getIfExpressionRule()); } 
	 EOF 
;

// Rule IfExpression
ruleIfExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfExpressionAccess().getGroup()); }
(rule__IfExpression__Group__0)
{ after(grammarAccess.getIfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElseIfExpression
entryRuleElseIfExpression 
:
{ before(grammarAccess.getElseIfExpressionRule()); }
	 ruleElseIfExpression
{ after(grammarAccess.getElseIfExpressionRule()); } 
	 EOF 
;

// Rule ElseIfExpression
ruleElseIfExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElseIfExpressionAccess().getGroup()); }
(rule__ElseIfExpression__Group__0)
{ after(grammarAccess.getElseIfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyValue
entryRulePropertyValue 
:
{ before(grammarAccess.getPropertyValueRule()); }
	 rulePropertyValue
{ after(grammarAccess.getPropertyValueRule()); } 
	 EOF 
;

// Rule PropertyValue
rulePropertyValue 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyValueAccess().getGroup()); }
(rule__PropertyValue__Group__0)
{ after(grammarAccess.getPropertyValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableValue
entryRuleVariableValue 
:
{ before(grammarAccess.getVariableValueRule()); }
	 ruleVariableValue
{ after(grammarAccess.getVariableValueRule()); } 
	 EOF 
;

// Rule VariableValue
ruleVariableValue 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableValueAccess().getGroup()); }
(rule__VariableValue__Group__0)
{ after(grammarAccess.getVariableValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeywordVariables
entryRuleKeywordVariables 
:
{ before(grammarAccess.getKeywordVariablesRule()); }
	 ruleKeywordVariables
{ after(grammarAccess.getKeywordVariablesRule()); } 
	 EOF 
;

// Rule KeywordVariables
ruleKeywordVariables 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeywordVariablesAccess().getGroup()); }
(rule__KeywordVariables__Group__0)
{ after(grammarAccess.getKeywordVariablesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureCall
entryRuleFeatureCall 
:
{ before(grammarAccess.getFeatureCallRule()); }
	 ruleFeatureCall
{ after(grammarAccess.getFeatureCallRule()); } 
	 EOF 
;

// Rule FeatureCall
ruleFeatureCall 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall()); }
	ruleOperationCall
{ after(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationCall
entryRuleOperationCall 
:
{ before(grammarAccess.getOperationCallRule()); }
	 ruleOperationCall
{ after(grammarAccess.getOperationCallRule()); } 
	 EOF 
;

// Rule OperationCall
ruleOperationCall 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationCallAccess().getGroup()); }
(rule__OperationCall__Group__0)
{ after(grammarAccess.getOperationCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructorCallExpression
entryRuleConstructorCallExpression 
:
{ before(grammarAccess.getConstructorCallExpressionRule()); }
	 ruleConstructorCallExpression
{ after(grammarAccess.getConstructorCallExpressionRule()); } 
	 EOF 
;

// Rule ConstructorCallExpression
ruleConstructorCallExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorCallExpressionAccess().getGroup()); }
(rule__ConstructorCallExpression__Group__0)
{ after(grammarAccess.getConstructorCallExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContext
entryRuleContext 
:
{ before(grammarAccess.getContextRule()); }
	 ruleContext
{ after(grammarAccess.getContextRule()); } 
	 EOF 
;

// Rule Context
ruleContext 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContextAccess().getGroup()); }
(rule__Context__Group__0)
{ after(grammarAccess.getContextAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContextSelector
entryRuleContextSelector 
:
{ before(grammarAccess.getContextSelectorRule()); }
	 ruleContextSelector
{ after(grammarAccess.getContextSelectorRule()); } 
	 EOF 
;

// Rule ContextSelector
ruleContextSelector 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContextSelectorAccess().getAlternatives()); }
(rule__ContextSelector__Alternatives)
{ after(grammarAccess.getContextSelectorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeRefSelector
entryRuleTypeRefSelector 
:
{ before(grammarAccess.getTypeRefSelectorRule()); }
	 ruleTypeRefSelector
{ after(grammarAccess.getTypeRefSelectorRule()); } 
	 EOF 
;

// Rule TypeRefSelector
ruleTypeRefSelector 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeRefSelectorAccess().getTypeAssignment()); }
(rule__TypeRefSelector__TypeAssignment)
{ after(grammarAccess.getTypeRefSelectorAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionSelector
entryRuleExpressionSelector 
:
{ before(grammarAccess.getExpressionSelectorRule()); }
	 ruleExpressionSelector
{ after(grammarAccess.getExpressionSelectorRule()); } 
	 EOF 
;

// Rule ExpressionSelector
ruleExpressionSelector 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionSelectorAccess().getExprAssignment()); }
(rule__ExpressionSelector__ExprAssignment)
{ after(grammarAccess.getExpressionSelectorAccess().getExprAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitSelector
entryRuleUnitSelector 
:
{ before(grammarAccess.getUnitSelectorRule()); }
	 ruleUnitSelector
{ after(grammarAccess.getUnitSelectorRule()); } 
	 EOF 
;

// Rule UnitSelector
ruleUnitSelector 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitSelectorAccess().getGroup()); }
(rule__UnitSelector__Group__0)
{ after(grammarAccess.getUnitSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContextBlock
entryRuleContextBlock 
:
{ before(grammarAccess.getContextBlockRule()); }
	 ruleContextBlock
{ after(grammarAccess.getContextBlockRule()); } 
	 EOF 
;

// Rule ContextBlock
ruleContextBlock 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContextBlockAccess().getGroup()); }
(rule__ContextBlock__Group__0)
{ after(grammarAccess.getContextBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition 
:
{ before(grammarAccess.getFunctionDefinitionRule()); }
	 ruleFunctionDefinition
{ after(grammarAccess.getFunctionDefinitionRule()); } 
	 EOF 
;

// Rule FunctionDefinition
ruleFunctionDefinition 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
(rule__FunctionDefinition__Group__0)
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralList
entryRuleLiteralList 
:
{ before(grammarAccess.getLiteralListRule()); }
	 ruleLiteralList
{ after(grammarAccess.getLiteralListRule()); } 
	 EOF 
;

// Rule LiteralList
ruleLiteralList 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralListAccess().getAlternatives()); }
(rule__LiteralList__Alternatives)
{ after(grammarAccess.getLiteralListAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralMap
entryRuleLiteralMap 
:
{ before(grammarAccess.getLiteralMapRule()); }
	 ruleLiteralMap
{ after(grammarAccess.getLiteralMapRule()); } 
	 EOF 
;

// Rule LiteralMap
ruleLiteralMap 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralMapAccess().getAlternatives()); }
(rule__LiteralMap__Alternatives)
{ after(grammarAccess.getLiteralMapAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralFunction
entryRuleLiteralFunction 
:
{ before(grammarAccess.getLiteralFunctionRule()); }
	 ruleLiteralFunction
{ after(grammarAccess.getLiteralFunctionRule()); } 
	 EOF 
;

// Rule LiteralFunction
ruleLiteralFunction 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralFunctionAccess().getGroup()); }
(rule__LiteralFunction__Group__0)
{ after(grammarAccess.getLiteralFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClosureExpression
entryRuleClosureExpression 
:
{ before(grammarAccess.getClosureExpressionRule()); }
	 ruleClosureExpression
{ after(grammarAccess.getClosureExpressionRule()); } 
	 EOF 
;

// Rule ClosureExpression
ruleClosureExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClosureExpressionAccess().getGroup()); }
(rule__ClosureExpression__Group__0)
{ after(grammarAccess.getClosureExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOneOrManyExpressions
entryRuleOneOrManyExpressions 
:
{ before(grammarAccess.getOneOrManyExpressionsRule()); }
	 ruleOneOrManyExpressions
{ after(grammarAccess.getOneOrManyExpressionsRule()); } 
	 EOF 
;

// Rule OneOrManyExpressions
ruleOneOrManyExpressions 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOneOrManyExpressionsAccess().getAlternatives()); }
(rule__OneOrManyExpressions__Alternatives)
{ after(grammarAccess.getOneOrManyExpressionsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlockExpressionWithoutBrackets
entryRuleBlockExpressionWithoutBrackets 
:
{ before(grammarAccess.getBlockExpressionWithoutBracketsRule()); }
	 ruleBlockExpressionWithoutBrackets
{ after(grammarAccess.getBlockExpressionWithoutBracketsRule()); } 
	 EOF 
;

// Rule BlockExpressionWithoutBrackets
ruleBlockExpressionWithoutBrackets 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup()); }
(rule__BlockExpressionWithoutBrackets__Group__0)
{ after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMapEntry
entryRuleMapEntry 
:
{ before(grammarAccess.getMapEntryRule()); }
	 ruleMapEntry
{ after(grammarAccess.getMapEntryRule()); } 
	 EOF 
;

// Rule MapEntry
ruleMapEntry 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapEntryAccess().getGroup()); }
(rule__MapEntry__Group__0)
{ after(grammarAccess.getMapEntryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyLiteral
entryRuleKeyLiteral 
:
{ before(grammarAccess.getKeyLiteralRule()); }
	 ruleKeyLiteral
{ after(grammarAccess.getKeyLiteralRule()); } 
	 EOF 
;

// Rule KeyLiteral
ruleKeyLiteral 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyLiteralAccess().getGroup()); }
(rule__KeyLiteral__Group__0)
{ after(grammarAccess.getKeyLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralType
entryRuleLiteralType 
:
{ before(grammarAccess.getLiteralTypeRule()); }
	 ruleLiteralType
{ after(grammarAccess.getLiteralTypeRule()); } 
	 EOF 
;

// Rule LiteralType
ruleLiteralType 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralTypeAccess().getGroup()); }
(rule__LiteralType__Group__0)
{ after(grammarAccess.getLiteralTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueLiteral
entryRuleValueLiteral 
:
{ before(grammarAccess.getValueLiteralRule()); }
	 ruleValueLiteral
{ after(grammarAccess.getValueLiteralRule()); } 
	 EOF 
;

// Rule ValueLiteral
ruleValueLiteral 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueLiteralAccess().getAlternatives()); }
(rule__ValueLiteral__Alternatives)
{ after(grammarAccess.getValueLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getGroup()); }
(rule__BooleanLiteral__Group__0)
{ after(grammarAccess.getBooleanLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral 
:
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerLiteralAccess().getGroup()); }
(rule__IntegerLiteral__Group__0)
{ after(grammarAccess.getIntegerLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitLiteral
entryRuleUnitLiteral 
:
{ before(grammarAccess.getUnitLiteralRule()); }
	 ruleUnitLiteral
{ after(grammarAccess.getUnitLiteralRule()); } 
	 EOF 
;

// Rule UnitLiteral
ruleUnitLiteral 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitLiteralAccess().getGroup()); }
(rule__UnitLiteral__Group__0)
{ after(grammarAccess.getUnitLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getGroup()); }
(rule__StringLiteral__Group__0)
{ after(grammarAccess.getStringLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealLiteral
entryRuleRealLiteral 
:
{ before(grammarAccess.getRealLiteralRule()); }
	 ruleRealLiteral
{ after(grammarAccess.getRealLiteralRule()); } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRealLiteralAccess().getGroup()); }
(rule__RealLiteral__Group__0)
{ after(grammarAccess.getRealLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegexpLiteral
entryRuleRegexpLiteral 
:
{ before(grammarAccess.getRegexpLiteralRule()); }
	 ruleRegexpLiteral
{ after(grammarAccess.getRegexpLiteralRule()); } 
	 EOF 
;

// Rule RegexpLiteral
ruleRegexpLiteral 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegexpLiteralAccess().getGroup()); }
(rule__RegexpLiteral__Group__0)
{ after(grammarAccess.getRegexpLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullLiteral
entryRuleNullLiteral 
:
{ before(grammarAccess.getNullLiteralRule()); }
	 ruleNullLiteral
{ after(grammarAccess.getNullLiteralRule()); } 
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullLiteralAccess().getGroup()); }
(rule__NullLiteral__Group__0)
{ after(grammarAccess.getNullLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanValue
entryRuleBooleanValue 
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanValueAccess().getAlternatives()); }
(rule__BooleanValue__Alternatives)
{ after(grammarAccess.getBooleanValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealValue
entryRuleRealValue 
:
{ before(grammarAccess.getRealValueRule()); }
	 ruleRealValue
{ after(grammarAccess.getRealValueRule()); } 
	 EOF 
;

// Rule RealValue
ruleRealValue 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRealValueAccess().getREALParserRuleCall()); }
	ruleREAL
{ after(grammarAccess.getRealValueAccess().getREALParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntValue
entryRuleIntValue 
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntValueAccess().getAlternatives()); }
(rule__IntValue__Alternatives)
{ after(grammarAccess.getIntValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParanthesizedExpression
entryRuleParanthesizedExpression 
:
{ before(grammarAccess.getParanthesizedExpressionRule()); }
	 ruleParanthesizedExpression
{ after(grammarAccess.getParanthesizedExpressionRule()); } 
	 EOF 
;

// Rule ParanthesizedExpression
ruleParanthesizedExpression 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParanthesizedExpressionAccess().getGroup()); }
(rule__ParanthesizedExpression__Group__0)
{ after(grammarAccess.getParanthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVersion
entryRuleVersion 
:
{ before(grammarAccess.getVersionRule()); }
	 ruleVersion
{ after(grammarAccess.getVersionRule()); } 
	 EOF 
;

// Rule Version
ruleVersion 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVersionAccess().getVersionAssignment()); }
(rule__Version__VersionAssignment)
{ after(grammarAccess.getVersionAccess().getVersionAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVersionLiteral
entryRuleVersionLiteral 
:
{ before(grammarAccess.getVersionLiteralRule()); }
	 ruleVersionLiteral
{ after(grammarAccess.getVersionLiteralRule()); } 
	 EOF 
;

// Rule VersionLiteral
ruleVersionLiteral 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVersionLiteralAccess().getAlternatives()); }
(rule__VersionLiteral__Alternatives)
{ after(grammarAccess.getVersionLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVersionRange
entryRuleVersionRange 
:
{ before(grammarAccess.getVersionRangeRule()); }
	 ruleVersionRange
{ after(grammarAccess.getVersionRangeRule()); } 
	 EOF 
;

// Rule VersionRange
ruleVersionRange 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVersionRangeAccess().getRangeAssignment()); }
(rule__VersionRange__RangeAssignment)
{ after(grammarAccess.getVersionRangeAccess().getRangeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVersionRangeLiteral
entryRuleVersionRangeLiteral 
:
{ before(grammarAccess.getVersionRangeLiteralRule()); }
	 ruleVersionRangeLiteral
{ after(grammarAccess.getVersionRangeLiteralRule()); } 
	 EOF 
;

// Rule VersionRangeLiteral
ruleVersionRangeLiteral 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVersionRangeLiteralAccess().getAlternatives()); }
(rule__VersionRangeLiteral__Alternatives)
{ after(grammarAccess.getVersionRangeLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQIDREF
entryRuleQIDREF 
:
{ before(grammarAccess.getQIDREFRule()); }
	 ruleQIDREF
{ after(grammarAccess.getQIDREFRule()); } 
	 EOF 
;

// Rule QIDREF
ruleQIDREF 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQIDREFAccess().getAlternatives()); }
(rule__QIDREF__Alternatives)
{ after(grammarAccess.getQIDREFAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQID
entryRuleQID 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getQIDRule()); }
	 ruleQID
{ after(grammarAccess.getQIDRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QID
ruleQID 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQIDAccess().getGroup()); }
(rule__QID__Group__0)
{ after(grammarAccess.getQIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulePropertyName
entryRulePropertyName 
:
{ before(grammarAccess.getPropertyNameRule()); }
	 rulePropertyName
{ after(grammarAccess.getPropertyNameRule()); } 
	 EOF 
;

// Rule PropertyName
rulePropertyName 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyNameAccess().getPIDTerminalRuleCall()); }
	RULE_PID
{ after(grammarAccess.getPropertyNameAccess().getPIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEscapedQualifiedName
entryRuleEscapedQualifiedName 
:
{ before(grammarAccess.getEscapedQualifiedNameRule()); }
	 ruleEscapedQualifiedName
{ after(grammarAccess.getEscapedQualifiedNameRule()); } 
	 EOF 
;

// Rule EscapedQualifiedName
ruleEscapedQualifiedName 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEscapedQualifiedNameAccess().getAlternatives()); }
(rule__EscapedQualifiedName__Alternatives)
{ after(grammarAccess.getEscapedQualifiedNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceName
entryRuleInterfaceName 
:
{ before(grammarAccess.getInterfaceNameRule()); }
	 ruleInterfaceName
{ after(grammarAccess.getInterfaceNameRule()); } 
	 EOF 
;

// Rule InterfaceName
ruleInterfaceName 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceNameAccess().getQIDParserRuleCall()); }
	ruleQID
{ after(grammarAccess.getInterfaceNameAccess().getQIDParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompoundName
entryRuleCompoundName 
:
{ before(grammarAccess.getCompoundNameRule()); }
	 ruleCompoundName
{ after(grammarAccess.getCompoundNameRule()); } 
	 EOF 
;

// Rule CompoundName
ruleCompoundName 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompoundNameAccess().getGroup()); }
(rule__CompoundName__Group__0)
{ after(grammarAccess.getCompoundNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitName
entryRuleUnitName 
:
{ before(grammarAccess.getUnitNameRule()); }
	 ruleUnitName
{ after(grammarAccess.getUnitNameRule()); } 
	 EOF 
;

// Rule UnitName
ruleUnitName 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitNameAccess().getEscapedQualifiedNameParserRuleCall()); }
	ruleEscapedQualifiedName
{ after(grammarAccess.getUnitNameAccess().getEscapedQualifiedNameParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePartName
entryRulePartName 
:
{ before(grammarAccess.getPartNameRule()); }
	 rulePartName
{ after(grammarAccess.getPartNameRule()); } 
	 EOF 
;

// Rule PartName
rulePartName 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPartNameAccess().getEscapedQualifiedNameParserRuleCall()); }
	ruleEscapedQualifiedName
{ after(grammarAccess.getPartNameAccess().getEscapedQualifiedNameParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSeparator
entryRuleSeparator 
:
{ before(grammarAccess.getSeparatorRule()); }
	 ruleSeparator
{ after(grammarAccess.getSeparatorRule()); } 
	 EOF 
;

// Rule Separator
ruleSeparator 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSeparatorAccess().getAlternatives()); }
(rule__Separator__Alternatives)
{ after(grammarAccess.getSeparatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlfanumSym
entryRuleAlfanumSym 
:
{ before(grammarAccess.getAlfanumSymRule()); }
	 ruleAlfanumSym
{ after(grammarAccess.getAlfanumSymRule()); } 
	 EOF 
;

// Rule AlfanumSym
ruleAlfanumSym 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlfanumSymAccess().getGroup()); }
(rule__AlfanumSym__Group__0)
{ after(grammarAccess.getAlfanumSymAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleREAL
entryRuleREAL 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getREALRule()); }
	 ruleREAL
{ after(grammarAccess.getREALRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule REAL
ruleREAL 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getREALAccess().getGroup()); }
(rule__REAL__Group__0)
{ after(grammarAccess.getREALAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}




// Rule Visibility
ruleVisibility
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getAlternatives()); }
(rule__Visibility__Alternatives)
{ after(grammarAccess.getVisibilityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ExecutionMode
ruleExecutionMode
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionModeAccess().getAlternatives()); }
(rule__ExecutionMode__Alternatives)
{ after(grammarAccess.getExecutionModeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__BeeModel__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeeModelAccess().getFunctionsAssignment_1_0()); }
(rule__BeeModel__FunctionsAssignment_1_0)
{ after(grammarAccess.getBeeModelAccess().getFunctionsAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getBeeModelAccess().getConcernAssignment_1_1()); }
(rule__BeeModel__ConcernAssignment_1_1)
{ after(grammarAccess.getBeeModelAccess().getConcernAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getBeeModelAccess().getGroup_1_2()); }
(rule__BeeModel__Group_1_2__0)
{ after(grammarAccess.getBeeModelAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Alternatives_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getGroup_9_0()); }
(rule__Unit__Group_9_0__0)
{ after(grammarAccess.getUnitAccess().getGroup_9_0()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_9_1()); }
(rule__Unit__Group_9_1__0)
{ after(grammarAccess.getUnitAccess().getGroup_9_1()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_9_2()); }
(rule__Unit__Group_9_2__0)
{ after(grammarAccess.getUnitAccess().getGroup_9_2()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_9_3()); }
(rule__Unit__Group_9_3__0)
{ after(grammarAccess.getUnitAccess().getGroup_9_3()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_9_4()); }
(rule__Unit__Group_9_4__0)
{ after(grammarAccess.getUnitAccess().getGroup_9_4()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_9_5()); }
(rule__Unit__Group_9_5__0)
{ after(grammarAccess.getUnitAccess().getGroup_9_5()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getConcernsAssignment_9_6()); }
(rule__Unit__ConcernsAssignment_9_6)
{ after(grammarAccess.getUnitAccess().getConcernsAssignment_9_6()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_9_7()); }
(rule__Unit__Group_9_7__0)
{ after(grammarAccess.getUnitAccess().getGroup_9_7()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_9_8()); }
(rule__Unit__Group_9_8__0)
{ after(grammarAccess.getUnitAccess().getGroup_9_8()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getBuildersAssignment_9_9()); }
(rule__Unit__BuildersAssignment_9_9)
{ after(grammarAccess.getUnitAccess().getBuildersAssignment_9_9()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getFunctionsAssignment_9_10()); }
(rule__Unit__FunctionsAssignment_9_10)
{ after(grammarAccess.getUnitAccess().getFunctionsAssignment_9_10()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_9_11()); }
(rule__Unit__Group_9_11__0)
{ after(grammarAccess.getUnitAccess().getGroup_9_11()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_9_12()); }
(rule__Unit__Group_9_12__0)
{ after(grammarAccess.getUnitAccess().getGroup_9_12()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_9_13()); }
(rule__Unit__Group_9_13__0)
{ after(grammarAccess.getUnitAccess().getGroup_9_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyOperationAccess().getConditionalPropertyOperationParserRuleCall_0()); }
	ruleConditionalPropertyOperation
{ after(grammarAccess.getPropertyOperationAccess().getConditionalPropertyOperationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyOperationAccess().getPropertyDefinitionOperationParserRuleCall_1()); }
	rulePropertyDefinitionOperation
{ after(grammarAccess.getPropertyOperationAccess().getPropertyDefinitionOperationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPropertyOperationAccess().getPropertySetOperationParserRuleCall_2()); }
	rulePropertySetOperation
{ after(grammarAccess.getPropertyOperationAccess().getPropertySetOperationParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalPropertyOperation__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalPropertyOperationAccess().getBodyAssignment_5_0()); }
(rule__ConditionalPropertyOperation__BodyAssignment_5_0)
{ after(grammarAccess.getConditionalPropertyOperationAccess().getBodyAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getConditionalPropertyOperationAccess().getBodyAssignment_5_1()); }
(rule__ConditionalPropertyOperation__BodyAssignment_5_1)
{ after(grammarAccess.getConditionalPropertyOperationAccess().getBodyAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinitionOperation__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionOperationAccess().getDefinitionAssignment_1_0()); }
(rule__PropertyDefinitionOperation__DefinitionAssignment_1_0)
{ after(grammarAccess.getPropertyDefinitionOperationAccess().getDefinitionAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getPropertyDefinitionOperationAccess().getDefinitionAssignment_1_1()); }
(rule__PropertyDefinitionOperation__DefinitionAssignment_1_1)
{ after(grammarAccess.getPropertyDefinitionOperationAccess().getDefinitionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedPart__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedPartAccess().getGroup_0()); }
(rule__SynchronizedPart__Group_0__0)
{ after(grammarAccess.getSynchronizedPartAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSynchronizedPartAccess().getPartNameParserRuleCall_1()); }
	rulePartName
{ after(grammarAccess.getSynchronizedPartAccess().getPartNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathVectorElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathVectorElementAccess().getFilteredPathVectorParserRuleCall_0()); }
	ruleFilteredPathVector
{ after(grammarAccess.getPathVectorElementAccess().getFilteredPathVectorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPathVectorElementAccess().getBasePathVectorParserRuleCall_1()); }
	ruleBasePathVector
{ after(grammarAccess.getPathVectorElementAccess().getBasePathVectorParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPathVectorElementAccess().getUnbasedPathVectorParserRuleCall_2()); }
	ruleUnbasedPathVector
{ after(grammarAccess.getPathVectorElementAccess().getUnbasedPathVectorParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilteredPathVector__BodyAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilteredPathVectorAccess().getBodyBasePathVectorParserRuleCall_2_0_0()); }
	ruleBasePathVector
{ after(grammarAccess.getFilteredPathVectorAccess().getBodyBasePathVectorParserRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getFilteredPathVectorAccess().getBodyUnbasedPathVectorParserRuleCall_2_0_1()); }
	ruleUnbasedPathVector
{ after(grammarAccess.getFilteredPathVectorAccess().getBodyUnbasedPathVectorParserRuleCall_2_0_1()); }
)

    |(
{ before(grammarAccess.getFilteredPathVectorAccess().getBodyCompoundPathVectorParserRuleCall_2_0_2()); }
	ruleCompoundPathVector
{ after(grammarAccess.getFilteredPathVectorAccess().getBodyCompoundPathVectorParserRuleCall_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPathAccess().getGroup_1()); }
(rule__Path__Group_1__0)
{ after(grammarAccess.getPathAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithClause__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getGroup_3_0()); }
(rule__WithClause__Group_3_0__0)
{ after(grammarAccess.getWithClauseAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getWithClauseAccess().getGroup_3_1()); }
(rule__WithClause__Group_3_1__0)
{ after(grammarAccess.getWithClauseAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrerequisiteEntry__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteEntryAccess().getDirectPartReferemceParserRuleCall_0()); }
	ruleDirectPartReferemce
{ after(grammarAccess.getPrerequisiteEntryAccess().getDirectPartReferemceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrerequisiteEntryAccess().getCapabilityReferencedPartParserRuleCall_1()); }
	ruleCapabilityReferencedPart
{ after(grammarAccess.getPrerequisiteEntryAccess().getCapabilityReferencedPartParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrerequisiteEntryAccess().getCompoundReferencesParserRuleCall_2()); }
	ruleCompoundReferences
{ after(grammarAccess.getPrerequisiteEntryAccess().getCompoundReferencesParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectPartReferemce__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectPartReferemceAccess().getUnitAssignment_0_0()); }
(rule__DirectPartReferemce__UnitAssignment_0_0)
{ after(grammarAccess.getDirectPartReferemceAccess().getUnitAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getDirectPartReferemceAccess().getUnitAssignment_0_1()); }
(rule__DirectPartReferemce__UnitAssignment_0_1)
{ after(grammarAccess.getDirectPartReferemceAccess().getUnitAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FirstParameter__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFirstParameterAccess().getClosureParameterParserRuleCall_0()); }
	ruleClosureParameter
{ after(grammarAccess.getFirstParameterAccess().getClosureParameterParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFirstParameterAccess().getParameterParserRuleCall_1()); }
	ruleParameter
{ after(grammarAccess.getFirstParameterAccess().getParameterParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclarationList__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationListAccess().getGroup_0()); }
(rule__ParameterDeclarationList__Group_0__0)
{ after(grammarAccess.getParameterDeclarationListAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_1()); }
(rule__ParameterDeclarationList__ParamsAssignment_1)
{ after(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryConfiguration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryConfigurationAccess().getRepositoryDeclarationParserRuleCall_0()); }
	ruleRepositoryDeclaration
{ after(grammarAccess.getRepositoryConfigurationAccess().getRepositoryDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRepositoryConfigurationAccess().getResolutionStrategyParserRuleCall_1()); }
	ruleResolutionStrategy
{ after(grammarAccess.getRepositoryConfigurationAccess().getResolutionStrategyParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryDeclarationAccess().getLocationAssignment_1_0()); }
(rule__RepositoryDeclaration__LocationAssignment_1_0)
{ after(grammarAccess.getRepositoryDeclarationAccess().getLocationAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getRepositoryDeclarationAccess().getGroup_1_1()); }
(rule__RepositoryDeclaration__Group_1_1__0)
{ after(grammarAccess.getRepositoryDeclarationAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategy__StrategyAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResolutionStrategyAccess().getStrategySelectFirstKeyword_0_0_0()); }

	'select-first' 

{ after(grammarAccess.getResolutionStrategyAccess().getStrategySelectFirstKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getResolutionStrategyAccess().getStrategySelectBestKeyword_0_0_1()); }

	'select-best' 

{ after(grammarAccess.getResolutionStrategyAccess().getStrategySelectBestKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConcernBlock__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernBlockAccess().getContextsAssignment_3_0()); }
(rule__ConcernBlock__ContextsAssignment_3_0)
{ after(grammarAccess.getConcernBlockAccess().getContextsAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getConcernBlockAccess().getFunctionsAssignment_3_1()); }
(rule__ConcernBlock__FunctionsAssignment_3_1)
{ after(grammarAccess.getConcernBlockAccess().getFunctionsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Alternatives_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_9_0()); }
(rule__Function__Group_9_0__0)
{ after(grammarAccess.getFunctionAccess().getGroup_9_0()); }
)

    |(
{ before(grammarAccess.getFunctionAccess().getFuncExprAssignment_9_1()); }
(rule__Function__FuncExprAssignment_9_1)
{ after(grammarAccess.getFunctionAccess().getFuncExprAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1()); }

	'+=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2()); }

	'-=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_3()); }

	'*=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_4()); }

	'/=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_5()); }

	'%=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalOperatorAccess().getTildeEqualsSignKeyword_0()); }

	'~=' 

{ after(grammarAccess.getRelationalOperatorAccess().getTildeEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignKeyword_1()); }

	'==' 

{ after(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); }

	'===' 

{ after(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); }

	'!=' 

{ after(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignEqualsSignKeyword_4()); }

	'!==' 

{ after(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignEqualsSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_5()); }

	'>=' 

{ after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_5()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_6()); }

	'<=' 

{ after(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_6()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_7()); }

	'>' 

{ after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_7()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_8()); }

	'<' 

{ after(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0()); }
	ruleVarDeclaration
{ after(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTopLevelExpressionAccess().getValDeclarationParserRuleCall_1()); }
	ruleValDeclaration
{ after(grammarAccess.getTopLevelExpressionAccess().getValDeclarationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTopLevelExpressionAccess().getAssignmentExpressionParserRuleCall_2()); }
	ruleAssignmentExpression
{ after(grammarAccess.getTopLevelExpressionAccess().getAssignmentExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Alternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationAccess().getVarKeyword_2_0_0()); }

	'var' 

{ after(grammarAccess.getVarDeclarationAccess().getVarKeyword_2_0_0()); }
)

    |(
{ before(grammarAccess.getVarDeclarationAccess().getTypeAssignment_2_0_1()); }
(rule__VarDeclaration__TypeAssignment_2_0_1)
{ after(grammarAccess.getVarDeclarationAccess().getTypeAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefAccess().getClosureTypeRefParserRuleCall_0()); }
	ruleClosureTypeRef
{ after(grammarAccess.getTypeRefAccess().getClosureTypeRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeRefAccess().getSimpleTypeRefParserRuleCall_1()); }
	ruleSimpleTypeRef
{ after(grammarAccess.getTypeRefAccess().getSimpleTypeRefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WildcardRefParam__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardRefParamAccess().getGroup_2_0()); }
(rule__WildcardRefParam__Group_2_0__0)
{ after(grammarAccess.getWildcardRefParamAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getWildcardRefParamAccess().getGroup_2_1()); }
(rule__WildcardRefParam__Group_2_1__0)
{ after(grammarAccess.getWildcardRefParamAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CachedExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachedExpressionAccess().getGroup_0()); }
(rule__CachedExpression__Group_0__0)
{ after(grammarAccess.getCachedExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCachedExpressionAccess().getOrExpressionParserRuleCall_1()); }
	ruleOrExpression
{ after(grammarAccess.getCachedExpressionAccess().getOrExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__FunctionNameAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getFunctionNamePlusSignKeyword_1_1_0_0()); }

	'+' 

{ after(grammarAccess.getAdditiveExpressionAccess().getFunctionNamePlusSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditiveExpressionAccess().getFunctionNameHyphenMinusKeyword_1_1_0_1()); }

	'-' 

{ after(grammarAccess.getAdditiveExpressionAccess().getFunctionNameHyphenMinusKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAsteriskKeyword_1_1_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAsteriskKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameSolidusKeyword_1_1_0_1()); }

	'/' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameSolidusKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNamePercentSignKeyword_1_1_0_2()); }

	'%' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNamePercentSignKeyword_1_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOrInfixExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_0()); }
	rulePostopExpression
{ after(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_1()); }
	ruleUnaryExpression
{ after(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getUnaryOrInfixExpressionAccess().getPreopExpressionParserRuleCall_2()); }
	rulePreopExpression
{ after(grammarAccess.getUnaryOrInfixExpressionAccess().getPreopExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__FunctionNameAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getFunctionNameExclamationMarkKeyword_1_0_0()); }

	'!' 

{ after(grammarAccess.getUnaryExpressionAccess().getFunctionNameExclamationMarkKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getFunctionNameHyphenMinusKeyword_1_0_1()); }

	'-' 

{ after(grammarAccess.getUnaryExpressionAccess().getFunctionNameHyphenMinusKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreopExpression__FunctionNameAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_0_0()); }

	'++' 

{ after(grammarAccess.getPreopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getPreopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_0_1()); }

	'--' 

{ after(grammarAccess.getPreopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostopExpression__FunctionNameAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_1_0_0()); }

	'--' 

{ after(grammarAccess.getPostopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getPostopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_1_0_1()); }

	'++' 

{ after(grammarAccess.getPostopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); }
(rule__InfixExpression__Group_1_0__0)
{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_1()); }
(rule__InfixExpression__Group_1_1__0)
{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_2()); }
(rule__InfixExpression__Group_1_2__0)
{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0()); }
	ruleFeatureCall
{ after(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_1()); }
	ruleConstructorCallExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableValueParserRuleCall_2()); }
	ruleVariableValue
{ after(grammarAccess.getPrimaryExpressionAccess().getVariableValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3()); }
	ruleLiteral
{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getPropertyValueParserRuleCall_4()); }
	rulePropertyValue
{ after(grammarAccess.getPrimaryExpressionAccess().getPropertyValueParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getKeywordVariablesParserRuleCall_5()); }
	ruleKeywordVariables
{ after(grammarAccess.getPrimaryExpressionAccess().getKeywordVariablesParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_6()); }
	ruleParanthesizedExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getIfExpressionParserRuleCall_7()); }
	ruleIfExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getIfExpressionParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_8()); }
	ruleBlockExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getSwitchExpressionParserRuleCall_9()); }
	ruleSwitchExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getSwitchExpressionParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getThrowExpressionParserRuleCall_10()); }
	ruleThrowExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getThrowExpressionParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getTryCatchExpressionParserRuleCall_11()); }
	ruleTryCatchExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getTryCatchExpressionParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getWildcardExpressionParserRuleCall_12()); }
	ruleWildcardExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getWildcardExpressionParserRuleCall_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseExprAssignment_5_0()); }
(rule__IfExpression__ElseExprAssignment_5_0)
{ after(grammarAccess.getIfExpressionAccess().getElseExprAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getIfExpressionAccess().getGroup_5_1()); }
(rule__IfExpression__Group_5_1__0)
{ after(grammarAccess.getIfExpressionAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfExpression__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfExpressionAccess().getElseExprAssignment_5_0()); }
(rule__ElseIfExpression__ElseExprAssignment_5_0)
{ after(grammarAccess.getElseIfExpressionAccess().getElseExprAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getElseIfExpressionAccess().getGroup_5_1()); }
(rule__ElseIfExpression__Group_5_1__0)
{ after(grammarAccess.getElseIfExpressionAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordVariables__NameAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordVariablesAccess().getNameInputKeywordParserRuleCall_1_0_0()); }
	ruleInputKeyword
{ after(grammarAccess.getKeywordVariablesAccess().getNameInputKeywordParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getKeywordVariablesAccess().getNameOutputKeywordParserRuleCall_1_0_1()); }
	ruleOutputKeyword
{ after(grammarAccess.getKeywordVariablesAccess().getNameOutputKeywordParserRuleCall_1_0_1()); }
)

    |(
{ before(grammarAccess.getKeywordVariablesAccess().getNamePropertiesKeyword_1_0_2()); }

	'properties' 

{ after(grammarAccess.getKeywordVariablesAccess().getNamePropertiesKeyword_1_0_2()); }
)

    |(
{ before(grammarAccess.getKeywordVariablesAccess().getNameUnitKeyword_1_0_3()); }

	'unit' 

{ after(grammarAccess.getKeywordVariablesAccess().getNameUnitKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__NameAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getNameIDTerminalRuleCall_1_0_0()); }
	RULE_ID
{ after(grammarAccess.getOperationCallAccess().getNameIDTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getOperationCallAccess().getNamePIDTerminalRuleCall_1_0_1()); }
	RULE_PID
{ after(grammarAccess.getOperationCallAccess().getNamePIDTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContextSelector__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextSelectorAccess().getTypeRefSelectorParserRuleCall_0()); }
	ruleTypeRefSelector
{ after(grammarAccess.getContextSelectorAccess().getTypeRefSelectorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getContextSelectorAccess().getExpressionSelectorParserRuleCall_1()); }
	ruleExpressionSelector
{ after(grammarAccess.getContextSelectorAccess().getExpressionSelectorParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getContextSelectorAccess().getUnitSelectorParserRuleCall_2()); }
	ruleUnitSelector
{ after(grammarAccess.getContextSelectorAccess().getUnitSelectorParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitSelector__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitSelectorAccess().getNameAssignment_2_1_0()); }
(rule__UnitSelector__NameAssignment_2_1_0)
{ after(grammarAccess.getUnitSelectorAccess().getNameAssignment_2_1_0()); }
)

    |(
{ before(grammarAccess.getUnitSelectorAccess().getNamePatternAssignment_2_1_1()); }
(rule__UnitSelector__NamePatternAssignment_2_1_1)
{ after(grammarAccess.getUnitSelectorAccess().getNamePatternAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContextBlock__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextBlockAccess().getExpressionsAssignment_2_0()); }
(rule__ContextBlock__ExpressionsAssignment_2_0)
{ after(grammarAccess.getContextBlockAccess().getExpressionsAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getContextBlockAccess().getGroup_2_1()); }
(rule__ContextBlock__Group_2_1__0)
{ after(grammarAccess.getContextBlockAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0()); }
	ruleValueLiteral
{ after(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getRegexpLiteralParserRuleCall_1()); }
	ruleRegexpLiteral
{ after(grammarAccess.getLiteralAccess().getRegexpLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getLiteralMapParserRuleCall_2()); }
	ruleLiteralMap
{ after(grammarAccess.getLiteralAccess().getLiteralMapParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getLiteralListParserRuleCall_3()); }
	ruleLiteralList
{ after(grammarAccess.getLiteralAccess().getLiteralListParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getLiteralFunctionParserRuleCall_4()); }
	ruleLiteralFunction
{ after(grammarAccess.getLiteralAccess().getLiteralFunctionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralList__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getGroup_0()); }
(rule__LiteralList__Group_0__0)
{ after(grammarAccess.getLiteralListAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLiteralListAccess().getGroup_1()); }
(rule__LiteralList__Group_1__0)
{ after(grammarAccess.getLiteralListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralMap__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getGroup_0()); }
(rule__LiteralMap__Group_0__0)
{ after(grammarAccess.getLiteralMapAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLiteralMapAccess().getGroup_1()); }
(rule__LiteralMap__Group_1__0)
{ after(grammarAccess.getLiteralMapAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneOrManyExpressions__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0()); }
	ruleBlockExpressionWithoutBrackets
{ after(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOneOrManyExpressionsAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getOneOrManyExpressionsAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyLiteral__ValueAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyLiteralAccess().getValueIDTerminalRuleCall_1_0_0()); }
	RULE_ID
{ after(grammarAccess.getKeyLiteralAccess().getValueIDTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getKeyLiteralAccess().getValuePIDTerminalRuleCall_1_0_1()); }
	RULE_PID
{ after(grammarAccess.getKeyLiteralAccess().getValuePIDTerminalRuleCall_1_0_1()); }
)

    |(
{ before(grammarAccess.getKeyLiteralAccess().getValueSTRINGTerminalRuleCall_1_0_2()); }
	RULE_STRING
{ after(grammarAccess.getKeyLiteralAccess().getValueSTRINGTerminalRuleCall_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueLiteralAccess().getBooleanLiteralParserRuleCall_0()); }
	ruleBooleanLiteral
{ after(grammarAccess.getValueLiteralAccess().getBooleanLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueLiteralAccess().getRealLiteralParserRuleCall_1()); }
	ruleRealLiteral
{ after(grammarAccess.getValueLiteralAccess().getRealLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueLiteralAccess().getIntegerLiteralParserRuleCall_2()); }
	ruleIntegerLiteral
{ after(grammarAccess.getValueLiteralAccess().getIntegerLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValueLiteralAccess().getNullLiteralParserRuleCall_3()); }
	ruleNullLiteral
{ after(grammarAccess.getValueLiteralAccess().getNullLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getValueLiteralAccess().getStringLiteralParserRuleCall_4()); }
	ruleStringLiteral
{ after(grammarAccess.getValueLiteralAccess().getStringLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getValueLiteralAccess().getUnitLiteralParserRuleCall_5()); }
	ruleUnitLiteral
{ after(grammarAccess.getValueLiteralAccess().getUnitLiteralParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getBooleanValueAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBooleanValueAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBooleanValueAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getIntValueAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIntValueAccess().getHEXTerminalRuleCall_1()); }
	RULE_HEX
{ after(grammarAccess.getIntValueAccess().getHEXTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VersionLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionLiteralAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getVersionLiteralAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVersionLiteralAccess().getAlfanumSymParserRuleCall_1()); }
	ruleAlfanumSym
{ after(grammarAccess.getVersionLiteralAccess().getAlfanumSymParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VersionRangeLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeLiteralAccess().getGroup_0()); }
(rule__VersionRangeLiteral__Group_0__0)
{ after(grammarAccess.getVersionRangeLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_1()); }
(rule__VersionRangeLiteral__Alternatives_1)
{ after(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VersionRangeLiteral__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeLiteralAccess().getLeftSquareBracketKeyword_0_0_0()); }

	'[' 

{ after(grammarAccess.getVersionRangeLiteralAccess().getLeftSquareBracketKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getVersionRangeLiteralAccess().getLeftParenthesisKeyword_0_0_1()); }

	'(' 

{ after(grammarAccess.getVersionRangeLiteralAccess().getLeftParenthesisKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VersionRangeLiteral__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeLiteralAccess().getSTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING
{ after(grammarAccess.getVersionRangeLiteralAccess().getSTRINGTerminalRuleCall_0_1_0()); }
)

    |(
{ before(grammarAccess.getVersionRangeLiteralAccess().getAlfanumSymParserRuleCall_0_1_1()); }
	ruleAlfanumSym
{ after(grammarAccess.getVersionRangeLiteralAccess().getAlfanumSymParserRuleCall_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VersionRangeLiteral__Alternatives_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeLiteralAccess().getSTRINGTerminalRuleCall_0_2_1_0()); }
	RULE_STRING
{ after(grammarAccess.getVersionRangeLiteralAccess().getSTRINGTerminalRuleCall_0_2_1_0()); }
)

    |(
{ before(grammarAccess.getVersionRangeLiteralAccess().getAlfanumSymParserRuleCall_0_2_1_1()); }
	ruleAlfanumSym
{ after(grammarAccess.getVersionRangeLiteralAccess().getAlfanumSymParserRuleCall_0_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VersionRangeLiteral__Alternatives_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeLiteralAccess().getRightSquareBracketKeyword_0_3_0()); }

	']' 

{ after(grammarAccess.getVersionRangeLiteralAccess().getRightSquareBracketKeyword_0_3_0()); }
)

    |(
{ before(grammarAccess.getVersionRangeLiteralAccess().getRightParenthesisKeyword_0_3_1()); }

	')' 

{ after(grammarAccess.getVersionRangeLiteralAccess().getRightParenthesisKeyword_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VersionRangeLiteral__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeLiteralAccess().getSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING
{ after(grammarAccess.getVersionRangeLiteralAccess().getSTRINGTerminalRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getVersionRangeLiteralAccess().getAlfanumSymParserRuleCall_1_1()); }
	ruleAlfanumSym
{ after(grammarAccess.getVersionRangeLiteralAccess().getAlfanumSymParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QIDREF__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDREFAccess().getGroup_0()); }
(rule__QIDREF__Group_0__0)
{ after(grammarAccess.getQIDREFAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getQIDREFAccess().getQIDParserRuleCall_1()); }
	ruleQID
{ after(grammarAccess.getQIDREFAccess().getQIDParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QIDREF__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDREFAccess().getSuperKeyword_0_0_0()); }

	'super' 

{ after(grammarAccess.getQIDREFAccess().getSuperKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getQIDREFAccess().getGroup_0_0_1()); }
(rule__QIDREF__Group_0_0_1__0)
{ after(grammarAccess.getQIDREFAccess().getGroup_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QIDREF__Alternatives_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDREFAccess().getUnitKeyword_0_0_1_0_0()); }

	'unit' 

{ after(grammarAccess.getQIDREFAccess().getUnitKeyword_0_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getQIDREFAccess().getThisKeyword_0_0_1_0_1()); }

	'this' 

{ after(grammarAccess.getQIDREFAccess().getThisKeyword_0_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QID__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
{ after(grammarAccess.getQIDAccess().getINTTerminalRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_1_1()); }
	RULE_HEX
{ after(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_1_2()); }
	RULE_ID
{ after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QID__Alternatives_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDAccess().getINTTerminalRuleCall_2_2_0()); }
	RULE_INT
{ after(grammarAccess.getQIDAccess().getINTTerminalRuleCall_2_2_0()); }
)

    |(
{ before(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_2_2_1()); }
	RULE_HEX
{ after(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_2_2_1()); }
)

    |(
{ before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_2_2()); }
	RULE_ID
{ after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EscapedQualifiedName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEscapedQualifiedNameAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEscapedQualifiedNameAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEscapedQualifiedNameAccess().getQIDParserRuleCall_1()); }
	ruleQID
{ after(grammarAccess.getEscapedQualifiedNameAccess().getQIDParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Separator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSeparatorAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getSeparatorAccess().getFullStopKeyword_0()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getSeparatorAccess().getHyphenMinusKeyword_1()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getExclamationMarkKeyword_2()); }

	'!' 

{ after(grammarAccess.getSeparatorAccess().getExclamationMarkKeyword_2()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getCommercialAtKeyword_3()); }

	'@' 

{ after(grammarAccess.getSeparatorAccess().getCommercialAtKeyword_3()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getDollarSignKeyword_4()); }

	'$' 

{ after(grammarAccess.getSeparatorAccess().getDollarSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getPercentSignKeyword_5()); }

	'%' 

{ after(grammarAccess.getSeparatorAccess().getPercentSignKeyword_5()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getAmpersandKeyword_6()); }

	'&' 

{ after(grammarAccess.getSeparatorAccess().getAmpersandKeyword_6()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getPlusSignKeyword_7()); }

	'+' 

{ after(grammarAccess.getSeparatorAccess().getPlusSignKeyword_7()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getEqualsSignKeyword_8()); }

	'=' 

{ after(grammarAccess.getSeparatorAccess().getEqualsSignKeyword_8()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getAsteriskKeyword_9()); }

	'*' 

{ after(grammarAccess.getSeparatorAccess().getAsteriskKeyword_9()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getLessThanSignKeyword_10()); }

	'<' 

{ after(grammarAccess.getSeparatorAccess().getLessThanSignKeyword_10()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getGreaterThanSignKeyword_11()); }

	'>' 

{ after(grammarAccess.getSeparatorAccess().getGreaterThanSignKeyword_11()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getColonKeyword_12()); }

	':' 

{ after(grammarAccess.getSeparatorAccess().getColonKeyword_12()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getQuestionMarkKeyword_13()); }

	'?' 

{ after(grammarAccess.getSeparatorAccess().getQuestionMarkKeyword_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlfanumSym__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
{ after(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_0_1()); }
	RULE_INT
{ after(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_0_2()); }
	RULE_HEX
{ after(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_0_2()); }
)

    |(
{ before(grammarAccess.getAlfanumSymAccess().getEXT_INTTerminalRuleCall_0_3()); }
	RULE_EXT_INT
{ after(grammarAccess.getAlfanumSymAccess().getEXT_INTTerminalRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlfanumSym__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlfanumSymAccess().getSeparatorParserRuleCall_1_0()); }
	ruleSeparator
{ after(grammarAccess.getAlfanumSymAccess().getSeparatorParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_1_2()); }
	RULE_INT
{ after(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_1_2()); }
)

    |(
{ before(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_1_3()); }
	RULE_HEX
{ after(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_1_3()); }
)

    |(
{ before(grammarAccess.getAlfanumSymAccess().getEXT_INTTerminalRuleCall_1_4()); }
	RULE_EXT_INT
{ after(grammarAccess.getAlfanumSymAccess().getEXT_INTTerminalRuleCall_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREALAccess().getEXT_INTTerminalRuleCall_2_0()); }
	RULE_EXT_INT
{ after(grammarAccess.getREALAccess().getEXT_INTTerminalRuleCall_2_0()); }
)

    |(
{ before(grammarAccess.getREALAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
{ after(grammarAccess.getREALAccess().getINTTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0()); }
(	'public' 
)
{ after(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1()); }
(	'private' 
)
{ after(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionMode__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionModeAccess().getParallelEnumLiteralDeclaration_0()); }
(	'parallel' 
)
{ after(grammarAccess.getExecutionModeAccess().getParallelEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getExecutionModeAccess().getSequentialEnumLiteralDeclaration_1()); }
(	'sequential' 
)
{ after(grammarAccess.getExecutionModeAccess().getSequentialEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__BeeModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeeModelAccess().getImportsAssignment_0()); }
(rule__BeeModel__ImportsAssignment_0)*
{ after(grammarAccess.getBeeModelAccess().getImportsAssignment_0()); }
)

	rule__BeeModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BeeModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeeModelAccess().getAlternatives_1()); }
(rule__BeeModel__Alternatives_1)*
{ after(grammarAccess.getBeeModelAccess().getAlternatives_1()); }
)

	rule__BeeModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__BeeModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeeModelAccess().getBodyAssignment_2()); }
(rule__BeeModel__BodyAssignment_2)?
{ after(grammarAccess.getBeeModelAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BeeModel__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeeModelAccess().getPropertiesKeyword_1_2_0()); }

	'properties' 

{ after(grammarAccess.getBeeModelAccess().getPropertiesKeyword_1_2_0()); }
)

	rule__BeeModel__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BeeModel__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeeModelAccess().getPropertySetsAssignment_1_2_1()); }
(rule__BeeModel__PropertySetsAssignment_1_2_1)
{ after(grammarAccess.getBeeModelAccess().getPropertySetsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getB3JavaImportAction_0()); }
(

)
{ after(grammarAccess.getImportAccess().getB3JavaImportAction_0()); }
)

	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getReexportAssignment_1()); }
(rule__Import__ReexportAssignment_1)?
{ after(grammarAccess.getImportAccess().getReexportAssignment_1()); }
)

	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_2()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_2()); }
)

	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getQualifiedNameAssignment_3()); }
(rule__Import__QualifiedNameAssignment_3)
{ after(grammarAccess.getImportAccess().getQualifiedNameAssignment_3()); }
)

	rule__Import__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getGroup_4()); }
(rule__Import__Group_4__0)?
{ after(grammarAccess.getImportAccess().getGroup_4()); }
)

	rule__Import__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getImportAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Import__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getAsKeyword_4_0()); }

	'as' 

{ after(grammarAccess.getImportAccess().getAsKeyword_4_0()); }
)

	rule__Import__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getNameAssignment_4_1()); }
(rule__Import__NameAssignment_4_1)
{ after(grammarAccess.getImportAccess().getNameAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getBuildUnitAction_0()); }
(

)
{ after(grammarAccess.getUnitAccess().getBuildUnitAction_0()); }
)

	rule__Unit__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getDocumentationAssignment_1()); }
(rule__Unit__DocumentationAssignment_1)?
{ after(grammarAccess.getUnitAccess().getDocumentationAssignment_1()); }
)

	rule__Unit__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getExecutionModeAssignment_2()); }
(rule__Unit__ExecutionModeAssignment_2)?
{ after(grammarAccess.getUnitAccess().getExecutionModeAssignment_2()); }
)

	rule__Unit__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getUnitKeyword_3()); }

	'unit' 

{ after(grammarAccess.getUnitAccess().getUnitKeyword_3()); }
)

	rule__Unit__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getNameAssignment_4()); }
(rule__Unit__NameAssignment_4)?
{ after(grammarAccess.getUnitAccess().getNameAssignment_4()); }
)

	rule__Unit__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getGroup_5()); }
(rule__Unit__Group_5__0)?
{ after(grammarAccess.getUnitAccess().getGroup_5()); }
)

	rule__Unit__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getGroup_6()); }
(rule__Unit__Group_6__0)?
{ after(grammarAccess.getUnitAccess().getGroup_6()); }
)

	rule__Unit__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7()); }

	'{' 

{ after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7()); }
)

	rule__Unit__Group__8
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getGroup_8()); }
(rule__Unit__Group_8__0)?
{ after(grammarAccess.getUnitAccess().getGroup_8()); }
)

	rule__Unit__Group__9
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getAlternatives_9()); }
(rule__Unit__Alternatives_9)*
{ after(grammarAccess.getUnitAccess().getAlternatives_9()); }
)

	rule__Unit__Group__10
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Unit__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getVersionKeyword_5_0()); }

	'version' 

{ after(grammarAccess.getUnitAccess().getVersionKeyword_5_0()); }
)

	rule__Unit__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getVersionAssignment_5_1()); }
(rule__Unit__VersionAssignment_5_1)
{ after(grammarAccess.getUnitAccess().getVersionAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getImplementsKeyword_6_0()); }

	'implements' 

{ after(grammarAccess.getUnitAccess().getImplementsKeyword_6_0()); }
)

	rule__Unit__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getImplementsAssignment_6_1()); }
(rule__Unit__ImplementsAssignment_6_1)
{ after(grammarAccess.getUnitAccess().getImplementsAssignment_6_1()); }
)

	rule__Unit__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getGroup_6_2()); }
(rule__Unit__Group_6_2__0)*
{ after(grammarAccess.getUnitAccess().getGroup_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Unit__Group_6_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getCommaKeyword_6_2_0()); }

	',' 

{ after(grammarAccess.getUnitAccess().getCommaKeyword_6_2_0()); }
)

	rule__Unit__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_6_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getImplementsAssignment_6_2_1()); }
(rule__Unit__ImplementsAssignment_6_2_1)
{ after(grammarAccess.getUnitAccess().getImplementsAssignment_6_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getDefaultKeyword_8_0()); }

	'default' 

{ after(grammarAccess.getUnitAccess().getDefaultKeyword_8_0()); }
)

	rule__Unit__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getPropertiesKeyword_8_1()); }

	'properties' 

{ after(grammarAccess.getUnitAccess().getPropertiesKeyword_8_1()); }
)

	rule__Unit__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getDefaultPropertiesAssignment_8_2()); }
(rule__Unit__DefaultPropertiesAssignment_8_2)
{ after(grammarAccess.getUnitAccess().getDefaultPropertiesAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Unit__Group_9_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getProvidesKeyword_9_0_0()); }

	'provides' 

{ after(grammarAccess.getUnitAccess().getProvidesKeyword_9_0_0()); }
)

	rule__Unit__Group_9_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_9_0_1()); }

	'{' 

{ after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_9_0_1()); }
)

	rule__Unit__Group_9_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getUnitAccess().getGroup_9_0_2()); }
(rule__Unit__Group_9_0_2__0)
{ after(grammarAccess.getUnitAccess().getGroup_9_0_2()); }
)
(
{ before(grammarAccess.getUnitAccess().getGroup_9_0_2()); }
(rule__Unit__Group_9_0_2__0)*
{ after(grammarAccess.getUnitAccess().getGroup_9_0_2()); }
)
)

	rule__Unit__Group_9_0__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_9_0_3()); }

	'}' 

{ after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_9_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Unit__Group_9_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_9_0_2_0()); }
(rule__Unit__ProvidedCapabilitiesAssignment_9_0_2_0)
{ after(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_9_0_2_0()); }
)

	rule__Unit__Group_9_0_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSemicolonKeyword_9_0_2_1()); }

	';' 

{ after(grammarAccess.getUnitAccess().getSemicolonKeyword_9_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_9_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getProvidesKeyword_9_1_0()); }

	'provides' 

{ after(grammarAccess.getUnitAccess().getProvidesKeyword_9_1_0()); }
)

	rule__Unit__Group_9_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_9_1_1()); }
(rule__Unit__ProvidedCapabilitiesAssignment_9_1_1)
{ after(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_9_1_1()); }
)

	rule__Unit__Group_9_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSemicolonKeyword_9_1_2()); }

	';' 

{ after(grammarAccess.getUnitAccess().getSemicolonKeyword_9_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Unit__Group_9_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRequiresKeyword_9_2_0()); }

	'requires' 

{ after(grammarAccess.getUnitAccess().getRequiresKeyword_9_2_0()); }
)

	rule__Unit__Group_9_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_9_2_1()); }

	'{' 

{ after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_9_2_1()); }
)

	rule__Unit__Group_9_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getUnitAccess().getGroup_9_2_2()); }
(rule__Unit__Group_9_2_2__0)
{ after(grammarAccess.getUnitAccess().getGroup_9_2_2()); }
)
(
{ before(grammarAccess.getUnitAccess().getGroup_9_2_2()); }
(rule__Unit__Group_9_2_2__0)*
{ after(grammarAccess.getUnitAccess().getGroup_9_2_2()); }
)
)

	rule__Unit__Group_9_2__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_9_2_3()); }

	'}' 

{ after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_9_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Unit__Group_9_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_9_2_2_0()); }
(rule__Unit__RequiredCapabilitiesAssignment_9_2_2_0)
{ after(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_9_2_2_0()); }
)

	rule__Unit__Group_9_2_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSemicolonKeyword_9_2_2_1()); }

	';' 

{ after(grammarAccess.getUnitAccess().getSemicolonKeyword_9_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_9_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRequiresKeyword_9_3_0()); }

	'requires' 

{ after(grammarAccess.getUnitAccess().getRequiresKeyword_9_3_0()); }
)

	rule__Unit__Group_9_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_9_3_1()); }
(rule__Unit__RequiredCapabilitiesAssignment_9_3_1)
{ after(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_9_3_1()); }
)

	rule__Unit__Group_9_3__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSemicolonKeyword_9_3_2()); }

	';' 

{ after(grammarAccess.getUnitAccess().getSemicolonKeyword_9_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Unit__Group_9_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getEnvKeyword_9_4_0()); }

	'env' 

{ after(grammarAccess.getUnitAccess().getEnvKeyword_9_4_0()); }
)

	rule__Unit__Group_9_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRequiresKeyword_9_4_1()); }

	'requires' 

{ after(grammarAccess.getUnitAccess().getRequiresKeyword_9_4_1()); }
)

	rule__Unit__Group_9_4__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_9_4_2()); }

	'{' 

{ after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_9_4_2()); }
)

	rule__Unit__Group_9_4__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getUnitAccess().getGroup_9_4_3()); }
(rule__Unit__Group_9_4_3__0)
{ after(grammarAccess.getUnitAccess().getGroup_9_4_3()); }
)
(
{ before(grammarAccess.getUnitAccess().getGroup_9_4_3()); }
(rule__Unit__Group_9_4_3__0)*
{ after(grammarAccess.getUnitAccess().getGroup_9_4_3()); }
)
)

	rule__Unit__Group_9_4__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_9_4_4()); }

	'}' 

{ after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_9_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Unit__Group_9_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_9_4_3_0()); }
(rule__Unit__MetaRequiredCapabilitiesAssignment_9_4_3_0)
{ after(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_9_4_3_0()); }
)

	rule__Unit__Group_9_4_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSemicolonKeyword_9_4_3_1()); }

	';' 

{ after(grammarAccess.getUnitAccess().getSemicolonKeyword_9_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_9_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getEnvKeyword_9_5_0()); }

	'env' 

{ after(grammarAccess.getUnitAccess().getEnvKeyword_9_5_0()); }
)

	rule__Unit__Group_9_5__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRequiresKeyword_9_5_1()); }

	'requires' 

{ after(grammarAccess.getUnitAccess().getRequiresKeyword_9_5_1()); }
)

	rule__Unit__Group_9_5__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_9_5_2()); }
(rule__Unit__MetaRequiredCapabilitiesAssignment_9_5_2)
{ after(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_9_5_2()); }
)

	rule__Unit__Group_9_5__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSemicolonKeyword_9_5_3()); }

	';' 

{ after(grammarAccess.getUnitAccess().getSemicolonKeyword_9_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Unit__Group_9_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSequentialKeyword_9_7_0()); }

	'sequential' 

{ after(grammarAccess.getUnitAccess().getSequentialKeyword_9_7_0()); }
)

	rule__Unit__Group_9_7__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_9_7_1()); }

	'{' 

{ after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_9_7_1()); }
)

	rule__Unit__Group_9_7__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getUnitAccess().getSynchronizationsAssignment_9_7_2()); }
(rule__Unit__SynchronizationsAssignment_9_7_2)
{ after(grammarAccess.getUnitAccess().getSynchronizationsAssignment_9_7_2()); }
)
(
{ before(grammarAccess.getUnitAccess().getSynchronizationsAssignment_9_7_2()); }
(rule__Unit__SynchronizationsAssignment_9_7_2)*
{ after(grammarAccess.getUnitAccess().getSynchronizationsAssignment_9_7_2()); }
)
)

	rule__Unit__Group_9_7__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_9_7_3()); }

	'}' 

{ after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_9_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Unit__Group_9_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSequentialKeyword_9_8_0()); }

	'sequential' 

{ after(grammarAccess.getUnitAccess().getSequentialKeyword_9_8_0()); }
)

	rule__Unit__Group_9_8__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSynchronizationsAssignment_9_8_1()); }
(rule__Unit__SynchronizationsAssignment_9_8_1)
{ after(grammarAccess.getUnitAccess().getSynchronizationsAssignment_9_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_9_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRepositoriesKeyword_9_11_0()); }

	'repositories' 

{ after(grammarAccess.getUnitAccess().getRepositoriesKeyword_9_11_0()); }
)

	rule__Unit__Group_9_11__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_9_11_1()); }

	'{' 

{ after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_9_11_1()); }
)

	rule__Unit__Group_9_11__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_11__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRepositoryConfigurationsAssignment_9_11_2()); }
(rule__Unit__RepositoryConfigurationsAssignment_9_11_2)*
{ after(grammarAccess.getUnitAccess().getRepositoryConfigurationsAssignment_9_11_2()); }
)

	rule__Unit__Group_9_11__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_11__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_9_11_3()); }

	'}' 

{ after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_9_11_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Unit__Group_9_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getPropertiesKeyword_9_12_0()); }

	'properties' 

{ after(grammarAccess.getUnitAccess().getPropertiesKeyword_9_12_0()); }
)

	rule__Unit__Group_9_12__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getPropertySetsAssignment_9_12_1()); }
(rule__Unit__PropertySetsAssignment_9_12_1)
{ after(grammarAccess.getUnitAccess().getPropertySetsAssignment_9_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_9_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getContainersKeyword_9_13_0()); }

	'containers' 

{ after(grammarAccess.getUnitAccess().getContainersKeyword_9_13_0()); }
)

	rule__Unit__Group_9_13__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_9_13_1()); }

	'{' 

{ after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_9_13_1()); }
)

	rule__Unit__Group_9_13__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_13__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getContainersAssignment_9_13_2()); }
(rule__Unit__ContainersAssignment_9_13_2)*
{ after(grammarAccess.getUnitAccess().getContainersAssignment_9_13_2()); }
)

	rule__Unit__Group_9_13__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_9_13__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_9_13_3()); }

	'}' 

{ after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_9_13_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ProvidedCapability__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getCapabilityAssignment_0()); }
(rule__ProvidedCapability__CapabilityAssignment_0)
{ after(grammarAccess.getProvidedCapabilityAccess().getCapabilityAssignment_0()); }
)

	rule__ProvidedCapability__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedCapability__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getGroup_1()); }
(rule__ProvidedCapability__Group_1__0)?
{ after(grammarAccess.getProvidedCapabilityAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProvidedCapability__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getSolidusKeyword_1_0()); }

	'/' 

{ after(grammarAccess.getProvidedCapabilityAccess().getSolidusKeyword_1_0()); }
)

	rule__ProvidedCapability__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedCapability__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getVersionAssignment_1_1()); }
(rule__ProvidedCapability__VersionAssignment_1_1)
{ after(grammarAccess.getProvidedCapabilityAccess().getVersionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RequiredCapability__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getCapabilityAssignment_0()); }
(rule__RequiredCapability__CapabilityAssignment_0)
{ after(grammarAccess.getRequiredCapabilityAccess().getCapabilityAssignment_0()); }
)

	rule__RequiredCapability__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredCapability__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getGroup_1()); }
(rule__RequiredCapability__Group_1__0)?
{ after(grammarAccess.getRequiredCapabilityAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RequiredCapability__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getSolidusKeyword_1_0()); }

	'/' 

{ after(grammarAccess.getRequiredCapabilityAccess().getSolidusKeyword_1_0()); }
)

	rule__RequiredCapability__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredCapability__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getRangeAssignment_1_1()); }
(rule__RequiredCapability__RangeAssignment_1_1)
{ after(grammarAccess.getRequiredCapabilityAccess().getRangeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FilteredCapability__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilteredCapabilityAccess().getGroup_0()); }
(rule__FilteredCapability__Group_0__0)?
{ after(grammarAccess.getFilteredCapabilityAccess().getGroup_0()); }
)

	rule__FilteredCapability__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__FilteredCapability__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilteredCapabilityAccess().getCapabilityAssignment_1()); }
(rule__FilteredCapability__CapabilityAssignment_1)
{ after(grammarAccess.getFilteredCapabilityAccess().getCapabilityAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FilteredCapability__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilteredCapabilityAccess().getWhenKeyword_0_0()); }

	'when' 

{ after(grammarAccess.getFilteredCapabilityAccess().getWhenKeyword_0_0()); }
)

	rule__FilteredCapability__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__FilteredCapability__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilteredCapabilityAccess().getFilterAssignment_0_1()); }
(rule__FilteredCapability__FilterAssignment_0_1)
{ after(grammarAccess.getFilteredCapabilityAccess().getFilterAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Capability__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityAccess().getInterfaceAssignment_0()); }
(rule__Capability__InterfaceAssignment_0)
{ after(grammarAccess.getCapabilityAccess().getInterfaceAssignment_0()); }
)

	rule__Capability__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Capability__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getCapabilityAccess().getSolidusKeyword_1()); }
)

	rule__Capability__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Capability__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityAccess().getNameAssignment_2()); }
(rule__Capability__NameAssignment_2)
{ after(grammarAccess.getCapabilityAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NamedPropertySet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertySetAccess().getBNamedPropertySetAction_0()); }
(

)
{ after(grammarAccess.getNamedPropertySetAccess().getBNamedPropertySetAction_0()); }
)

	rule__NamedPropertySet__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedPropertySet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertySetAccess().getNameAssignment_1()); }
(rule__NamedPropertySet__NameAssignment_1)
{ after(grammarAccess.getNamedPropertySetAccess().getNameAssignment_1()); }
)

	rule__NamedPropertySet__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedPropertySet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertySetAccess().getGroup_2()); }
(rule__NamedPropertySet__Group_2__0)?
{ after(grammarAccess.getNamedPropertySetAccess().getGroup_2()); }
)

	rule__NamedPropertySet__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedPropertySet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertySetAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getNamedPropertySetAccess().getLeftCurlyBracketKeyword_3()); }
)

	rule__NamedPropertySet__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedPropertySet__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertySetAccess().getOperationsAssignment_4()); }
(rule__NamedPropertySet__OperationsAssignment_4)*
{ after(grammarAccess.getNamedPropertySetAccess().getOperationsAssignment_4()); }
)

	rule__NamedPropertySet__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedPropertySet__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertySetAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getNamedPropertySetAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__NamedPropertySet__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertySetAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getNamedPropertySetAccess().getExtendsKeyword_2_0()); }
)

	rule__NamedPropertySet__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedPropertySet__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertySetAccess().getExtendsAssignment_2_1()); }
(rule__NamedPropertySet__ExtendsAssignment_2_1)
{ after(grammarAccess.getNamedPropertySetAccess().getExtendsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertySet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertySetAccess().getBPropertySetAction_0()); }
(

)
{ after(grammarAccess.getPropertySetAccess().getBPropertySetAction_0()); }
)

	rule__PropertySet__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertySetAccess().getGroup_1()); }
(rule__PropertySet__Group_1__0)?
{ after(grammarAccess.getPropertySetAccess().getGroup_1()); }
)

	rule__PropertySet__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertySetAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPropertySetAccess().getLeftCurlyBracketKeyword_2()); }
)

	rule__PropertySet__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertySetAccess().getOperationsAssignment_3()); }
(rule__PropertySet__OperationsAssignment_3)*
{ after(grammarAccess.getPropertySetAccess().getOperationsAssignment_3()); }
)

	rule__PropertySet__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySet__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertySetAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getPropertySetAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PropertySet__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertySetAccess().getExtendsKeyword_1_0()); }

	'extends' 

{ after(grammarAccess.getPropertySetAccess().getExtendsKeyword_1_0()); }
)

	rule__PropertySet__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySet__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertySetAccess().getExtendsAssignment_1_1()); }
(rule__PropertySet__ExtendsAssignment_1_1)
{ after(grammarAccess.getPropertySetAccess().getExtendsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalPropertyOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalPropertyOperationAccess().getBConditionalPropertyOperationAction_0()); }
(

)
{ after(grammarAccess.getConditionalPropertyOperationAccess().getBConditionalPropertyOperationAction_0()); }
)

	rule__ConditionalPropertyOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalPropertyOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalPropertyOperationAccess().getWhenKeyword_1()); }

	'when' 

{ after(grammarAccess.getConditionalPropertyOperationAccess().getWhenKeyword_1()); }
)

	rule__ConditionalPropertyOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalPropertyOperation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalPropertyOperationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getConditionalPropertyOperationAccess().getLeftParenthesisKeyword_2()); }
)

	rule__ConditionalPropertyOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalPropertyOperation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalPropertyOperationAccess().getCondExprAssignment_3()); }
(rule__ConditionalPropertyOperation__CondExprAssignment_3)
{ after(grammarAccess.getConditionalPropertyOperationAccess().getCondExprAssignment_3()); }
)

	rule__ConditionalPropertyOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalPropertyOperation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalPropertyOperationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getConditionalPropertyOperationAccess().getRightParenthesisKeyword_4()); }
)

	rule__ConditionalPropertyOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalPropertyOperation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalPropertyOperationAccess().getAlternatives_5()); }
(rule__ConditionalPropertyOperation__Alternatives_5)
{ after(grammarAccess.getConditionalPropertyOperationAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PropertyDefinitionOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionOperationAccess().getBPropertyDefinitionOperationAction_0()); }
(

)
{ after(grammarAccess.getPropertyDefinitionOperationAccess().getBPropertyDefinitionOperationAction_0()); }
)

	rule__PropertyDefinitionOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDefinitionOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionOperationAccess().getAlternatives_1()); }
(rule__PropertyDefinitionOperation__Alternatives_1)
{ after(grammarAccess.getPropertyDefinitionOperationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyValDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValDeclarationAccess().getBDefPropertyAction_0()); }
(

)
{ after(grammarAccess.getPropertyValDeclarationAccess().getBDefPropertyAction_0()); }
)

	rule__PropertyValDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyValDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValDeclarationAccess().getFinalAssignment_1()); }
(rule__PropertyValDeclaration__FinalAssignment_1)?
{ after(grammarAccess.getPropertyValDeclarationAccess().getFinalAssignment_1()); }
)

	rule__PropertyValDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyValDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValDeclarationAccess().getTypeAssignment_2()); }
(rule__PropertyValDeclaration__TypeAssignment_2)?
{ after(grammarAccess.getPropertyValDeclarationAccess().getTypeAssignment_2()); }
)

	rule__PropertyValDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyValDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValDeclarationAccess().getNameAssignment_3()); }
(rule__PropertyValDeclaration__NameAssignment_3)
{ after(grammarAccess.getPropertyValDeclarationAccess().getNameAssignment_3()); }
)

	rule__PropertyValDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyValDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValDeclarationAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getPropertyValDeclarationAccess().getEqualsSignKeyword_4()); }
)

	rule__PropertyValDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyValDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValDeclarationAccess().getValueExprAssignment_5()); }
(rule__PropertyValDeclaration__ValueExprAssignment_5)
{ after(grammarAccess.getPropertyValDeclarationAccess().getValueExprAssignment_5()); }
)

	rule__PropertyValDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyValDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValDeclarationAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getPropertyValDeclarationAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__PropertyVarDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getBDefPropertyAction_0()); }
(

)
{ after(grammarAccess.getPropertyVarDeclarationAccess().getBDefPropertyAction_0()); }
)

	rule__PropertyVarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyVarDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getFinalAssignment_1()); }
(rule__PropertyVarDeclaration__FinalAssignment_1)?
{ after(grammarAccess.getPropertyVarDeclarationAccess().getFinalAssignment_1()); }
)

	rule__PropertyVarDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyVarDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getMutableAssignment_2()); }
(rule__PropertyVarDeclaration__MutableAssignment_2)
{ after(grammarAccess.getPropertyVarDeclarationAccess().getMutableAssignment_2()); }
)

	rule__PropertyVarDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyVarDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getTypeAssignment_3()); }
(rule__PropertyVarDeclaration__TypeAssignment_3)?
{ after(grammarAccess.getPropertyVarDeclarationAccess().getTypeAssignment_3()); }
)

	rule__PropertyVarDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyVarDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getNameAssignment_4()); }
(rule__PropertyVarDeclaration__NameAssignment_4)
{ after(grammarAccess.getPropertyVarDeclarationAccess().getNameAssignment_4()); }
)

	rule__PropertyVarDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyVarDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getGroup_5()); }
(rule__PropertyVarDeclaration__Group_5__0)?
{ after(grammarAccess.getPropertyVarDeclarationAccess().getGroup_5()); }
)

	rule__PropertyVarDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyVarDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getPropertyVarDeclarationAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__PropertyVarDeclaration__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getEqualsSignKeyword_5_0()); }

	'=' 

{ after(grammarAccess.getPropertyVarDeclarationAccess().getEqualsSignKeyword_5_0()); }
)

	rule__PropertyVarDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyVarDeclaration__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getValueExprAssignment_5_1()); }
(rule__PropertyVarDeclaration__ValueExprAssignment_5_1)
{ after(grammarAccess.getPropertyVarDeclarationAccess().getValueExprAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertySetOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertySetOperationAccess().getBPropertySetOperationAction_0()); }
(

)
{ after(grammarAccess.getPropertySetOperationAccess().getBPropertySetOperationAction_0()); }
)

	rule__PropertySetOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySetOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertySetOperationAccess().getPropertySetAssignment_1()); }
(rule__PropertySetOperation__PropertySetAssignment_1)
{ after(grammarAccess.getPropertySetOperationAccess().getPropertySetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Synchronization__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationAccess().getPartrefsAssignment_0()); }
(rule__Synchronization__PartrefsAssignment_0)
{ after(grammarAccess.getSynchronizationAccess().getPartrefsAssignment_0()); }
)

	rule__Synchronization__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Synchronization__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSynchronizationAccess().getGroup_1()); }
(rule__Synchronization__Group_1__0)
{ after(grammarAccess.getSynchronizationAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getSynchronizationAccess().getGroup_1()); }
(rule__Synchronization__Group_1__0)*
{ after(grammarAccess.getSynchronizationAccess().getGroup_1()); }
)
)

	rule__Synchronization__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Synchronization__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getSynchronizationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Synchronization__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getSynchronizationAccess().getCommaKeyword_1_0()); }
)

	rule__Synchronization__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Synchronization__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationAccess().getPartrefsAssignment_1_1()); }
(rule__Synchronization__PartrefsAssignment_1_1)
{ after(grammarAccess.getSynchronizationAccess().getPartrefsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SynchronizedPart__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedPartAccess().getCompoundNameParserRuleCall_0_0()); }
	ruleCompoundName
{ after(grammarAccess.getSynchronizedPartAccess().getCompoundNameParserRuleCall_0_0()); }
)

	rule__SynchronizedPart__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SynchronizedPart__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedPartAccess().getGroup_0_1()); }
(rule__SynchronizedPart__Group_0_1__0)?
{ after(grammarAccess.getSynchronizedPartAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SynchronizedPart__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedPartAccess().getNumberSignKeyword_0_1_0()); }

	'#' 

{ after(grammarAccess.getSynchronizedPartAccess().getNumberSignKeyword_0_1_0()); }
)

	rule__SynchronizedPart__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SynchronizedPart__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedPartAccess().getPartNameParserRuleCall_0_1_1()); }
	rulePartName
{ after(grammarAccess.getSynchronizedPartAccess().getPartNameParserRuleCall_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PathGroup__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPathGroupAccess().getPathsAssignment_0()); }
(rule__PathGroup__PathsAssignment_0)
{ after(grammarAccess.getPathGroupAccess().getPathsAssignment_0()); }
)
(
{ before(grammarAccess.getPathGroupAccess().getPathsAssignment_0()); }
(rule__PathGroup__PathsAssignment_0)*
{ after(grammarAccess.getPathGroupAccess().getPathsAssignment_0()); }
)
)

	rule__PathGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PathGroup__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getGroup_1()); }
(rule__PathGroup__Group_1__0)?
{ after(grammarAccess.getPathGroupAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PathGroup__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getAnnotationsKeyword_1_0()); }

	'annotations' 

{ after(grammarAccess.getPathGroupAccess().getAnnotationsKeyword_1_0()); }
)

	rule__PathGroup__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PathGroup__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getAnnotationsAssignment_1_1()); }
(rule__PathGroup__AnnotationsAssignment_1_1)
{ after(grammarAccess.getPathGroupAccess().getAnnotationsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FilteredPathVector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilteredPathVectorAccess().getWhenKeyword_0()); }

	'when' 

{ after(grammarAccess.getFilteredPathVectorAccess().getWhenKeyword_0()); }
)

	rule__FilteredPathVector__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__FilteredPathVector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilteredPathVectorAccess().getFilterAssignment_1()); }
(rule__FilteredPathVector__FilterAssignment_1)
{ after(grammarAccess.getFilteredPathVectorAccess().getFilterAssignment_1()); }
)

	rule__FilteredPathVector__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__FilteredPathVector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilteredPathVectorAccess().getBodyAssignment_2()); }
(rule__FilteredPathVector__BodyAssignment_2)
{ after(grammarAccess.getFilteredPathVectorAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BasePathVector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasePathVectorAccess().getBasePathAssignment_0()); }
(rule__BasePathVector__BasePathAssignment_0)
{ after(grammarAccess.getBasePathVectorAccess().getBasePathAssignment_0()); }
)

	rule__BasePathVector__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BasePathVector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasePathVectorAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getBasePathVectorAccess().getLeftSquareBracketKeyword_1()); }
)

	rule__BasePathVector__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__BasePathVector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasePathVectorAccess().getGroup_2()); }
(rule__BasePathVector__Group_2__0)?
{ after(grammarAccess.getBasePathVectorAccess().getGroup_2()); }
)

	rule__BasePathVector__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__BasePathVector__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasePathVectorAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getBasePathVectorAccess().getRightSquareBracketKeyword_3()); }
)

	rule__BasePathVector__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__BasePathVector__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasePathVectorAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getBasePathVectorAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__BasePathVector__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasePathVectorAccess().getPathsAssignment_2_0()); }
(rule__BasePathVector__PathsAssignment_2_0)
{ after(grammarAccess.getBasePathVectorAccess().getPathsAssignment_2_0()); }
)

	rule__BasePathVector__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BasePathVector__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasePathVectorAccess().getGroup_2_1()); }
(rule__BasePathVector__Group_2_1__0)*
{ after(grammarAccess.getBasePathVectorAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BasePathVector__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasePathVectorAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getBasePathVectorAccess().getCommaKeyword_2_1_0()); }
)

	rule__BasePathVector__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BasePathVector__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasePathVectorAccess().getPathsAssignment_2_1_1()); }
(rule__BasePathVector__PathsAssignment_2_1_1)
{ after(grammarAccess.getBasePathVectorAccess().getPathsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnbasedPathVector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnbasedPathVectorAccess().getPathsAssignment_0()); }
(rule__UnbasedPathVector__PathsAssignment_0)
{ after(grammarAccess.getUnbasedPathVectorAccess().getPathsAssignment_0()); }
)

	rule__UnbasedPathVector__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__UnbasedPathVector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnbasedPathVectorAccess().getGroup_1()); }
(rule__UnbasedPathVector__Group_1__0)*
{ after(grammarAccess.getUnbasedPathVectorAccess().getGroup_1()); }
)

	rule__UnbasedPathVector__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__UnbasedPathVector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnbasedPathVectorAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getUnbasedPathVectorAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnbasedPathVector__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnbasedPathVectorAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getUnbasedPathVectorAccess().getCommaKeyword_1_0()); }
)

	rule__UnbasedPathVector__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__UnbasedPathVector__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnbasedPathVectorAccess().getPathsAssignment_1_1()); }
(rule__UnbasedPathVector__PathsAssignment_1_1)
{ after(grammarAccess.getUnbasedPathVectorAccess().getPathsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompoundPathVector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundPathVectorAccess().getCompoundPathVectorAction_0()); }
(

)
{ after(grammarAccess.getCompoundPathVectorAccess().getCompoundPathVectorAction_0()); }
)

	rule__CompoundPathVector__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundPathVector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundPathVectorAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getCompoundPathVectorAccess().getLeftCurlyBracketKeyword_1()); }
)

	rule__CompoundPathVector__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundPathVector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundPathVectorAccess().getBodyAssignment_2()); }
(rule__CompoundPathVector__BodyAssignment_2)*
{ after(grammarAccess.getCompoundPathVectorAccess().getBodyAssignment_2()); }
)

	rule__CompoundPathVector__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundPathVector__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundPathVectorAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getCompoundPathVectorAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Path__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getSolidusKeyword_1_0()); }
(
	'/' 
)?
{ after(grammarAccess.getPathAccess().getSolidusKeyword_1_0()); }
)

	rule__Path__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getQIDParserRuleCall_1_1()); }
	ruleQID
{ after(grammarAccess.getPathAccess().getQIDParserRuleCall_1_1()); }
)

	rule__Path__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getGroup_1_2()); }
(rule__Path__Group_1_2__0)*
{ after(grammarAccess.getPathAccess().getGroup_1_2()); }
)

	rule__Path__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getSolidusKeyword_1_3()); }
(
	'/' 
)?
{ after(grammarAccess.getPathAccess().getSolidusKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Path__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0()); }

	'/' 

{ after(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0()); }
)

	rule__Path__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getQIDParserRuleCall_1_2_1()); }
	ruleQID
{ after(grammarAccess.getPathAccess().getQIDParserRuleCall_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Prerequisite__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getGroup_0()); }
(rule__Prerequisite__Group_0__0)?
{ after(grammarAccess.getPrerequisiteAccess().getGroup_0()); }
)

	rule__Prerequisite__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Prerequisite__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getWithClauseAssignment_1()); }
(rule__Prerequisite__WithClauseAssignment_1)?
{ after(grammarAccess.getPrerequisiteAccess().getWithClauseAssignment_1()); }
)

	rule__Prerequisite__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Prerequisite__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getPartReferenceAssignment_2()); }
(rule__Prerequisite__PartReferenceAssignment_2)
{ after(grammarAccess.getPrerequisiteAccess().getPartReferenceAssignment_2()); }
)

	rule__Prerequisite__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Prerequisite__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getGroup_3()); }
(rule__Prerequisite__Group_3__0)?
{ after(grammarAccess.getPrerequisiteAccess().getGroup_3()); }
)

	rule__Prerequisite__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Prerequisite__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getPrerequisiteAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Prerequisite__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getWhenKeyword_0_0()); }

	'when' 

{ after(grammarAccess.getPrerequisiteAccess().getWhenKeyword_0_0()); }
)

	rule__Prerequisite__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Prerequisite__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getFilterAssignment_0_1()); }
(rule__Prerequisite__FilterAssignment_0_1)
{ after(grammarAccess.getPrerequisiteAccess().getFilterAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Prerequisite__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getAsKeyword_3_0()); }

	'as' 

{ after(grammarAccess.getPrerequisiteAccess().getAsKeyword_3_0()); }
)

	rule__Prerequisite__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Prerequisite__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getAliasAssignment_3_1()); }
(rule__Prerequisite__AliasAssignment_3_1)
{ after(grammarAccess.getPrerequisiteAccess().getAliasAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WithClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getWithClauseAction_0()); }
(

)
{ after(grammarAccess.getWithClauseAccess().getWithClauseAction_0()); }
)

	rule__WithClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WithClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getWithKeyword_1()); }

	'with' 

{ after(grammarAccess.getWithClauseAccess().getWithKeyword_1()); }
)

	rule__WithClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__WithClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getGroup_2()); }
(rule__WithClause__Group_2__0)?
{ after(grammarAccess.getWithClauseAccess().getGroup_2()); }
)

	rule__WithClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__WithClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getAlternatives_3()); }
(rule__WithClause__Alternatives_3)*
{ after(grammarAccess.getWithClauseAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WithClause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getWithClauseAccess().getLeftParenthesisKeyword_2_0()); }
)

	rule__WithClause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WithClause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getReferencesAssignment_2_1()); }
(rule__WithClause__ReferencesAssignment_2_1)
{ after(grammarAccess.getWithClauseAccess().getReferencesAssignment_2_1()); }
)

	rule__WithClause__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__WithClause__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getGroup_2_2()); }
(rule__WithClause__Group_2_2__0)*
{ after(grammarAccess.getWithClauseAccess().getGroup_2_2()); }
)

	rule__WithClause__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}


rule__WithClause__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getWithClauseAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WithClause__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getWithClauseAccess().getCommaKeyword_2_2_0()); }
)

	rule__WithClause__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WithClause__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getReferencesAssignment_2_2_1()); }
(rule__WithClause__ReferencesAssignment_2_2_1)
{ after(grammarAccess.getWithClauseAccess().getReferencesAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WithClause__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getPropertiesKeyword_3_0_0()); }

	'properties' 

{ after(grammarAccess.getWithClauseAccess().getPropertiesKeyword_3_0_0()); }
)

	rule__WithClause__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WithClause__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getPropertiesAssignment_3_0_1()); }
(rule__WithClause__PropertiesAssignment_3_0_1)
{ after(grammarAccess.getWithClauseAccess().getPropertiesAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WithClause__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getConcernKeyword_3_1_0()); }

	'concern' 

{ after(grammarAccess.getWithClauseAccess().getConcernKeyword_3_1_0()); }
)

	rule__WithClause__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WithClause__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getConcernAssignment_3_1_1()); }
(rule__WithClause__ConcernAssignment_3_1_1)
{ after(grammarAccess.getWithClauseAccess().getConcernAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DirectPartReferemce__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectPartReferemceAccess().getAlternatives_0()); }
(rule__DirectPartReferemce__Alternatives_0)?
{ after(grammarAccess.getDirectPartReferemceAccess().getAlternatives_0()); }
)

	rule__DirectPartReferemce__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectPartReferemce__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectPartReferemceAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getDirectPartReferemceAccess().getNumberSignKeyword_1()); }
)

	rule__DirectPartReferemce__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectPartReferemce__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectPartReferemceAccess().getBuilderAssignment_2()); }
(rule__DirectPartReferemce__BuilderAssignment_2)
{ after(grammarAccess.getDirectPartReferemceAccess().getBuilderAssignment_2()); }
)

	rule__DirectPartReferemce__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectPartReferemce__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectPartReferemceAccess().getParametersAssignment_3()); }
(rule__DirectPartReferemce__ParametersAssignment_3)?
{ after(grammarAccess.getDirectPartReferemceAccess().getParametersAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CapabilityReferencedPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getCapabilityAssignment_0()); }
(rule__CapabilityReferencedPart__CapabilityAssignment_0)
{ after(grammarAccess.getCapabilityReferencedPartAccess().getCapabilityAssignment_0()); }
)

	rule__CapabilityReferencedPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CapabilityReferencedPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getGroup_1()); }
(rule__CapabilityReferencedPart__Group_1__0)?
{ after(grammarAccess.getCapabilityReferencedPartAccess().getGroup_1()); }
)

	rule__CapabilityReferencedPart__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CapabilityReferencedPart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getGroup_2()); }
(rule__CapabilityReferencedPart__Group_2__0)?
{ after(grammarAccess.getCapabilityReferencedPartAccess().getGroup_2()); }
)

	rule__CapabilityReferencedPart__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__CapabilityReferencedPart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getParametersAssignment_3()); }
(rule__CapabilityReferencedPart__ParametersAssignment_3)?
{ after(grammarAccess.getCapabilityReferencedPartAccess().getParametersAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CapabilityReferencedPart__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_1_0()); }

	'/' 

{ after(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_1_0()); }
)

	rule__CapabilityReferencedPart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CapabilityReferencedPart__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getRangeAssignment_1_1()); }
(rule__CapabilityReferencedPart__RangeAssignment_1_1)
{ after(grammarAccess.getCapabilityReferencedPartAccess().getRangeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CapabilityReferencedPart__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getNumberSignKeyword_2_0()); }

	'#' 

{ after(grammarAccess.getCapabilityReferencedPartAccess().getNumberSignKeyword_2_0()); }
)

	rule__CapabilityReferencedPart__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CapabilityReferencedPart__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getPartNameAssignment_2_1()); }
(rule__CapabilityReferencedPart__PartNameAssignment_2_1)
{ after(grammarAccess.getCapabilityReferencedPartAccess().getPartNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompoundReferences__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundReferencesAccess().getCompounddReferencesAction_0()); }
(

)
{ after(grammarAccess.getCompoundReferencesAccess().getCompounddReferencesAction_0()); }
)

	rule__CompoundReferences__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundReferences__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundReferencesAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getCompoundReferencesAccess().getLeftCurlyBracketKeyword_1()); }
)

	rule__CompoundReferences__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundReferences__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundReferencesAccess().getPrerequisitesAssignment_2()); }
(rule__CompoundReferences__PrerequisitesAssignment_2)*
{ after(grammarAccess.getCompoundReferencesAccess().getPrerequisitesAssignment_2()); }
)

	rule__CompoundReferences__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundReferences__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundReferencesAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getCompoundReferencesAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Builder__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getBuilderAction_0()); }
(

)
{ after(grammarAccess.getBuilderAccess().getBuilderAction_0()); }
)

	rule__Builder__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getDocumentationAssignment_1()); }
(rule__Builder__DocumentationAssignment_1)?
{ after(grammarAccess.getBuilderAccess().getDocumentationAssignment_1()); }
)

	rule__Builder__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getVisibilityAssignment_2()); }
(rule__Builder__VisibilityAssignment_2)?
{ after(grammarAccess.getBuilderAccess().getVisibilityAssignment_2()); }
)

	rule__Builder__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getExecutionModeAssignment_3()); }
(rule__Builder__ExecutionModeAssignment_3)?
{ after(grammarAccess.getBuilderAccess().getExecutionModeAssignment_3()); }
)

	rule__Builder__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getFinalAssignment_4()); }
(rule__Builder__FinalAssignment_4)?
{ after(grammarAccess.getBuilderAccess().getFinalAssignment_4()); }
)

	rule__Builder__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getCachedAssignment_5()); }
(rule__Builder__CachedAssignment_5)?
{ after(grammarAccess.getBuilderAccess().getCachedAssignment_5()); }
)

	rule__Builder__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getBuilderKeyword_6()); }

	'builder' 

{ after(grammarAccess.getBuilderAccess().getBuilderKeyword_6()); }
)

	rule__Builder__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getNameAssignment_7()); }
(rule__Builder__NameAssignment_7)
{ after(grammarAccess.getBuilderAccess().getNameAssignment_7()); }
)

	rule__Builder__Group__8
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getGroup_8()); }
(rule__Builder__Group_8__0)?
{ after(grammarAccess.getBuilderAccess().getGroup_8()); }
)

	rule__Builder__Group__9
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getGroup_9()); }
(rule__Builder__Group_9__0)?
{ after(grammarAccess.getBuilderAccess().getGroup_9()); }
)

	rule__Builder__Group__10
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getPreConditionAssignment_10()); }
(rule__Builder__PreConditionAssignment_10)?
{ after(grammarAccess.getBuilderAccess().getPreConditionAssignment_10()); }
)

	rule__Builder__Group__11
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getPostConditionAssignment_11()); }
(rule__Builder__PostConditionAssignment_11)?
{ after(grammarAccess.getBuilderAccess().getPostConditionAssignment_11()); }
)

	rule__Builder__Group__12
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getLeftCurlyBracketKeyword_12()); }

	'{' 

{ after(grammarAccess.getBuilderAccess().getLeftCurlyBracketKeyword_12()); }
)

	rule__Builder__Group__13
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getGroup_13()); }
(rule__Builder__Group_13__0)?
{ after(grammarAccess.getBuilderAccess().getGroup_13()); }
)

	rule__Builder__Group__14
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getInputAssignment_14()); }
(rule__Builder__InputAssignment_14)?
{ after(grammarAccess.getBuilderAccess().getInputAssignment_14()); }
)

	rule__Builder__Group__15
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getOutputAssignment_15()); }
(rule__Builder__OutputAssignment_15)?
{ after(grammarAccess.getBuilderAccess().getOutputAssignment_15()); }
)

	rule__Builder__Group__16
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getExpressionListAssignment_16()); }
(rule__Builder__ExpressionListAssignment_16)?
{ after(grammarAccess.getBuilderAccess().getExpressionListAssignment_16()); }
)

	rule__Builder__Group__17
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group__17
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getRightCurlyBracketKeyword_17()); }

	'}' 

{ after(grammarAccess.getBuilderAccess().getRightCurlyBracketKeyword_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}






































rule__Builder__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getLeftParenthesisKeyword_8_0()); }

	'(' 

{ after(grammarAccess.getBuilderAccess().getLeftParenthesisKeyword_8_0()); }
)

	rule__Builder__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getParamsAssignment_8_1()); }
(rule__Builder__ParamsAssignment_8_1)
{ after(grammarAccess.getBuilderAccess().getParamsAssignment_8_1()); }
)

	rule__Builder__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getRightParenthesisKeyword_8_2()); }

	')' 

{ after(grammarAccess.getBuilderAccess().getRightParenthesisKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Builder__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getProvidesKeyword_9_0()); }

	'provides' 

{ after(grammarAccess.getBuilderAccess().getProvidesKeyword_9_0()); }
)

	rule__Builder__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getProvidedCapabilitiesAssignment_9_1()); }
(rule__Builder__ProvidedCapabilitiesAssignment_9_1)
{ after(grammarAccess.getBuilderAccess().getProvidedCapabilitiesAssignment_9_1()); }
)

	rule__Builder__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getGroup_9_2()); }
(rule__Builder__Group_9_2__0)*
{ after(grammarAccess.getBuilderAccess().getGroup_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Builder__Group_9_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getCommaKeyword_9_2_0()); }

	',' 

{ after(grammarAccess.getBuilderAccess().getCommaKeyword_9_2_0()); }
)

	rule__Builder__Group_9_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group_9_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getProvidedCapabilitiesAssignment_9_2_1()); }
(rule__Builder__ProvidedCapabilitiesAssignment_9_2_1)
{ after(grammarAccess.getBuilderAccess().getProvidedCapabilitiesAssignment_9_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Builder__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getDefaultKeyword_13_0()); }

	'default' 

{ after(grammarAccess.getBuilderAccess().getDefaultKeyword_13_0()); }
)

	rule__Builder__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getPropertiesKeyword_13_1()); }

	'properties' 

{ after(grammarAccess.getBuilderAccess().getPropertiesKeyword_13_1()); }
)

	rule__Builder__Group_13__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Builder__Group_13__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getPropertiesAssignment_13_2()); }
(rule__Builder__PropertiesAssignment_13_2)
{ after(grammarAccess.getBuilderAccess().getPropertiesAssignment_13_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParameterList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getBParameterListAction_0()); }
(

)
{ after(grammarAccess.getParameterListAccess().getBParameterListAction_0()); }
)

	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParametersAssignment_1()); }
(rule__ParameterList__ParametersAssignment_1)
{ after(grammarAccess.getParameterListAccess().getParametersAssignment_1()); }
)

	rule__ParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getGroup_2()); }
(rule__ParameterList__Group_2__0)*
{ after(grammarAccess.getParameterListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParameterList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getParameterListAccess().getCommaKeyword_2_0()); }
)

	rule__ParameterList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParametersAssignment_2_1()); }
(rule__ParameterList__ParametersAssignment_2_1)
{ after(grammarAccess.getParameterListAccess().getParametersAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getBParameterAction_0()); }
(

)
{ after(grammarAccess.getParameterAccess().getBParameterAction_0()); }
)

	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getExprAssignment_1()); }
(rule__Parameter__ExprAssignment_1)
{ after(grammarAccess.getParameterAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClosureParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureParameterAccess().getBParameterAction_0()); }
(

)
{ after(grammarAccess.getClosureParameterAccess().getBParameterAction_0()); }
)

	rule__ClosureParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureParameterAccess().getExprAssignment_1()); }
(rule__ClosureParameter__ExprAssignment_1)
{ after(grammarAccess.getClosureParameterAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterDeclarationList__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_0_0()); }
(rule__ParameterDeclarationList__ParamsAssignment_0_0)
{ after(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_0_0()); }
)

	rule__ParameterDeclarationList__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclarationList__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationListAccess().getGroup_0_1()); }
(rule__ParameterDeclarationList__Group_0_1__0)*
{ after(grammarAccess.getParameterDeclarationListAccess().getGroup_0_1()); }
)

	rule__ParameterDeclarationList__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclarationList__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationListAccess().getGroup_0_2()); }
(rule__ParameterDeclarationList__Group_0_2__0)?
{ after(grammarAccess.getParameterDeclarationListAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParameterDeclarationList__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationListAccess().getCommaKeyword_0_1_0()); }

	',' 

{ after(grammarAccess.getParameterDeclarationListAccess().getCommaKeyword_0_1_0()); }
)

	rule__ParameterDeclarationList__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclarationList__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_0_1_1()); }
(rule__ParameterDeclarationList__ParamsAssignment_0_1_1)
{ after(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterDeclarationList__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationListAccess().getCommaKeyword_0_2_0()); }

	',' 

{ after(grammarAccess.getParameterDeclarationListAccess().getCommaKeyword_0_2_0()); }
)

	rule__ParameterDeclarationList__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclarationList__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_0_2_1()); }
(rule__ParameterDeclarationList__ParamsAssignment_0_2_1)
{ after(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getBParameterDeclarationAction_0()); }
(

)
{ after(grammarAccess.getParameterDeclarationAccess().getBParameterDeclarationAction_0()); }
)

	rule__ParameterDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getGroup_1()); }
(rule__ParameterDeclaration__Group_1__0)
{ after(grammarAccess.getParameterDeclarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_1_0()); }
(rule__ParameterDeclaration__TypeAssignment_1_0)?
{ after(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_1_0()); }
)

	rule__ParameterDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getNameAssignment_1_1()); }
(rule__ParameterDeclaration__NameAssignment_1_1)
{ after(grammarAccess.getParameterDeclarationAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterDeclarationEllipse__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationEllipseAccess().getVarargParameterDeclarationAction_0()); }
(

)
{ after(grammarAccess.getParameterDeclarationEllipseAccess().getVarargParameterDeclarationAction_0()); }
)

	rule__ParameterDeclarationEllipse__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclarationEllipse__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationEllipseAccess().getFullStopFullStopFullStopKeyword_1()); }

	'...' 

{ after(grammarAccess.getParameterDeclarationEllipseAccess().getFullStopFullStopFullStopKeyword_1()); }
)

	rule__ParameterDeclarationEllipse__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclarationEllipse__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationEllipseAccess().getTypeAssignment_2()); }
(rule__ParameterDeclarationEllipse__TypeAssignment_2)?
{ after(grammarAccess.getParameterDeclarationEllipseAccess().getTypeAssignment_2()); }
)

	rule__ParameterDeclarationEllipse__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclarationEllipse__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationEllipseAccess().getNameAssignment_3()); }
(rule__ParameterDeclarationEllipse__NameAssignment_3)
{ after(grammarAccess.getParameterDeclarationEllipseAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BuilderOutput__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderOutputAccess().getOutputKeywordParserRuleCall_0()); }
	ruleOutputKeyword
{ after(grammarAccess.getBuilderOutputAccess().getOutputKeywordParserRuleCall_0()); }
)

	rule__BuilderOutput__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BuilderOutput__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderOutputAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBuilderOutputAccess().getLeftCurlyBracketKeyword_1()); }
)

	rule__BuilderOutput__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__BuilderOutput__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderOutputAccess().getBodyAssignment_2()); }
(rule__BuilderOutput__BodyAssignment_2)
{ after(grammarAccess.getBuilderOutputAccess().getBodyAssignment_2()); }
)

	rule__BuilderOutput__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__BuilderOutput__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderOutputAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getBuilderOutputAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BuilderInput__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderInputAccess().getInputKeywordParserRuleCall_0()); }
	ruleInputKeyword
{ after(grammarAccess.getBuilderInputAccess().getInputKeywordParserRuleCall_0()); }
)

	rule__BuilderInput__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BuilderInput__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderInputAccess().getPreConditionAssignment_1()); }
(rule__BuilderInput__PreConditionAssignment_1)?
{ after(grammarAccess.getBuilderInputAccess().getPreConditionAssignment_1()); }
)

	rule__BuilderInput__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__BuilderInput__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderInputAccess().getPostConditionAssignment_2()); }
(rule__BuilderInput__PostConditionAssignment_2)?
{ after(grammarAccess.getBuilderInputAccess().getPostConditionAssignment_2()); }
)

	rule__BuilderInput__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__BuilderInput__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderInputAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getBuilderInputAccess().getLeftCurlyBracketKeyword_3()); }
)

	rule__BuilderInput__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__BuilderInput__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getBuilderInputAccess().getPrerequisitesAssignment_4()); }
(rule__BuilderInput__PrerequisitesAssignment_4)
{ after(grammarAccess.getBuilderInputAccess().getPrerequisitesAssignment_4()); }
)
(
{ before(grammarAccess.getBuilderInputAccess().getPrerequisitesAssignment_4()); }
(rule__BuilderInput__PrerequisitesAssignment_4)*
{ after(grammarAccess.getBuilderInputAccess().getPrerequisitesAssignment_4()); }
)
)

	rule__BuilderInput__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__BuilderInput__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderInputAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getBuilderInputAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__RepositoryDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryDeclarationAccess().getDocumentationAssignment_0()); }
(rule__RepositoryDeclaration__DocumentationAssignment_0)?
{ after(grammarAccess.getRepositoryDeclarationAccess().getDocumentationAssignment_0()); }
)

	rule__RepositoryDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RepositoryDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryDeclarationAccess().getAlternatives_1()); }
(rule__RepositoryDeclaration__Alternatives_1)
{ after(grammarAccess.getRepositoryDeclarationAccess().getAlternatives_1()); }
)

	rule__RepositoryDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__RepositoryDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryDeclarationAccess().getContextAssignment_2()); }
(rule__RepositoryDeclaration__ContextAssignment_2)?
{ after(grammarAccess.getRepositoryDeclarationAccess().getContextAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RepositoryDeclaration__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryDeclarationAccess().getRepositoryKeyword_1_1_0()); }

	'repository' 

{ after(grammarAccess.getRepositoryDeclarationAccess().getRepositoryKeyword_1_1_0()); }
)

	rule__RepositoryDeclaration__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RepositoryDeclaration__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryDeclarationAccess().getTypeAssignment_1_1_1()); }
(rule__RepositoryDeclaration__TypeAssignment_1_1_1)
{ after(grammarAccess.getRepositoryDeclarationAccess().getTypeAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResolutionStrategy__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResolutionStrategyAccess().getStrategyAssignment_0()); }
(rule__ResolutionStrategy__StrategyAssignment_0)
{ after(grammarAccess.getResolutionStrategyAccess().getStrategyAssignment_0()); }
)

	rule__ResolutionStrategy__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ResolutionStrategy__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResolutionStrategyAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getResolutionStrategyAccess().getLeftCurlyBracketKeyword_1()); }
)

	rule__ResolutionStrategy__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ResolutionStrategy__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResolutionStrategyAccess().getRepositoryConfigAssignment_2()); }
(rule__ResolutionStrategy__RepositoryConfigAssignment_2)*
{ after(grammarAccess.getResolutionStrategyAccess().getRepositoryConfigAssignment_2()); }
)

	rule__ResolutionStrategy__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ResolutionStrategy__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResolutionStrategyAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getResolutionStrategyAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ContainerConfiguration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerConfigurationAccess().getDocumentationAssignment_0()); }
(rule__ContainerConfiguration__DocumentationAssignment_0)?
{ after(grammarAccess.getContainerConfigurationAccess().getDocumentationAssignment_0()); }
)

	rule__ContainerConfiguration__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ContainerConfiguration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerConfigurationAccess().getContainerKeyword_1()); }

	'container' 

{ after(grammarAccess.getContainerConfigurationAccess().getContainerKeyword_1()); }
)

	rule__ContainerConfiguration__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ContainerConfiguration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerConfigurationAccess().getNameAssignment_2()); }
(rule__ContainerConfiguration__NameAssignment_2)
{ after(grammarAccess.getContainerConfigurationAccess().getNameAssignment_2()); }
)

	rule__ContainerConfiguration__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ContainerConfiguration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerConfigurationAccess().getAgentKeyword_3()); }

	'agent' 

{ after(grammarAccess.getContainerConfigurationAccess().getAgentKeyword_3()); }
)

	rule__ContainerConfiguration__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__ContainerConfiguration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerConfigurationAccess().getTypeAssignment_4()); }
(rule__ContainerConfiguration__TypeAssignment_4)
{ after(grammarAccess.getContainerConfigurationAccess().getTypeAssignment_4()); }
)

	rule__ContainerConfiguration__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__ContainerConfiguration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerConfigurationAccess().getContextBlockAssignment_5()); }
(rule__ContainerConfiguration__ContextBlockAssignment_5)?
{ after(grammarAccess.getContainerConfigurationAccess().getContextBlockAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Concern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernAccess().getDocumentationAssignment_0()); }
(rule__Concern__DocumentationAssignment_0)?
{ after(grammarAccess.getConcernAccess().getDocumentationAssignment_0()); }
)

	rule__Concern__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Concern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernAccess().getConcernKeyword_1()); }

	'concern' 

{ after(grammarAccess.getConcernAccess().getConcernKeyword_1()); }
)

	rule__Concern__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Concern__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernAccess().getNameAssignment_2()); }
(rule__Concern__NameAssignment_2)
{ after(grammarAccess.getConcernAccess().getNameAssignment_2()); }
)

	rule__Concern__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Concern__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernAccess().getConcernAssignment_3()); }
(rule__Concern__ConcernAssignment_3)
{ after(grammarAccess.getConcernAccess().getConcernAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConcernBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernBlockAccess().getConcernBlockAction_0()); }
(

)
{ after(grammarAccess.getConcernBlockAccess().getConcernBlockAction_0()); }
)

	rule__ConcernBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ConcernBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernBlockAccess().getGroup_1()); }
(rule__ConcernBlock__Group_1__0)?
{ after(grammarAccess.getConcernBlockAccess().getGroup_1()); }
)

	rule__ConcernBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ConcernBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernBlockAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getConcernBlockAccess().getLeftCurlyBracketKeyword_2()); }
)

	rule__ConcernBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ConcernBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernBlockAccess().getAlternatives_3()); }
(rule__ConcernBlock__Alternatives_3)*
{ after(grammarAccess.getConcernBlockAccess().getAlternatives_3()); }
)

	rule__ConcernBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__ConcernBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernBlockAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getConcernBlockAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConcernBlock__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernBlockAccess().getExtendsKeyword_1_0()); }

	'extends' 

{ after(grammarAccess.getConcernBlockAccess().getExtendsKeyword_1_0()); }
)

	rule__ConcernBlock__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ConcernBlock__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernBlockAccess().getSuperConcernsAssignment_1_1()); }
(rule__ConcernBlock__SuperConcernsAssignment_1_1)
{ after(grammarAccess.getConcernBlockAccess().getSuperConcernsAssignment_1_1()); }
)

	rule__ConcernBlock__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ConcernBlock__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernBlockAccess().getGroup_1_2()); }
(rule__ConcernBlock__Group_1_2__0)*
{ after(grammarAccess.getConcernBlockAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConcernBlock__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernBlockAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getConcernBlockAccess().getCommaKeyword_1_2_0()); }
)

	rule__ConcernBlock__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ConcernBlock__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernBlockAccess().getSuperConcernsAssignment_1_2_1()); }
(rule__ConcernBlock__SuperConcernsAssignment_1_2_1)
{ after(grammarAccess.getConcernBlockAccess().getSuperConcernsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Filter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getFilterAccess().getLeftParenthesisKeyword_0()); }
)

	rule__Filter__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Filter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterAccess().getPredicateAssignment_1()); }
(rule__Filter__PredicateAssignment_1)
{ after(grammarAccess.getFilterAccess().getPredicateAssignment_1()); }
)

	rule__Filter__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Filter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getFilterAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PreCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreConditionAccess().getPreconditionKeyword_0()); }

	'precondition' 

{ after(grammarAccess.getPreConditionAccess().getPreconditionKeyword_0()); }
)

	rule__PreCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PreCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreConditionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getPreConditionAccess().getLeftCurlyBracketKeyword_1()); }
)

	rule__PreCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PreCondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPreConditionAccess().getAssertsAssignment_2()); }
(rule__PreCondition__AssertsAssignment_2)
{ after(grammarAccess.getPreConditionAccess().getAssertsAssignment_2()); }
)
(
{ before(grammarAccess.getPreConditionAccess().getAssertsAssignment_2()); }
(rule__PreCondition__AssertsAssignment_2)*
{ after(grammarAccess.getPreConditionAccess().getAssertsAssignment_2()); }
)
)

	rule__PreCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__PreCondition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreConditionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getPreConditionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PostCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostConditionAccess().getPostconditionKeyword_0()); }

	'postcondition' 

{ after(grammarAccess.getPostConditionAccess().getPostconditionKeyword_0()); }
)

	rule__PostCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PostCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostConditionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getPostConditionAccess().getLeftCurlyBracketKeyword_1()); }
)

	rule__PostCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PostCondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPostConditionAccess().getAssertsAssignment_2()); }
(rule__PostCondition__AssertsAssignment_2)
{ after(grammarAccess.getPostConditionAccess().getAssertsAssignment_2()); }
)
(
{ before(grammarAccess.getPostConditionAccess().getAssertsAssignment_2()); }
(rule__PostCondition__AssertsAssignment_2)*
{ after(grammarAccess.getPostConditionAccess().getAssertsAssignment_2()); }
)
)

	rule__PostCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__PostCondition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostConditionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getPostConditionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AssertionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionExpressionAccess().getAssertKeyword_0()); }

	'assert' 

{ after(grammarAccess.getAssertionExpressionAccess().getAssertKeyword_0()); }
)

	rule__AssertionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionExpressionAccess().getExprAssignment_1()); }
(rule__AssertionExpression__ExprAssignment_1)
{ after(grammarAccess.getAssertionExpressionAccess().getExprAssignment_1()); }
)

	rule__AssertionExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionExpressionAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getAssertionExpressionAccess().getCommaKeyword_2()); }
)

	rule__AssertionExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionExpressionAccess().getMessageAssignment_3()); }
(rule__AssertionExpression__MessageAssignment_3)
{ after(grammarAccess.getAssertionExpressionAccess().getMessageAssignment_3()); }
)

	rule__AssertionExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionExpressionAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getAssertionExpressionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ExpressionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExpressionsAssignment_0()); }
(rule__ExpressionList__ExpressionsAssignment_0)
{ after(grammarAccess.getExpressionListAccess().getExpressionsAssignment_0()); }
)

	rule__ExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getExpressionListAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getB3FunctionAction_0()); }
(

)
{ after(grammarAccess.getFunctionAccess().getB3FunctionAction_0()); }
)

	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getDocumentationAssignment_1()); }
(rule__Function__DocumentationAssignment_1)?
{ after(grammarAccess.getFunctionAccess().getDocumentationAssignment_1()); }
)

	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getVisibilityAssignment_2()); }
(rule__Function__VisibilityAssignment_2)?
{ after(grammarAccess.getFunctionAccess().getVisibilityAssignment_2()); }
)

	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getExecutionModeAssignment_3()); }
(rule__Function__ExecutionModeAssignment_3)?
{ after(grammarAccess.getFunctionAccess().getExecutionModeAssignment_3()); }
)

	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFinalAssignment_4()); }
(rule__Function__FinalAssignment_4)?
{ after(grammarAccess.getFunctionAccess().getFinalAssignment_4()); }
)

	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_5()); }

	'function' 

{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_5()); }
)

	rule__Function__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getReturnTypeAssignment_6()); }
(rule__Function__ReturnTypeAssignment_6)?
{ after(grammarAccess.getFunctionAccess().getReturnTypeAssignment_6()); }
)

	rule__Function__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameAssignment_7()); }
(rule__Function__NameAssignment_7)
{ after(grammarAccess.getFunctionAccess().getNameAssignment_7()); }
)

	rule__Function__Group__8
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_8()); }
(rule__Function__Group_8__0)?
{ after(grammarAccess.getFunctionAccess().getGroup_8()); }
)

	rule__Function__Group__9
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getAlternatives_9()); }
(rule__Function__Alternatives_9)
{ after(grammarAccess.getFunctionAccess().getAlternatives_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Function__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_8_0()); }

	'(' 

{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_8_0()); }
)

	rule__Function__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_8_1()); }
(rule__Function__Group_8_1__0)?
{ after(grammarAccess.getFunctionAccess().getGroup_8_1()); }
)

	rule__Function__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_8_2()); }

	')' 

{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Function__Group_8_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getParametersAssignment_8_1_0()); }
(rule__Function__ParametersAssignment_8_1_0)
{ after(grammarAccess.getFunctionAccess().getParametersAssignment_8_1_0()); }
)

	rule__Function__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_8_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_8_1_1()); }
(rule__Function__Group_8_1_1__0)*
{ after(grammarAccess.getFunctionAccess().getGroup_8_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group_8_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getCommaKeyword_8_1_1_0()); }

	',' 

{ after(grammarAccess.getFunctionAccess().getCommaKeyword_8_1_1_0()); }
)

	rule__Function__Group_8_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_8_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getParametersAssignment_8_1_1_1()); }
(rule__Function__ParametersAssignment_8_1_1_1)
{ after(grammarAccess.getFunctionAccess().getParametersAssignment_8_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group_9_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getColonKeyword_9_0_0()); }

	':' 

{ after(grammarAccess.getFunctionAccess().getColonKeyword_9_0_0()); }
)

	rule__Function__Group_9_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_9_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFuncExprAssignment_9_0_1()); }
(rule__Function__FuncExprAssignment_9_0_1)
{ after(grammarAccess.getFunctionAccess().getFuncExprAssignment_9_0_1()); }
)

	rule__Function__Group_9_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_9_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getSemicolonKeyword_9_0_2()); }

	';' 

{ after(grammarAccess.getFunctionAccess().getSemicolonKeyword_9_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AssignmentExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getCachedExpressionParserRuleCall_0()); }
	ruleCachedExpression
{ after(grammarAccess.getAssignmentExpressionAccess().getCachedExpressionParserRuleCall_0()); }
)

	rule__AssignmentExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); }
(rule__AssignmentExpression__Group_1__0)?
{ after(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignmentExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getBAssignmentExpressionLeftExprAction_1_0()); }
(

)
{ after(grammarAccess.getAssignmentExpressionAccess().getBAssignmentExpressionLeftExprAction_1_0()); }
)

	rule__AssignmentExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignment_1_1()); }
(rule__AssignmentExpression__FunctionNameAssignment_1_1)
{ after(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignment_1_1()); }
)

	rule__AssignmentExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignment_1_2()); }
(rule__AssignmentExpression__RightExprAssignment_1_2)
{ after(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VarDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationAccess().getBDefValueAction_0()); }
(

)
{ after(grammarAccess.getVarDeclarationAccess().getBDefValueAction_0()); }
)

	rule__VarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationAccess().getFinalAssignment_1()); }
(rule__VarDeclaration__FinalAssignment_1)?
{ after(grammarAccess.getVarDeclarationAccess().getFinalAssignment_1()); }
)

	rule__VarDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationAccess().getGroup_2()); }
(rule__VarDeclaration__Group_2__0)
{ after(grammarAccess.getVarDeclarationAccess().getGroup_2()); }
)

	rule__VarDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationAccess().getGroup_3()); }
(rule__VarDeclaration__Group_3__0)?
{ after(grammarAccess.getVarDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VarDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationAccess().getAlternatives_2_0()); }
(rule__VarDeclaration__Alternatives_2_0)
{ after(grammarAccess.getVarDeclarationAccess().getAlternatives_2_0()); }
)

	rule__VarDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationAccess().getNameAssignment_2_1()); }
(rule__VarDeclaration__NameAssignment_2_1)
{ after(grammarAccess.getVarDeclarationAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getVarDeclarationAccess().getEqualsSignKeyword_3_0()); }
)

	rule__VarDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationAccess().getValueExprAssignment_3_1()); }
(rule__VarDeclaration__ValueExprAssignment_3_1)
{ after(grammarAccess.getVarDeclarationAccess().getValueExprAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValDeclarationAccess().getBDefValueAction_0()); }
(

)
{ after(grammarAccess.getValDeclarationAccess().getBDefValueAction_0()); }
)

	rule__ValDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ValDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValDeclarationAccess().getFinalAssignment_1()); }
(rule__ValDeclaration__FinalAssignment_1)?
{ after(grammarAccess.getValDeclarationAccess().getFinalAssignment_1()); }
)

	rule__ValDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ValDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValDeclarationAccess().getImmutableAssignment_2()); }
(rule__ValDeclaration__ImmutableAssignment_2)
{ after(grammarAccess.getValDeclarationAccess().getImmutableAssignment_2()); }
)

	rule__ValDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ValDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValDeclarationAccess().getTypeAssignment_3()); }
(rule__ValDeclaration__TypeAssignment_3)?
{ after(grammarAccess.getValDeclarationAccess().getTypeAssignment_3()); }
)

	rule__ValDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__ValDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValDeclarationAccess().getNameAssignment_4()); }
(rule__ValDeclaration__NameAssignment_4)
{ after(grammarAccess.getValDeclarationAccess().getNameAssignment_4()); }
)

	rule__ValDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__ValDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValDeclarationAccess().getEqualsSignKeyword_5()); }

	'=' 

{ after(grammarAccess.getValDeclarationAccess().getEqualsSignKeyword_5()); }
)

	rule__ValDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__ValDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValDeclarationAccess().getValueExprAssignment_6()); }
(rule__ValDeclaration__ValueExprAssignment_6)
{ after(grammarAccess.getValDeclarationAccess().getValueExprAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SimpleTypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeRefAccess().getB3ParameterizedTypeAction_0()); }
(

)
{ after(grammarAccess.getSimpleTypeRefAccess().getB3ParameterizedTypeAction_0()); }
)

	rule__SimpleTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleTypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeRefAccess().getRawTypeAssignment_1()); }
(rule__SimpleTypeRef__RawTypeAssignment_1)
{ after(grammarAccess.getSimpleTypeRefAccess().getRawTypeAssignment_1()); }
)

	rule__SimpleTypeRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleTypeRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeRefAccess().getGroup_2()); }
(rule__SimpleTypeRef__Group_2__0)?
{ after(grammarAccess.getSimpleTypeRefAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SimpleTypeRef__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeRefAccess().getLessThanSignKeyword_2_0()); }

	'<' 

{ after(grammarAccess.getSimpleTypeRefAccess().getLessThanSignKeyword_2_0()); }
)

	rule__SimpleTypeRef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleTypeRef__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_2_1()); }
(rule__SimpleTypeRef__ActualArgumentsListAssignment_2_1)
{ after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_2_1()); }
)

	rule__SimpleTypeRef__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleTypeRef__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeRefAccess().getGroup_2_2()); }
(rule__SimpleTypeRef__Group_2_2__0)*
{ after(grammarAccess.getSimpleTypeRefAccess().getGroup_2_2()); }
)

	rule__SimpleTypeRef__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleTypeRef__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeRefAccess().getGreaterThanSignKeyword_2_3()); }

	'>' 

{ after(grammarAccess.getSimpleTypeRefAccess().getGreaterThanSignKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SimpleTypeRef__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeRefAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getSimpleTypeRefAccess().getCommaKeyword_2_2_0()); }
)

	rule__SimpleTypeRef__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleTypeRef__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_2_2_1()); }
(rule__SimpleTypeRef__ActualArgumentsListAssignment_2_2_1)
{ after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClosureTypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureTypeRefAccess().getB3FunctionTypeAction_0()); }
(

)
{ after(grammarAccess.getClosureTypeRefAccess().getB3FunctionTypeAction_0()); }
)

	rule__ClosureTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureTypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureTypeRefAccess().getGroup_1()); }
(rule__ClosureTypeRef__Group_1__0)
{ after(grammarAccess.getClosureTypeRefAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClosureTypeRef__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureTypeRefAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getClosureTypeRefAccess().getLeftParenthesisKeyword_1_0()); }
)

	rule__ClosureTypeRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureTypeRef__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureTypeRefAccess().getGroup_1_1()); }
(rule__ClosureTypeRef__Group_1_1__0)?
{ after(grammarAccess.getClosureTypeRefAccess().getGroup_1_1()); }
)

	rule__ClosureTypeRef__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureTypeRef__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureTypeRefAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getClosureTypeRefAccess().getRightParenthesisKeyword_1_2()); }
)

	rule__ClosureTypeRef__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureTypeRef__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1_3()); }

	'=>' 

{ after(grammarAccess.getClosureTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1_3()); }
)

	rule__ClosureTypeRef__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureTypeRef__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureTypeRefAccess().getReturnTypeAssignment_1_4()); }
(rule__ClosureTypeRef__ReturnTypeAssignment_1_4)
{ after(grammarAccess.getClosureTypeRefAccess().getReturnTypeAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ClosureTypeRef__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_1_0()); }
(rule__ClosureTypeRef__ParameterTypesAssignment_1_1_0)
{ after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_1_0()); }
)

	rule__ClosureTypeRef__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureTypeRef__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureTypeRefAccess().getGroup_1_1_1()); }
(rule__ClosureTypeRef__Group_1_1_1__0)*
{ after(grammarAccess.getClosureTypeRefAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClosureTypeRef__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_1_1_0()); }

	',' 

{ after(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_1_1_0()); }
)

	rule__ClosureTypeRef__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureTypeRef__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_1_1_1()); }
(rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1_1)
{ after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WildcardRefParam__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardRefParamAccess().getB3WildcardTypeAction_0()); }
(

)
{ after(grammarAccess.getWildcardRefParamAccess().getB3WildcardTypeAction_0()); }
)

	rule__WildcardRefParam__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WildcardRefParam__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardRefParamAccess().getQuestionMarkKeyword_1()); }

	'?' 

{ after(grammarAccess.getWildcardRefParamAccess().getQuestionMarkKeyword_1()); }
)

	rule__WildcardRefParam__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__WildcardRefParam__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardRefParamAccess().getAlternatives_2()); }
(rule__WildcardRefParam__Alternatives_2)?
{ after(grammarAccess.getWildcardRefParamAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WildcardRefParam__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardRefParamAccess().getExtendsKeyword_2_0_0()); }

	'extends' 

{ after(grammarAccess.getWildcardRefParamAccess().getExtendsKeyword_2_0_0()); }
)

	rule__WildcardRefParam__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WildcardRefParam__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardRefParamAccess().getUpperBoundsListAssignment_2_0_1()); }
(rule__WildcardRefParam__UpperBoundsListAssignment_2_0_1)
{ after(grammarAccess.getWildcardRefParamAccess().getUpperBoundsListAssignment_2_0_1()); }
)

	rule__WildcardRefParam__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__WildcardRefParam__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardRefParamAccess().getGroup_2_0_2()); }
(rule__WildcardRefParam__Group_2_0_2__0)*
{ after(grammarAccess.getWildcardRefParamAccess().getGroup_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WildcardRefParam__Group_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardRefParamAccess().getCommaKeyword_2_0_2_0()); }

	',' 

{ after(grammarAccess.getWildcardRefParamAccess().getCommaKeyword_2_0_2_0()); }
)

	rule__WildcardRefParam__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WildcardRefParam__Group_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardRefParamAccess().getUpperBoundsListAssignment_2_0_2_1()); }
(rule__WildcardRefParam__UpperBoundsListAssignment_2_0_2_1)
{ after(grammarAccess.getWildcardRefParamAccess().getUpperBoundsListAssignment_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WildcardRefParam__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardRefParamAccess().getSuperKeyword_2_1_0()); }

	'super' 

{ after(grammarAccess.getWildcardRefParamAccess().getSuperKeyword_2_1_0()); }
)

	rule__WildcardRefParam__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WildcardRefParam__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardRefParamAccess().getLowerBoundsListAssignment_2_1_1()); }
(rule__WildcardRefParam__LowerBoundsListAssignment_2_1_1)
{ after(grammarAccess.getWildcardRefParamAccess().getLowerBoundsListAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CachedExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachedExpressionAccess().getBCachedExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getCachedExpressionAccess().getBCachedExpressionAction_0_0()); }
)

	rule__CachedExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CachedExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachedExpressionAccess().getCachedKeyword_0_1()); }

	'cached' 

{ after(grammarAccess.getCachedExpressionAccess().getCachedKeyword_0_1()); }
)

	rule__CachedExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CachedExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachedExpressionAccess().getExprAssignment_0_2()); }
(rule__CachedExpression__ExprAssignment_0_2)
{ after(grammarAccess.getCachedExpressionAccess().getExprAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)

	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
(rule__OrExpression__Group_1__0)*
{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getBOrExpressionLeftExprAction_1_0()); }
(

)
{ after(grammarAccess.getOrExpressionAccess().getBOrExpressionLeftExprAction_1_0()); }
)

	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1()); }

	'||' 

{ after(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)

	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightExprAssignment_1_2()); }
(rule__OrExpression__RightExprAssignment_1_2)
{ after(grammarAccess.getOrExpressionAccess().getRightExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
{ after(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
)

	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getBAndExpressionLeftExprAction_1_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getBAndExpressionLeftExprAction_1_0()); }
)

	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1()); }

	'&&' 

{ after(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1()); }
)

	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightExprAssignment_1_2()); }
(rule__AndExpression__RightExprAssignment_1_2)
{ after(grammarAccess.getAndExpressionAccess().getRightExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getInstanceOfExpressionParserRuleCall_0()); }
	ruleInstanceOfExpression
{ after(grammarAccess.getRelationalExpressionAccess().getInstanceOfExpressionParserRuleCall_0()); }
)

	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
(rule__RelationalExpression__Group_1__0)*
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0()); }
(

)
{ after(grammarAccess.getRelationalExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0()); }
)

	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getFunctionNameAssignment_1_1()); }
(rule__RelationalExpression__FunctionNameAssignment_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getFunctionNameAssignment_1_1()); }
)

	rule__RelationalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightExprAssignment_1_2()); }
(rule__RelationalExpression__RightExprAssignment_1_2)
{ after(grammarAccess.getRelationalExpressionAccess().getRightExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InstanceOfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
{ after(grammarAccess.getInstanceOfExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)

	rule__InstanceOfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceOfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExpressionAccess().getGroup_1()); }
(rule__InstanceOfExpression__Group_1__0)*
{ after(grammarAccess.getInstanceOfExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceOfExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0()); }
(

)
{ after(grammarAccess.getInstanceOfExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0()); }
)

	rule__InstanceOfExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceOfExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExpressionAccess().getFunctionNameAssignment_1_1()); }
(rule__InstanceOfExpression__FunctionNameAssignment_1_1)
{ after(grammarAccess.getInstanceOfExpressionAccess().getFunctionNameAssignment_1_1()); }
)

	rule__InstanceOfExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceOfExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExpressionAccess().getRightExprAssignment_1_2()); }
(rule__InstanceOfExpression__RightExprAssignment_1_2)
{ after(grammarAccess.getInstanceOfExpressionAccess().getRightExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)

	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
(rule__AdditiveExpression__Group_1__0)*
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0()); }
(

)
{ after(grammarAccess.getAdditiveExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0()); }
)

	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAssignment_1_1()); }
(rule__AdditiveExpression__FunctionNameAssignment_1_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAssignment_1_1()); }
)

	rule__AdditiveExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getRightExprAssignment_1_2()); }
(rule__AdditiveExpression__RightExprAssignment_1_2)
{ after(grammarAccess.getAdditiveExpressionAccess().getRightExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getSetExpressionParserRuleCall_0()); }
	ruleSetExpression
{ after(grammarAccess.getMultiplicativeExpressionAccess().getSetExpressionParserRuleCall_0()); }
)

	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
(rule__MultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0()); }
(

)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0()); }
)

	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAssignment_1_1()); }
(rule__MultiplicativeExpression__FunctionNameAssignment_1_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAssignment_1_1()); }
)

	rule__MultiplicativeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightExprAssignment_1_2()); }
(rule__MultiplicativeExpression__RightExprAssignment_1_2)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SetExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0()); }
	ruleUnaryOrInfixExpression
{ after(grammarAccess.getSetExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0()); }
)

	rule__SetExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SetExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetExpressionAccess().getGroup_1()); }
(rule__SetExpression__Group_1__0)*
{ after(grammarAccess.getSetExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SetExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0()); }
(

)
{ after(grammarAccess.getSetExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0()); }
)

	rule__SetExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SetExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetExpressionAccess().getFunctionNameAssignment_1_1()); }
(rule__SetExpression__FunctionNameAssignment_1_1)
{ after(grammarAccess.getSetExpressionAccess().getFunctionNameAssignment_1_1()); }
)

	rule__SetExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__SetExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetExpressionAccess().getRightExprAssignment_1_2()); }
(rule__SetExpression__RightExprAssignment_1_2)
{ after(grammarAccess.getSetExpressionAccess().getRightExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getBUnaryOpExpressionAction_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getBUnaryOpExpressionAction_0()); }
)

	rule__UnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getFunctionNameAssignment_1()); }
(rule__UnaryExpression__FunctionNameAssignment_1)
{ after(grammarAccess.getUnaryExpressionAccess().getFunctionNameAssignment_1()); }
)

	rule__UnaryExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_2()); }
(rule__UnaryExpression__ExprAssignment_2)
{ after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PreopExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreopExpressionAccess().getBUnaryPreOpExpressionAction_0()); }
(

)
{ after(grammarAccess.getPreopExpressionAccess().getBUnaryPreOpExpressionAction_0()); }
)

	rule__PreopExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PreopExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreopExpressionAccess().getFunctionNameAssignment_1()); }
(rule__PreopExpression__FunctionNameAssignment_1)
{ after(grammarAccess.getPreopExpressionAccess().getFunctionNameAssignment_1()); }
)

	rule__PreopExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PreopExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreopExpressionAccess().getExprAssignment_2()); }
(rule__PreopExpression__ExprAssignment_2)
{ after(grammarAccess.getPreopExpressionAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PostopExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0()); }
	ruleInfixExpression
{ after(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0()); }
)

	rule__PostopExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PostopExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostopExpressionAccess().getGroup_1()); }
(rule__PostopExpression__Group_1__0)?
{ after(grammarAccess.getPostopExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostopExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostopExpressionAccess().getBUnaryPostOpExpressionExprAction_1_0()); }
(

)
{ after(grammarAccess.getPostopExpressionAccess().getBUnaryPostOpExpressionExprAction_1_0()); }
)

	rule__PostopExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PostopExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostopExpressionAccess().getFunctionNameAssignment_1_1()); }
(rule__PostopExpression__FunctionNameAssignment_1_1)
{ after(grammarAccess.getPostopExpressionAccess().getFunctionNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InfixExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getCallExpressionParserRuleCall_0()); }
	ruleCallExpression
{ after(grammarAccess.getInfixExpressionAccess().getCallExpressionParserRuleCall_0()); }
)

	rule__InfixExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getAlternatives_1()); }
(rule__InfixExpression__Alternatives_1)*
{ after(grammarAccess.getInfixExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InfixExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getBCallExpressionFuncExprAction_1_0_0()); }
(

)
{ after(grammarAccess.getInfixExpressionAccess().getBCallExpressionFuncExprAction_1_0_0()); }
)

	rule__InfixExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1()); }

	'.' 

{ after(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1()); }
)

	rule__InfixExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2()); }
(rule__InfixExpression__NameAssignment_1_0_2)
{ after(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2()); }
)

	rule__InfixExpression__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3()); }

	'(' 

{ after(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3()); }
)

	rule__InfixExpression__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getParameterListAssignment_1_0_4()); }
(rule__InfixExpression__ParameterListAssignment_1_0_4)?
{ after(grammarAccess.getInfixExpressionAccess().getParameterListAssignment_1_0_4()); }
)

	rule__InfixExpression__Group_1_0__5
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5()); }

	')' 

{ after(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InfixExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getBAtExpressionObjExprAction_1_1_0()); }
(

)
{ after(grammarAccess.getInfixExpressionAccess().getBAtExpressionObjExprAction_1_1_0()); }
)

	rule__InfixExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); }

	'[' 

{ after(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); }
)

	rule__InfixExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getIndexExprAssignment_1_1_2()); }
(rule__InfixExpression__IndexExprAssignment_1_1_2)
{ after(grammarAccess.getInfixExpressionAccess().getIndexExprAssignment_1_1_2()); }
)

	rule__InfixExpression__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3()); }

	']' 

{ after(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InfixExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getBFeatureExpressionObjExprAction_1_2_0()); }
(

)
{ after(grammarAccess.getInfixExpressionAccess().getBFeatureExpressionObjExprAction_1_2_0()); }
)

	rule__InfixExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1()); }

	'.' 

{ after(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1()); }
)

	rule__InfixExpression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getFeatureNameAssignment_1_2_2()); }
(rule__InfixExpression__FeatureNameAssignment_1_2_2)
{ after(grammarAccess.getInfixExpressionAccess().getFeatureNameAssignment_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CallExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getCallExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
)

	rule__CallExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpressionAccess().getGroup_1()); }
(rule__CallExpression__Group_1__0)*
{ after(grammarAccess.getCallExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpressionAccess().getBCallExpressionFuncExprAction_1_0()); }
(

)
{ after(grammarAccess.getCallExpressionAccess().getBCallExpressionFuncExprAction_1_0()); }
)

	rule__CallExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1_1()); }
)

	rule__CallExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpressionAccess().getParameterListAssignment_1_2()); }
(rule__CallExpression__ParameterListAssignment_1_2)?
{ after(grammarAccess.getCallExpressionAccess().getParameterListAssignment_1_2()); }
)

	rule__CallExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WildcardExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardExpressionAccess().getBLiteralAnyAction_0()); }
(

)
{ after(grammarAccess.getWildcardExpressionAccess().getBLiteralAnyAction_0()); }
)

	rule__WildcardExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WildcardExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardExpressionAccess().get_Keyword_1()); }

	'_' 

{ after(grammarAccess.getWildcardExpressionAccess().get_Keyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ThrowExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowExpressionAccess().getBThrowExpressionAction_0()); }
(

)
{ after(grammarAccess.getThrowExpressionAccess().getBThrowExpressionAction_0()); }
)

	rule__ThrowExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ThrowExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowExpressionAccess().getThrowKeyword_1()); }

	'throw' 

{ after(grammarAccess.getThrowExpressionAccess().getThrowKeyword_1()); }
)

	rule__ThrowExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ThrowExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowExpressionAccess().getExprAssignment_2()); }
(rule__ThrowExpression__ExprAssignment_2)
{ after(grammarAccess.getThrowExpressionAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TryCatchExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getBTryExpressionAction_0()); }
(

)
{ after(grammarAccess.getTryCatchExpressionAccess().getBTryExpressionAction_0()); }
)

	rule__TryCatchExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TryCatchExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getTryKeyword_1()); }

	'try' 

{ after(grammarAccess.getTryCatchExpressionAccess().getTryKeyword_1()); }
)

	rule__TryCatchExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__TryCatchExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getTryExprAssignment_2()); }
(rule__TryCatchExpression__TryExprAssignment_2)
{ after(grammarAccess.getTryCatchExpressionAccess().getTryExprAssignment_2()); }
)

	rule__TryCatchExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__TryCatchExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getCatchBlocksAssignment_3()); }
(rule__TryCatchExpression__CatchBlocksAssignment_3)*
{ after(grammarAccess.getTryCatchExpressionAccess().getCatchBlocksAssignment_3()); }
)

	rule__TryCatchExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__TryCatchExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getGroup_4()); }
(rule__TryCatchExpression__Group_4__0)?
{ after(grammarAccess.getTryCatchExpressionAccess().getGroup_4()); }
)

	rule__TryCatchExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__TryCatchExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getEndtryKeyword_5()); }

	'endtry' 

{ after(grammarAccess.getTryCatchExpressionAccess().getEndtryKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TryCatchExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getFinallyKeyword_4_0()); }

	'finally' 

{ after(grammarAccess.getTryCatchExpressionAccess().getFinallyKeyword_4_0()); }
)

	rule__TryCatchExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TryCatchExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getFinallyExprAssignment_4_1()); }
(rule__TryCatchExpression__FinallyExprAssignment_4_1)
{ after(grammarAccess.getTryCatchExpressionAccess().getFinallyExprAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CatchBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchBlockAccess().getBCatchAction_0()); }
(

)
{ after(grammarAccess.getCatchBlockAccess().getBCatchAction_0()); }
)

	rule__CatchBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CatchBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchBlockAccess().getCatchKeyword_1()); }

	'catch' 

{ after(grammarAccess.getCatchBlockAccess().getCatchKeyword_1()); }
)

	rule__CatchBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CatchBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchBlockAccess().getExceptionTypeAssignment_2()); }
(rule__CatchBlock__ExceptionTypeAssignment_2)
{ after(grammarAccess.getCatchBlockAccess().getExceptionTypeAssignment_2()); }
)

	rule__CatchBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__CatchBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchBlockAccess().getVarnameAssignment_3()); }
(rule__CatchBlock__VarnameAssignment_3)
{ after(grammarAccess.getCatchBlockAccess().getVarnameAssignment_3()); }
)

	rule__CatchBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__CatchBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchBlockAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getCatchBlockAccess().getColonKeyword_4()); }
)

	rule__CatchBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__CatchBlock__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchBlockAccess().getCatchExprAssignment_5()); }
(rule__CatchBlock__CatchExprAssignment_5)
{ after(grammarAccess.getCatchBlockAccess().getCatchExprAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SwitchExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getBSwitchExpressionAction_0()); }
(

)
{ after(grammarAccess.getSwitchExpressionAccess().getBSwitchExpressionAction_0()); }
)

	rule__SwitchExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchKeyword_1()); }

	'switch' 

{ after(grammarAccess.getSwitchExpressionAccess().getSwitchKeyword_1()); }
)

	rule__SwitchExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionAssignment_2()); }
(rule__SwitchExpression__SwitchExpressionAssignment_2)?
{ after(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionAssignment_2()); }
)

	rule__SwitchExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSwitchExpressionAccess().getCaseListAssignment_3()); }
(rule__SwitchExpression__CaseListAssignment_3)
{ after(grammarAccess.getSwitchExpressionAccess().getCaseListAssignment_3()); }
)
(
{ before(grammarAccess.getSwitchExpressionAccess().getCaseListAssignment_3()); }
(rule__SwitchExpression__CaseListAssignment_3)*
{ after(grammarAccess.getSwitchExpressionAccess().getCaseListAssignment_3()); }
)
)

	rule__SwitchExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getEndswitchKeyword_4()); }

	'endswitch' 

{ after(grammarAccess.getSwitchExpressionAccess().getEndswitchKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Case__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getBCaseAction_0()); }
(

)
{ after(grammarAccess.getCaseAccess().getBCaseAction_0()); }
)

	rule__Case__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getCaseKeyword_1()); }

	'case' 

{ after(grammarAccess.getCaseAccess().getCaseKeyword_1()); }
)

	rule__Case__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getConditionExprAssignment_2()); }
(rule__Case__ConditionExprAssignment_2)
{ after(grammarAccess.getCaseAccess().getConditionExprAssignment_2()); }
)

	rule__Case__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getCaseAccess().getColonKeyword_3()); }
)

	rule__Case__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getThenExprAssignment_4()); }
(rule__Case__ThenExprAssignment_4)
{ after(grammarAccess.getCaseAccess().getThenExprAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__BlockExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getBChainedExpressionAction_0()); }
(

)
{ after(grammarAccess.getBlockExpressionAccess().getBChainedExpressionAction_0()); }
)

	rule__BlockExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)

	rule__BlockExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getGroup_2()); }
(rule__BlockExpression__Group_2__0)*
{ after(grammarAccess.getBlockExpressionAccess().getGroup_2()); }
)

	rule__BlockExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BlockExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_0()); }
(rule__BlockExpression__ExpressionsAssignment_2_0)
{ after(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_0()); }
)

	rule__BlockExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getBIfExpressionAction_0()); }
(

)
{ after(grammarAccess.getIfExpressionAccess().getBIfExpressionAction_0()); }
)

	rule__IfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getIfKeyword_1()); }

	'if' 

{ after(grammarAccess.getIfExpressionAccess().getIfKeyword_1()); }
)

	rule__IfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getConditionExprAssignment_2()); }
(rule__IfExpression__ConditionExprAssignment_2)
{ after(grammarAccess.getIfExpressionAccess().getConditionExprAssignment_2()); }
)

	rule__IfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getThenKeyword_3()); }

	'then' 

{ after(grammarAccess.getIfExpressionAccess().getThenKeyword_3()); }
)

	rule__IfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getThenExprAssignment_4()); }
(rule__IfExpression__ThenExprAssignment_4)
{ after(grammarAccess.getIfExpressionAccess().getThenExprAssignment_4()); }
)

	rule__IfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getAlternatives_5()); }
(rule__IfExpression__Alternatives_5)?
{ after(grammarAccess.getIfExpressionAccess().getAlternatives_5()); }
)

	rule__IfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getEndifKeyword_6()); }

	'endif' 

{ after(grammarAccess.getIfExpressionAccess().getEndifKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__IfExpression__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseKeyword_5_1_0()); }

	'else' 

{ after(grammarAccess.getIfExpressionAccess().getElseKeyword_5_1_0()); }
)

	rule__IfExpression__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseExprAssignment_5_1_1()); }
(rule__IfExpression__ElseExprAssignment_5_1_1)
{ after(grammarAccess.getIfExpressionAccess().getElseExprAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElseIfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfExpressionAccess().getBIfExpressionAction_0()); }
(

)
{ after(grammarAccess.getElseIfExpressionAccess().getBIfExpressionAction_0()); }
)

	rule__ElseIfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseIfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfExpressionAccess().getElseifKeyword_1()); }

	'elseif' 

{ after(grammarAccess.getElseIfExpressionAccess().getElseifKeyword_1()); }
)

	rule__ElseIfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseIfExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfExpressionAccess().getConditionExprAssignment_2()); }
(rule__ElseIfExpression__ConditionExprAssignment_2)
{ after(grammarAccess.getElseIfExpressionAccess().getConditionExprAssignment_2()); }
)

	rule__ElseIfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseIfExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfExpressionAccess().getThenKeyword_3()); }

	'then' 

{ after(grammarAccess.getElseIfExpressionAccess().getThenKeyword_3()); }
)

	rule__ElseIfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseIfExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfExpressionAccess().getThenExprAssignment_4()); }
(rule__ElseIfExpression__ThenExprAssignment_4)
{ after(grammarAccess.getElseIfExpressionAccess().getThenExprAssignment_4()); }
)

	rule__ElseIfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseIfExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfExpressionAccess().getAlternatives_5()); }
(rule__ElseIfExpression__Alternatives_5)?
{ after(grammarAccess.getElseIfExpressionAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ElseIfExpression__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfExpressionAccess().getElseKeyword_5_1_0()); }

	'else' 

{ after(grammarAccess.getElseIfExpressionAccess().getElseKeyword_5_1_0()); }
)

	rule__ElseIfExpression__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseIfExpression__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfExpressionAccess().getElseExprAssignment_5_1_1()); }
(rule__ElseIfExpression__ElseExprAssignment_5_1_1)
{ after(grammarAccess.getElseIfExpressionAccess().getElseExprAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValueAccess().getBVariableExpressionAction_0()); }
(

)
{ after(grammarAccess.getPropertyValueAccess().getBVariableExpressionAction_0()); }
)

	rule__PropertyValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValueAccess().getNameAssignment_1()); }
(rule__PropertyValue__NameAssignment_1)
{ after(grammarAccess.getPropertyValueAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableValueAccess().getBVariableExpressionAction_0()); }
(

)
{ after(grammarAccess.getVariableValueAccess().getBVariableExpressionAction_0()); }
)

	rule__VariableValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableValueAccess().getNameAssignment_1()); }
(rule__VariableValue__NameAssignment_1)
{ after(grammarAccess.getVariableValueAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__KeywordVariables__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordVariablesAccess().getBVariableExpressionAction_0()); }
(

)
{ after(grammarAccess.getKeywordVariablesAccess().getBVariableExpressionAction_0()); }
)

	rule__KeywordVariables__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__KeywordVariables__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordVariablesAccess().getNameAssignment_1()); }
(rule__KeywordVariables__NameAssignment_1)
{ after(grammarAccess.getKeywordVariablesAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getBCallExpressionAction_0()); }
(

)
{ after(grammarAccess.getOperationCallAccess().getBCallExpressionAction_0()); }
)

	rule__OperationCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getNameAssignment_1()); }
(rule__OperationCall__NameAssignment_1)
{ after(grammarAccess.getOperationCallAccess().getNameAssignment_1()); }
)

	rule__OperationCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2()); }
)

	rule__OperationCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getParameterListAssignment_3()); }
(rule__OperationCall__ParameterListAssignment_3)?
{ after(grammarAccess.getOperationCallAccess().getParameterListAssignment_3()); }
)

	rule__OperationCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConstructorCallExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallExpressionAccess().getBCreateExpressionAction_0()); }
(

)
{ after(grammarAccess.getConstructorCallExpressionAccess().getBCreateExpressionAction_0()); }
)

	rule__ConstructorCallExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCallExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallExpressionAccess().getNewKeyword_1()); }

	'new' 

{ after(grammarAccess.getConstructorCallExpressionAccess().getNewKeyword_1()); }
)

	rule__ConstructorCallExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCallExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallExpressionAccess().getTypeExprAssignment_2()); }
(rule__ConstructorCallExpression__TypeExprAssignment_2)
{ after(grammarAccess.getConstructorCallExpressionAccess().getTypeExprAssignment_2()); }
)

	rule__ConstructorCallExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCallExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallExpressionAccess().getGroup_3()); }
(rule__ConstructorCallExpression__Group_3__0)?
{ after(grammarAccess.getConstructorCallExpressionAccess().getGroup_3()); }
)

	rule__ConstructorCallExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCallExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallExpressionAccess().getGroup_4()); }
(rule__ConstructorCallExpression__Group_4__0)?
{ after(grammarAccess.getConstructorCallExpressionAccess().getGroup_4()); }
)

	rule__ConstructorCallExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCallExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallExpressionAccess().getContextBlockAssignment_5()); }
(rule__ConstructorCallExpression__ContextBlockAssignment_5)?
{ after(grammarAccess.getConstructorCallExpressionAccess().getContextBlockAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ConstructorCallExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallExpressionAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getConstructorCallExpressionAccess().getLeftParenthesisKeyword_3_0()); }
)

	rule__ConstructorCallExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCallExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallExpressionAccess().getParameterListAssignment_3_1()); }
(rule__ConstructorCallExpression__ParameterListAssignment_3_1)?
{ after(grammarAccess.getConstructorCallExpressionAccess().getParameterListAssignment_3_1()); }
)

	rule__ConstructorCallExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCallExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallExpressionAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getConstructorCallExpressionAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConstructorCallExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallExpressionAccess().getAsKeyword_4_0()); }

	'as' 

{ after(grammarAccess.getConstructorCallExpressionAccess().getAsKeyword_4_0()); }
)

	rule__ConstructorCallExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCallExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallExpressionAccess().getAliasAssignment_4_1()); }
(rule__ConstructorCallExpression__AliasAssignment_4_1)
{ after(grammarAccess.getConstructorCallExpressionAccess().getAliasAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Context__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getContextKeyword_0()); }

	'context' 

{ after(grammarAccess.getContextAccess().getContextKeyword_0()); }
)

	rule__Context__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getSelectorAssignment_1()); }
(rule__Context__SelectorAssignment_1)
{ after(grammarAccess.getContextAccess().getSelectorAssignment_1()); }
)

	rule__Context__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getBlockAssignment_2()); }
(rule__Context__BlockAssignment_2)
{ after(grammarAccess.getContextAccess().getBlockAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnitSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitSelectorAccess().getUnitKeyword_0()); }

	'unit' 

{ after(grammarAccess.getUnitSelectorAccess().getUnitKeyword_0()); }
)

	rule__UnitSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitSelectorAccess().getInterfaceAssignment_1()); }
(rule__UnitSelector__InterfaceAssignment_1)
{ after(grammarAccess.getUnitSelectorAccess().getInterfaceAssignment_1()); }
)

	rule__UnitSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitSelector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitSelectorAccess().getGroup_2()); }
(rule__UnitSelector__Group_2__0)?
{ after(grammarAccess.getUnitSelectorAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnitSelector__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitSelectorAccess().getSolidusKeyword_2_0()); }

	'/' 

{ after(grammarAccess.getUnitSelectorAccess().getSolidusKeyword_2_0()); }
)

	rule__UnitSelector__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitSelector__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitSelectorAccess().getAlternatives_2_1()); }
(rule__UnitSelector__Alternatives_2_1)
{ after(grammarAccess.getUnitSelectorAccess().getAlternatives_2_1()); }
)

	rule__UnitSelector__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitSelector__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitSelectorAccess().getGroup_2_2()); }
(rule__UnitSelector__Group_2_2__0)?
{ after(grammarAccess.getUnitSelectorAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnitSelector__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitSelectorAccess().getSolidusKeyword_2_2_0()); }

	'/' 

{ after(grammarAccess.getUnitSelectorAccess().getSolidusKeyword_2_2_0()); }
)

	rule__UnitSelector__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitSelector__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitSelectorAccess().getVersionRangeAssignment_2_2_1()); }
(rule__UnitSelector__VersionRangeAssignment_2_2_1)
{ after(grammarAccess.getUnitSelectorAccess().getVersionRangeAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContextBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextBlockAccess().getBChainedExpressionAction_0()); }
(

)
{ after(grammarAccess.getContextBlockAccess().getBChainedExpressionAction_0()); }
)

	rule__ContextBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ContextBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextBlockAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getContextBlockAccess().getLeftCurlyBracketKeyword_1()); }
)

	rule__ContextBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ContextBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextBlockAccess().getAlternatives_2()); }
(rule__ContextBlock__Alternatives_2)*
{ after(grammarAccess.getContextBlockAccess().getAlternatives_2()); }
)

	rule__ContextBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ContextBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextBlockAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getContextBlockAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ContextBlock__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextBlockAccess().getExpressionsAssignment_2_1_0()); }
(rule__ContextBlock__ExpressionsAssignment_2_1_0)
{ after(grammarAccess.getContextBlockAccess().getExpressionsAssignment_2_1_0()); }
)

	rule__ContextBlock__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ContextBlock__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextBlockAccess().getSemicolonKeyword_2_1_1()); }

	';' 

{ after(grammarAccess.getContextBlockAccess().getSemicolonKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getBDefFunctionAction_0()); }
(

)
{ after(grammarAccess.getFunctionDefinitionAccess().getBDefFunctionAction_0()); }
)

	rule__FunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getFunctionAssignment_1()); }
(rule__FunctionDefinition__FunctionAssignment_1)
{ after(grammarAccess.getFunctionDefinitionAccess().getFunctionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralList__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getBLiteralListExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getLiteralListAccess().getBLiteralListExpressionAction_0_0()); }
)

	rule__LiteralList__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getLeftSquareBracketKeyword_0_1()); }

	'[' 

{ after(grammarAccess.getLiteralListAccess().getLeftSquareBracketKeyword_0_1()); }
)

	rule__LiteralList__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getGroup_0_2()); }
(rule__LiteralList__Group_0_2__0)?
{ after(grammarAccess.getLiteralListAccess().getGroup_0_2()); }
)

	rule__LiteralList__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getEntriesAssignment_0_3()); }
(rule__LiteralList__EntriesAssignment_0_3)
{ after(grammarAccess.getLiteralListAccess().getEntriesAssignment_0_3()); }
)

	rule__LiteralList__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getGroup_0_4()); }
(rule__LiteralList__Group_0_4__0)*
{ after(grammarAccess.getLiteralListAccess().getGroup_0_4()); }
)

	rule__LiteralList__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getRightSquareBracketKeyword_0_5()); }

	']' 

{ after(grammarAccess.getLiteralListAccess().getRightSquareBracketKeyword_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LiteralList__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getLessThanSignKeyword_0_2_0()); }

	'<' 

{ after(grammarAccess.getLiteralListAccess().getLessThanSignKeyword_0_2_0()); }
)

	rule__LiteralList__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getEntryTypeAssignment_0_2_1()); }
(rule__LiteralList__EntryTypeAssignment_0_2_1)
{ after(grammarAccess.getLiteralListAccess().getEntryTypeAssignment_0_2_1()); }
)

	rule__LiteralList__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getGreaterThanSignKeyword_0_2_2()); }

	'>' 

{ after(grammarAccess.getLiteralListAccess().getGreaterThanSignKeyword_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LiteralList__Group_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getCommaKeyword_0_4_0()); }

	',' 

{ after(grammarAccess.getLiteralListAccess().getCommaKeyword_0_4_0()); }
)

	rule__LiteralList__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getEntriesAssignment_0_4_1()); }
(rule__LiteralList__EntriesAssignment_0_4_1)
{ after(grammarAccess.getLiteralListAccess().getEntriesAssignment_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getBLiteralListExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getLiteralListAccess().getBLiteralListExpressionAction_1_0()); }
)

	rule__LiteralList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getLeftSquareBracketKeyword_1_1()); }

	'[' 

{ after(grammarAccess.getLiteralListAccess().getLeftSquareBracketKeyword_1_1()); }
)

	rule__LiteralList__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getLessThanSignKeyword_1_2()); }

	'<' 

{ after(grammarAccess.getLiteralListAccess().getLessThanSignKeyword_1_2()); }
)

	rule__LiteralList__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getEntryTypeAssignment_1_3()); }
(rule__LiteralList__EntryTypeAssignment_1_3)
{ after(grammarAccess.getLiteralListAccess().getEntryTypeAssignment_1_3()); }
)

	rule__LiteralList__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getGreaterThanSignKeyword_1_4()); }

	'>' 

{ after(grammarAccess.getLiteralListAccess().getGreaterThanSignKeyword_1_4()); }
)

	rule__LiteralList__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getRightSquareBracketKeyword_1_5()); }

	']' 

{ after(grammarAccess.getLiteralListAccess().getRightSquareBracketKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LiteralMap__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getBLiteralMapExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getLiteralMapAccess().getBLiteralMapExpressionAction_0_0()); }
)

	rule__LiteralMap__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getLeftSquareBracketKeyword_0_1()); }

	'[' 

{ after(grammarAccess.getLiteralMapAccess().getLeftSquareBracketKeyword_0_1()); }
)

	rule__LiteralMap__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getGroup_0_2()); }
(rule__LiteralMap__Group_0_2__0)?
{ after(grammarAccess.getLiteralMapAccess().getGroup_0_2()); }
)

	rule__LiteralMap__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getEntriesAssignment_0_3()); }
(rule__LiteralMap__EntriesAssignment_0_3)
{ after(grammarAccess.getLiteralMapAccess().getEntriesAssignment_0_3()); }
)

	rule__LiteralMap__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getGroup_0_4()); }
(rule__LiteralMap__Group_0_4__0)*
{ after(grammarAccess.getLiteralMapAccess().getGroup_0_4()); }
)

	rule__LiteralMap__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getRightSquareBracketKeyword_0_5()); }

	']' 

{ after(grammarAccess.getLiteralMapAccess().getRightSquareBracketKeyword_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LiteralMap__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getLessThanSignKeyword_0_2_0()); }

	'<' 

{ after(grammarAccess.getLiteralMapAccess().getLessThanSignKeyword_0_2_0()); }
)

	rule__LiteralMap__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getKeyTypeAssignment_0_2_1()); }
(rule__LiteralMap__KeyTypeAssignment_0_2_1)
{ after(grammarAccess.getLiteralMapAccess().getKeyTypeAssignment_0_2_1()); }
)

	rule__LiteralMap__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getCommaKeyword_0_2_2()); }

	',' 

{ after(grammarAccess.getLiteralMapAccess().getCommaKeyword_0_2_2()); }
)

	rule__LiteralMap__Group_0_2__3
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_0_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getValueTypeAssignment_0_2_3()); }
(rule__LiteralMap__ValueTypeAssignment_0_2_3)
{ after(grammarAccess.getLiteralMapAccess().getValueTypeAssignment_0_2_3()); }
)

	rule__LiteralMap__Group_0_2__4
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_0_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getGreaterThanSignKeyword_0_2_4()); }

	'>' 

{ after(grammarAccess.getLiteralMapAccess().getGreaterThanSignKeyword_0_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LiteralMap__Group_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getCommaKeyword_0_4_0()); }

	',' 

{ after(grammarAccess.getLiteralMapAccess().getCommaKeyword_0_4_0()); }
)

	rule__LiteralMap__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getEntriesAssignment_0_4_1()); }
(rule__LiteralMap__EntriesAssignment_0_4_1)
{ after(grammarAccess.getLiteralMapAccess().getEntriesAssignment_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralMap__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getBLiteralMapExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getLiteralMapAccess().getBLiteralMapExpressionAction_1_0()); }
)

	rule__LiteralMap__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getLeftSquareBracketKeyword_1_1()); }

	'[' 

{ after(grammarAccess.getLiteralMapAccess().getLeftSquareBracketKeyword_1_1()); }
)

	rule__LiteralMap__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getLessThanSignKeyword_1_2()); }

	'<' 

{ after(grammarAccess.getLiteralMapAccess().getLessThanSignKeyword_1_2()); }
)

	rule__LiteralMap__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getKeyTypeAssignment_1_3()); }
(rule__LiteralMap__KeyTypeAssignment_1_3)
{ after(grammarAccess.getLiteralMapAccess().getKeyTypeAssignment_1_3()); }
)

	rule__LiteralMap__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getCommaKeyword_1_4()); }

	',' 

{ after(grammarAccess.getLiteralMapAccess().getCommaKeyword_1_4()); }
)

	rule__LiteralMap__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getValueTypeAssignment_1_5()); }
(rule__LiteralMap__ValueTypeAssignment_1_5)
{ after(grammarAccess.getLiteralMapAccess().getValueTypeAssignment_1_5()); }
)

	rule__LiteralMap__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getGreaterThanSignKeyword_1_6()); }

	'>' 

{ after(grammarAccess.getLiteralMapAccess().getGreaterThanSignKeyword_1_6()); }
)

	rule__LiteralMap__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralMap__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getRightSquareBracketKeyword_1_7()); }

	']' 

{ after(grammarAccess.getLiteralMapAccess().getRightSquareBracketKeyword_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__LiteralFunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getB3FunctionAction_0()); }
(

)
{ after(grammarAccess.getLiteralFunctionAccess().getB3FunctionAction_0()); }
)

	rule__LiteralFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralFunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getLiteralFunctionAccess().getLeftCurlyBracketKeyword_1()); }
)

	rule__LiteralFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralFunction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getGroup_2()); }
(rule__LiteralFunction__Group_2__0)?
{ after(grammarAccess.getLiteralFunctionAccess().getGroup_2()); }
)

	rule__LiteralFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralFunction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getGroup_3()); }
(rule__LiteralFunction__Group_3__0)?
{ after(grammarAccess.getLiteralFunctionAccess().getGroup_3()); }
)

	rule__LiteralFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralFunction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getVerticalLineKeyword_4()); }

	'|' 

{ after(grammarAccess.getLiteralFunctionAccess().getVerticalLineKeyword_4()); }
)

	rule__LiteralFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralFunction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getFuncExprAssignment_5()); }
(rule__LiteralFunction__FuncExprAssignment_5)
{ after(grammarAccess.getLiteralFunctionAccess().getFuncExprAssignment_5()); }
)

	rule__LiteralFunction__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralFunction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getLiteralFunctionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__LiteralFunction__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getLessThanSignKeyword_2_0()); }

	'<' 

{ after(grammarAccess.getLiteralFunctionAccess().getLessThanSignKeyword_2_0()); }
)

	rule__LiteralFunction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralFunction__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getReturnTypeAssignment_2_1()); }
(rule__LiteralFunction__ReturnTypeAssignment_2_1)
{ after(grammarAccess.getLiteralFunctionAccess().getReturnTypeAssignment_2_1()); }
)

	rule__LiteralFunction__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralFunction__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getGreaterThanSignKeyword_2_2()); }

	'>' 

{ after(grammarAccess.getLiteralFunctionAccess().getGreaterThanSignKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LiteralFunction__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getParametersAssignment_3_0()); }
(rule__LiteralFunction__ParametersAssignment_3_0)
{ after(grammarAccess.getLiteralFunctionAccess().getParametersAssignment_3_0()); }
)

	rule__LiteralFunction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralFunction__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getGroup_3_1()); }
(rule__LiteralFunction__Group_3_1__0)*
{ after(grammarAccess.getLiteralFunctionAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralFunction__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getLiteralFunctionAccess().getCommaKeyword_3_1_0()); }
)

	rule__LiteralFunction__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralFunction__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getParametersAssignment_3_1_1()); }
(rule__LiteralFunction__ParametersAssignment_3_1_1)
{ after(grammarAccess.getLiteralFunctionAccess().getParametersAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClosureExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureExpressionAccess().getB3FunctionAction_0()); }
(

)
{ after(grammarAccess.getClosureExpressionAccess().getB3FunctionAction_0()); }
)

	rule__ClosureExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureExpressionAccess().getGroup_1()); }
(rule__ClosureExpression__Group_1__0)?
{ after(grammarAccess.getClosureExpressionAccess().getGroup_1()); }
)

	rule__ClosureExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureExpressionAccess().getGroup_2()); }
(rule__ClosureExpression__Group_2__0)?
{ after(grammarAccess.getClosureExpressionAccess().getGroup_2()); }
)

	rule__ClosureExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_3()); }

	'|' 

{ after(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_3()); }
)

	rule__ClosureExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureExpressionAccess().getFuncExprAssignment_4()); }
(rule__ClosureExpression__FuncExprAssignment_4)
{ after(grammarAccess.getClosureExpressionAccess().getFuncExprAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ClosureExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureExpressionAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getClosureExpressionAccess().getLessThanSignKeyword_1_0()); }
)

	rule__ClosureExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureExpressionAccess().getReturnTypeAssignment_1_1()); }
(rule__ClosureExpression__ReturnTypeAssignment_1_1)
{ after(grammarAccess.getClosureExpressionAccess().getReturnTypeAssignment_1_1()); }
)

	rule__ClosureExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureExpressionAccess().getGreaterThanSignKeyword_1_2()); }

	'>' 

{ after(grammarAccess.getClosureExpressionAccess().getGreaterThanSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClosureExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0()); }
(rule__ClosureExpression__ParametersAssignment_2_0)
{ after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0()); }
)

	rule__ClosureExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureExpressionAccess().getGroup_2_1()); }
(rule__ClosureExpression__Group_2_1__0)*
{ after(grammarAccess.getClosureExpressionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClosureExpression__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_1_0()); }
)

	rule__ClosureExpression__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureExpression__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_1_1()); }
(rule__ClosureExpression__ParametersAssignment_2_1_1)
{ after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BlockExpressionWithoutBrackets__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getBChainedExpressionAction_0()); }
(

)
{ after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getBChainedExpressionAction_0()); }
)

	rule__BlockExpressionWithoutBrackets__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpressionWithoutBrackets__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); }
(rule__BlockExpressionWithoutBrackets__Group_1__0)
{ after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); }
(rule__BlockExpressionWithoutBrackets__Group_1__0)*
{ after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BlockExpressionWithoutBrackets__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsAssignment_1_0()); }
(rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0)
{ after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsAssignment_1_0()); }
)

	rule__BlockExpressionWithoutBrackets__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpressionWithoutBrackets__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MapEntry__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntryAccess().getBMapEntryAction_0()); }
(

)
{ after(grammarAccess.getMapEntryAccess().getBMapEntryAction_0()); }
)

	rule__MapEntry__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__MapEntry__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntryAccess().getKeyAssignment_1()); }
(rule__MapEntry__KeyAssignment_1)
{ after(grammarAccess.getMapEntryAccess().getKeyAssignment_1()); }
)

	rule__MapEntry__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__MapEntry__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntryAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getMapEntryAccess().getColonKeyword_2()); }
)

	rule__MapEntry__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__MapEntry__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntryAccess().getValueAssignment_3()); }
(rule__MapEntry__ValueAssignment_3)
{ after(grammarAccess.getMapEntryAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyLiteralAccess().getBLiteralExpressionAction_0()); }
(

)
{ after(grammarAccess.getKeyLiteralAccess().getBLiteralExpressionAction_0()); }
)

	rule__KeyLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyLiteralAccess().getValueAssignment_1()); }
(rule__KeyLiteral__ValueAssignment_1)
{ after(grammarAccess.getKeyLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTypeAccess().getBLiteralTypeAction_0()); }
(

)
{ after(grammarAccess.getLiteralTypeAccess().getBLiteralTypeAction_0()); }
)

	rule__LiteralType__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTypeAccess().getTypeAssignment_1()); }
(rule__LiteralType__TypeAssignment_1)
{ after(grammarAccess.getLiteralTypeAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getBLiteralExpressionAction_0()); }
(

)
{ after(grammarAccess.getBooleanLiteralAccess().getBLiteralExpressionAction_0()); }
)

	rule__BooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1()); }
(rule__BooleanLiteral__ValueAssignment_1)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntegerLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getBLiteralExpressionAction_0()); }
(

)
{ after(grammarAccess.getIntegerLiteralAccess().getBLiteralExpressionAction_0()); }
)

	rule__IntegerLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getValueAssignment_1()); }
(rule__IntegerLiteral__ValueAssignment_1)
{ after(grammarAccess.getIntegerLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnitLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralAccess().getBLiteralExpressionAction_0()); }
(

)
{ after(grammarAccess.getUnitLiteralAccess().getBLiteralExpressionAction_0()); }
)

	rule__UnitLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralAccess().getValueAssignment_1()); }
(rule__UnitLiteral__ValueAssignment_1)
{ after(grammarAccess.getUnitLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getBLiteralExpressionAction_0()); }
(

)
{ after(grammarAccess.getStringLiteralAccess().getBLiteralExpressionAction_0()); }
)

	rule__StringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
(rule__StringLiteral__ValueAssignment_1)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RealLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getBLiteralExpressionAction_0()); }
(

)
{ after(grammarAccess.getRealLiteralAccess().getBLiteralExpressionAction_0()); }
)

	rule__RealLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getValueAssignment_1()); }
(rule__RealLiteral__ValueAssignment_1)
{ after(grammarAccess.getRealLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RegexpLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegexpLiteralAccess().getBRegularExpressionAction_0()); }
(

)
{ after(grammarAccess.getRegexpLiteralAccess().getBRegularExpressionAction_0()); }
)

	rule__RegexpLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RegexpLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegexpLiteralAccess().getPatternAssignment_1()); }
(rule__RegexpLiteral__PatternAssignment_1)
{ after(grammarAccess.getRegexpLiteralAccess().getPatternAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NullLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getBLiteralExpressionAction_0()); }
(

)
{ after(grammarAccess.getNullLiteralAccess().getBLiteralExpressionAction_0()); }
)

	rule__NullLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__NullLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getNullLiteralAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParanthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

	rule__ParanthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ParanthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
)

	rule__ParanthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ParanthesizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VersionRangeLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_0_0()); }
(rule__VersionRangeLiteral__Alternatives_0_0)
{ after(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_0_0()); }
)

	rule__VersionRangeLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VersionRangeLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_0_1()); }
(rule__VersionRangeLiteral__Alternatives_0_1)
{ after(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_0_1()); }
)

	rule__VersionRangeLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__VersionRangeLiteral__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeLiteralAccess().getGroup_0_2()); }
(rule__VersionRangeLiteral__Group_0_2__0)?
{ after(grammarAccess.getVersionRangeLiteralAccess().getGroup_0_2()); }
)

	rule__VersionRangeLiteral__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}


rule__VersionRangeLiteral__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_0_3()); }
(rule__VersionRangeLiteral__Alternatives_0_3)
{ after(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VersionRangeLiteral__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeLiteralAccess().getCommaKeyword_0_2_0()); }

	',' 

{ after(grammarAccess.getVersionRangeLiteralAccess().getCommaKeyword_0_2_0()); }
)

	rule__VersionRangeLiteral__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VersionRangeLiteral__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_0_2_1()); }
(rule__VersionRangeLiteral__Alternatives_0_2_1)
{ after(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QIDREF__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDREFAccess().getAlternatives_0_0()); }
(rule__QIDREF__Alternatives_0_0)
{ after(grammarAccess.getQIDREFAccess().getAlternatives_0_0()); }
)

	rule__QIDREF__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__QIDREF__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDREFAccess().getGroup_0_1()); }
(rule__QIDREF__Group_0_1__0)?
{ after(grammarAccess.getQIDREFAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QIDREF__Group_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDREFAccess().getAlternatives_0_0_1_0()); }
(rule__QIDREF__Alternatives_0_0_1_0)
{ after(grammarAccess.getQIDREFAccess().getAlternatives_0_0_1_0()); }
)

	rule__QIDREF__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__QIDREF__Group_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDREFAccess().getGroup_0_0_1_1()); }
(rule__QIDREF__Group_0_0_1_1__0)?
{ after(grammarAccess.getQIDREFAccess().getGroup_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QIDREF__Group_0_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDREFAccess().getFullStopKeyword_0_0_1_1_0()); }

	'.' 

{ after(grammarAccess.getQIDREFAccess().getFullStopKeyword_0_0_1_1_0()); }
)

	rule__QIDREF__Group_0_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__QIDREF__Group_0_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDREFAccess().getSuperKeyword_0_0_1_1_1()); }

	'super' 

{ after(grammarAccess.getQIDREFAccess().getSuperKeyword_0_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QIDREF__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDREFAccess().getFullStopKeyword_0_1_0()); }

	'.' 

{ after(grammarAccess.getQIDREFAccess().getFullStopKeyword_0_1_0()); }
)

	rule__QIDREF__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__QIDREF__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDREFAccess().getQIDParserRuleCall_0_1_1()); }
	ruleQID
{ after(grammarAccess.getQIDREFAccess().getQIDParserRuleCall_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_0()); }
)

	rule__QID__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__QID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDAccess().getAlternatives_1()); }
(rule__QID__Alternatives_1)*
{ after(grammarAccess.getQIDAccess().getAlternatives_1()); }
)

	rule__QID__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__QID__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDAccess().getGroup_2()); }
(rule__QID__Group_2__0)*
{ after(grammarAccess.getQIDAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QID__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDAccess().getFullStopKeyword_2_0()); }

	'.' 

{ after(grammarAccess.getQIDAccess().getFullStopKeyword_2_0()); }
)

	rule__QID__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__QID__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
{ after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_1()); }
)

	rule__QID__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__QID__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDAccess().getAlternatives_2_2()); }
(rule__QID__Alternatives_2_2)*
{ after(grammarAccess.getQIDAccess().getAlternatives_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CompoundName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundNameAccess().getEscapedQualifiedNameParserRuleCall_0()); }
	ruleEscapedQualifiedName
{ after(grammarAccess.getCompoundNameAccess().getEscapedQualifiedNameParserRuleCall_0()); }
)

	rule__CompoundName__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundNameAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getCompoundNameAccess().getSolidusKeyword_1()); }
)

	rule__CompoundName__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundNameAccess().getEscapedQualifiedNameParserRuleCall_2()); }
	ruleEscapedQualifiedName
{ after(grammarAccess.getCompoundNameAccess().getEscapedQualifiedNameParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AlfanumSym__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlfanumSymAccess().getAlternatives_0()); }
(rule__AlfanumSym__Alternatives_0)
{ after(grammarAccess.getAlfanumSymAccess().getAlternatives_0()); }
)

	rule__AlfanumSym__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AlfanumSym__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlfanumSymAccess().getAlternatives_1()); }
(rule__AlfanumSym__Alternatives_1)*
{ after(grammarAccess.getAlfanumSymAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__REAL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREALAccess().getINTTerminalRuleCall_0()); }
(	RULE_INT)?
{ after(grammarAccess.getREALAccess().getINTTerminalRuleCall_0()); }
)

	rule__REAL__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__REAL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREALAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getREALAccess().getFullStopKeyword_1()); }
)

	rule__REAL__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__REAL__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREALAccess().getAlternatives_2()); }
(rule__REAL__Alternatives_2)
{ after(grammarAccess.getREALAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BeeModel__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeeModelAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getBeeModelAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BeeModel__FunctionsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeeModelAccess().getFunctionsFunctionParserRuleCall_1_0_0()); }
	ruleFunction{ after(grammarAccess.getBeeModelAccess().getFunctionsFunctionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BeeModel__ConcernAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeeModelAccess().getConcernConcernParserRuleCall_1_1_0()); }
	ruleConcern{ after(grammarAccess.getBeeModelAccess().getConcernConcernParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BeeModel__PropertySetsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeeModelAccess().getPropertySetsNamedPropertySetParserRuleCall_1_2_1_0()); }
	ruleNamedPropertySet{ after(grammarAccess.getBeeModelAccess().getPropertySetsNamedPropertySetParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BeeModel__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeeModelAccess().getBodyUnitParserRuleCall_2_0()); }
	ruleUnit{ after(grammarAccess.getBeeModelAccess().getBodyUnitParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ReexportAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getReexportReexportKeyword_1_0()); }
(
{ before(grammarAccess.getImportAccess().getReexportReexportKeyword_1_0()); }

	'reexport' 

{ after(grammarAccess.getImportAccess().getReexportReexportKeyword_1_0()); }
)

{ after(grammarAccess.getImportAccess().getReexportReexportKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__QualifiedNameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getQualifiedNameQIDParserRuleCall_3_0()); }
	ruleQID{ after(grammarAccess.getImportAccess().getQualifiedNameQIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NameAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_4_1_0()); }
	RULE_ID{ after(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__DocumentationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0()); }
	RULE_DOCUMENTATION{ after(grammarAccess.getUnitAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__ExecutionModeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getExecutionModeExecutionModeEnumRuleCall_2_0()); }
	ruleExecutionMode{ after(grammarAccess.getUnitAccess().getExecutionModeExecutionModeEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getNameUnitNameParserRuleCall_4_0()); }
	ruleUnitName{ after(grammarAccess.getUnitAccess().getNameUnitNameParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__VersionAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getVersionVersionParserRuleCall_5_1_0()); }
	ruleVersion{ after(grammarAccess.getUnitAccess().getVersionVersionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__ImplementsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getImplementsInterfaceNameParserRuleCall_6_1_0()); }
	ruleInterfaceName{ after(grammarAccess.getUnitAccess().getImplementsInterfaceNameParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__ImplementsAssignment_6_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getImplementsInterfaceNameParserRuleCall_6_2_1_0()); }
	ruleInterfaceName{ after(grammarAccess.getUnitAccess().getImplementsInterfaceNameParserRuleCall_6_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__DefaultPropertiesAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getDefaultPropertiesPropertySetParserRuleCall_8_2_0()); }
	rulePropertySet{ after(grammarAccess.getUnitAccess().getDefaultPropertiesPropertySetParserRuleCall_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__ProvidedCapabilitiesAssignment_9_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_9_0_2_0_0()); }
	ruleProvidedCapability{ after(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_9_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__ProvidedCapabilitiesAssignment_9_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_9_1_1_0()); }
	ruleProvidedCapability{ after(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_9_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__RequiredCapabilitiesAssignment_9_2_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRequiredCapabilitiesRequiredCapabilityParserRuleCall_9_2_2_0_0()); }
	ruleRequiredCapability{ after(grammarAccess.getUnitAccess().getRequiredCapabilitiesRequiredCapabilityParserRuleCall_9_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__RequiredCapabilitiesAssignment_9_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRequiredCapabilitiesRequiredCapabilityParserRuleCall_9_3_1_0()); }
	ruleRequiredCapability{ after(grammarAccess.getUnitAccess().getRequiredCapabilitiesRequiredCapabilityParserRuleCall_9_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__MetaRequiredCapabilitiesAssignment_9_4_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_9_4_3_0_0()); }
	ruleRequiredCapability{ after(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_9_4_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__MetaRequiredCapabilitiesAssignment_9_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_9_5_2_0()); }
	ruleRequiredCapability{ after(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_9_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__ConcernsAssignment_9_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getConcernsConcernParserRuleCall_9_6_0()); }
	ruleConcern{ after(grammarAccess.getUnitAccess().getConcernsConcernParserRuleCall_9_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__SynchronizationsAssignment_9_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSynchronizationsSynchronizationParserRuleCall_9_7_2_0()); }
	ruleSynchronization{ after(grammarAccess.getUnitAccess().getSynchronizationsSynchronizationParserRuleCall_9_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__SynchronizationsAssignment_9_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSynchronizationsSynchronizationParserRuleCall_9_8_1_0()); }
	ruleSynchronization{ after(grammarAccess.getUnitAccess().getSynchronizationsSynchronizationParserRuleCall_9_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__BuildersAssignment_9_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getBuildersBuilderParserRuleCall_9_9_0()); }
	ruleBuilder{ after(grammarAccess.getUnitAccess().getBuildersBuilderParserRuleCall_9_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__FunctionsAssignment_9_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getFunctionsFunctionParserRuleCall_9_10_0()); }
	ruleFunction{ after(grammarAccess.getUnitAccess().getFunctionsFunctionParserRuleCall_9_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__RepositoryConfigurationsAssignment_9_11_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRepositoryConfigurationsRepositoryConfigurationParserRuleCall_9_11_2_0()); }
	ruleRepositoryConfiguration{ after(grammarAccess.getUnitAccess().getRepositoryConfigurationsRepositoryConfigurationParserRuleCall_9_11_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__PropertySetsAssignment_9_12_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getPropertySetsNamedPropertySetParserRuleCall_9_12_1_0()); }
	ruleNamedPropertySet{ after(grammarAccess.getUnitAccess().getPropertySetsNamedPropertySetParserRuleCall_9_12_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__ContainersAssignment_9_13_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getContainersContainerConfigurationParserRuleCall_9_13_2_0()); }
	ruleContainerConfiguration{ after(grammarAccess.getUnitAccess().getContainersContainerConfigurationParserRuleCall_9_13_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedCapability__CapabilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getCapabilityFilteredCapabilityParserRuleCall_0_0()); }
	ruleFilteredCapability{ after(grammarAccess.getProvidedCapabilityAccess().getCapabilityFilteredCapabilityParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedCapability__VersionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getVersionVersionParserRuleCall_1_1_0()); }
	ruleVersion{ after(grammarAccess.getProvidedCapabilityAccess().getVersionVersionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredCapability__CapabilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getCapabilityFilteredCapabilityParserRuleCall_0_0()); }
	ruleFilteredCapability{ after(grammarAccess.getRequiredCapabilityAccess().getCapabilityFilteredCapabilityParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredCapability__RangeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getRangeVersionRangeParserRuleCall_1_1_0()); }
	ruleVersionRange{ after(grammarAccess.getRequiredCapabilityAccess().getRangeVersionRangeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilteredCapability__FilterAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilteredCapabilityAccess().getFilterFilterParserRuleCall_0_1_0()); }
	ruleFilter{ after(grammarAccess.getFilteredCapabilityAccess().getFilterFilterParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilteredCapability__CapabilityAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilteredCapabilityAccess().getCapabilityCapabilityParserRuleCall_1_0()); }
	ruleCapability{ after(grammarAccess.getFilteredCapabilityAccess().getCapabilityCapabilityParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Capability__InterfaceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityAccess().getInterfaceInterfaceNameParserRuleCall_0_0()); }
	ruleInterfaceName{ after(grammarAccess.getCapabilityAccess().getInterfaceInterfaceNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Capability__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityAccess().getNameUnitNameParserRuleCall_2_0()); }
	ruleUnitName{ after(grammarAccess.getCapabilityAccess().getNameUnitNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedPropertySet__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertySetAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getNamedPropertySetAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedPropertySet__ExtendsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertySetAccess().getExtendsBNamedPropertySetCrossReference_2_1_0()); }
(
{ before(grammarAccess.getNamedPropertySetAccess().getExtendsBNamedPropertySetQIDREFParserRuleCall_2_1_0_1()); }
	ruleQIDREF{ after(grammarAccess.getNamedPropertySetAccess().getExtendsBNamedPropertySetQIDREFParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getNamedPropertySetAccess().getExtendsBNamedPropertySetCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedPropertySet__OperationsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertySetAccess().getOperationsPropertyOperationParserRuleCall_4_0()); }
	rulePropertyOperation{ after(grammarAccess.getNamedPropertySetAccess().getOperationsPropertyOperationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySet__ExtendsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertySetAccess().getExtendsBNamedPropertySetCrossReference_1_1_0()); }
(
{ before(grammarAccess.getPropertySetAccess().getExtendsBNamedPropertySetQIDREFParserRuleCall_1_1_0_1()); }
	ruleQIDREF{ after(grammarAccess.getPropertySetAccess().getExtendsBNamedPropertySetQIDREFParserRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getPropertySetAccess().getExtendsBNamedPropertySetCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySet__OperationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertySetAccess().getOperationsPropertyOperationParserRuleCall_3_0()); }
	rulePropertyOperation{ after(grammarAccess.getPropertySetAccess().getOperationsPropertyOperationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalPropertyOperation__CondExprAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalPropertyOperationAccess().getCondExprExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getConditionalPropertyOperationAccess().getCondExprExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalPropertyOperation__BodyAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalPropertyOperationAccess().getBodyPropertyDefinitionOperationParserRuleCall_5_0_0()); }
	rulePropertyDefinitionOperation{ after(grammarAccess.getConditionalPropertyOperationAccess().getBodyPropertyDefinitionOperationParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalPropertyOperation__BodyAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalPropertyOperationAccess().getBodyPropertySetOperationParserRuleCall_5_1_0()); }
	rulePropertySetOperation{ after(grammarAccess.getConditionalPropertyOperationAccess().getBodyPropertySetOperationParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinitionOperation__DefinitionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionOperationAccess().getDefinitionPropertyValDeclarationParserRuleCall_1_0_0()); }
	rulePropertyValDeclaration{ after(grammarAccess.getPropertyDefinitionOperationAccess().getDefinitionPropertyValDeclarationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinitionOperation__DefinitionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionOperationAccess().getDefinitionPropertyVarDeclarationParserRuleCall_1_1_0()); }
	rulePropertyVarDeclaration{ after(grammarAccess.getPropertyDefinitionOperationAccess().getDefinitionPropertyVarDeclarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValDeclaration__FinalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValDeclarationAccess().getFinalFinalKeyword_1_0()); }
(
{ before(grammarAccess.getPropertyValDeclarationAccess().getFinalFinalKeyword_1_0()); }

	'final' 

{ after(grammarAccess.getPropertyValDeclarationAccess().getFinalFinalKeyword_1_0()); }
)

{ after(grammarAccess.getPropertyValDeclarationAccess().getFinalFinalKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValDeclaration__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValDeclarationAccess().getTypeTypeRefParserRuleCall_2_0()); }
	ruleTypeRef{ after(grammarAccess.getPropertyValDeclarationAccess().getTypeTypeRefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValDeclaration__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValDeclarationAccess().getNamePIDTerminalRuleCall_3_0()); }
	RULE_PID{ after(grammarAccess.getPropertyValDeclarationAccess().getNamePIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValDeclaration__ValueExprAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValDeclarationAccess().getValueExprExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getPropertyValDeclarationAccess().getValueExprExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyVarDeclaration__FinalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getFinalFinalKeyword_1_0()); }
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getFinalFinalKeyword_1_0()); }

	'final' 

{ after(grammarAccess.getPropertyVarDeclarationAccess().getFinalFinalKeyword_1_0()); }
)

{ after(grammarAccess.getPropertyVarDeclarationAccess().getFinalFinalKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyVarDeclaration__MutableAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getMutableMutableKeyword_2_0()); }
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getMutableMutableKeyword_2_0()); }

	'mutable' 

{ after(grammarAccess.getPropertyVarDeclarationAccess().getMutableMutableKeyword_2_0()); }
)

{ after(grammarAccess.getPropertyVarDeclarationAccess().getMutableMutableKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyVarDeclaration__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getPropertyVarDeclarationAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyVarDeclaration__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getNamePIDTerminalRuleCall_4_0()); }
	RULE_PID{ after(grammarAccess.getPropertyVarDeclarationAccess().getNamePIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyVarDeclaration__ValueExprAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyVarDeclarationAccess().getValueExprExpressionParserRuleCall_5_1_0()); }
	ruleExpression{ after(grammarAccess.getPropertyVarDeclarationAccess().getValueExprExpressionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySetOperation__PropertySetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertySetOperationAccess().getPropertySetPropertySetParserRuleCall_1_0()); }
	rulePropertySet{ after(grammarAccess.getPropertySetOperationAccess().getPropertySetPropertySetParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Synchronization__PartrefsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationAccess().getPartrefsSynchronizedPartParserRuleCall_0_0()); }
	ruleSynchronizedPart{ after(grammarAccess.getSynchronizationAccess().getPartrefsSynchronizedPartParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Synchronization__PartrefsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationAccess().getPartrefsSynchronizedPartParserRuleCall_1_1_0()); }
	ruleSynchronizedPart{ after(grammarAccess.getSynchronizationAccess().getPartrefsSynchronizedPartParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathGroup__PathsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getPathsPathVectorElementParserRuleCall_0_0()); }
	rulePathVectorElement{ after(grammarAccess.getPathGroupAccess().getPathsPathVectorElementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathGroup__AnnotationsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getAnnotationsPropertySetParserRuleCall_1_1_0()); }
	rulePropertySet{ after(grammarAccess.getPathGroupAccess().getAnnotationsPropertySetParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilteredPathVector__FilterAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilteredPathVectorAccess().getFilterFilterParserRuleCall_1_0()); }
	ruleFilter{ after(grammarAccess.getFilteredPathVectorAccess().getFilterFilterParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilteredPathVector__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilteredPathVectorAccess().getBodyAlternatives_2_0()); }
(rule__FilteredPathVector__BodyAlternatives_2_0)
{ after(grammarAccess.getFilteredPathVectorAccess().getBodyAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasePathVector__BasePathAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasePathVectorAccess().getBasePathPathParserRuleCall_0_0()); }
	rulePath{ after(grammarAccess.getBasePathVectorAccess().getBasePathPathParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasePathVector__PathsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasePathVectorAccess().getPathsPathParserRuleCall_2_0_0()); }
	rulePath{ after(grammarAccess.getBasePathVectorAccess().getPathsPathParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasePathVector__PathsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasePathVectorAccess().getPathsPathParserRuleCall_2_1_1_0()); }
	rulePath{ after(grammarAccess.getBasePathVectorAccess().getPathsPathParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnbasedPathVector__PathsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnbasedPathVectorAccess().getPathsPathParserRuleCall_0_0()); }
	rulePath{ after(grammarAccess.getUnbasedPathVectorAccess().getPathsPathParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnbasedPathVector__PathsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnbasedPathVectorAccess().getPathsPathParserRuleCall_1_1_0()); }
	rulePath{ after(grammarAccess.getUnbasedPathVectorAccess().getPathsPathParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundPathVector__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundPathVectorAccess().getBodyPathVectorElementParserRuleCall_2_0()); }
	rulePathVectorElement{ after(grammarAccess.getCompoundPathVectorAccess().getBodyPathVectorElementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prerequisite__FilterAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getFilterFilterParserRuleCall_0_1_0()); }
	ruleFilter{ after(grammarAccess.getPrerequisiteAccess().getFilterFilterParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prerequisite__WithClauseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getWithClauseWithClauseParserRuleCall_1_0()); }
	ruleWithClause{ after(grammarAccess.getPrerequisiteAccess().getWithClauseWithClauseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prerequisite__PartReferenceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getPartReferencePrerequisiteEntryParserRuleCall_2_0()); }
	rulePrerequisiteEntry{ after(grammarAccess.getPrerequisiteAccess().getPartReferencePrerequisiteEntryParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prerequisite__AliasAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getAliasIDTerminalRuleCall_3_1_0()); }
	RULE_ID{ after(grammarAccess.getPrerequisiteAccess().getAliasIDTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithClause__ReferencesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getReferencesExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getWithClauseAccess().getReferencesExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithClause__ReferencesAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getReferencesExpressionParserRuleCall_2_2_1_0()); }
	ruleExpression{ after(grammarAccess.getWithClauseAccess().getReferencesExpressionParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithClause__PropertiesAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getPropertiesPropertySetParserRuleCall_3_0_1_0()); }
	rulePropertySet{ after(grammarAccess.getWithClauseAccess().getPropertiesPropertySetParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithClause__ConcernAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithClauseAccess().getConcernConcernBlockParserRuleCall_3_1_1_0()); }
	ruleConcernBlock{ after(grammarAccess.getWithClauseAccess().getConcernConcernBlockParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectPartReferemce__UnitAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectPartReferemceAccess().getUnitQIDParserRuleCall_0_0_0()); }
	ruleQID{ after(grammarAccess.getDirectPartReferemceAccess().getUnitQIDParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectPartReferemce__UnitAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectPartReferemceAccess().getUnitUnitKeyword_0_1_0()); }
(
{ before(grammarAccess.getDirectPartReferemceAccess().getUnitUnitKeyword_0_1_0()); }

	'unit' 

{ after(grammarAccess.getDirectPartReferemceAccess().getUnitUnitKeyword_0_1_0()); }
)

{ after(grammarAccess.getDirectPartReferemceAccess().getUnitUnitKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectPartReferemce__BuilderAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectPartReferemceAccess().getBuilderPartNameParserRuleCall_2_0()); }
	rulePartName{ after(grammarAccess.getDirectPartReferemceAccess().getBuilderPartNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectPartReferemce__ParametersAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectPartReferemceAccess().getParametersParameterListParserRuleCall_3_0()); }
	ruleParameterList{ after(grammarAccess.getDirectPartReferemceAccess().getParametersParameterListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CapabilityReferencedPart__CapabilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getCapabilityCapabilityParserRuleCall_0_0()); }
	ruleCapability{ after(grammarAccess.getCapabilityReferencedPartAccess().getCapabilityCapabilityParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CapabilityReferencedPart__RangeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getRangeVersionRangeParserRuleCall_1_1_0()); }
	ruleVersionRange{ after(grammarAccess.getCapabilityReferencedPartAccess().getRangeVersionRangeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CapabilityReferencedPart__PartNameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getPartNamePartNameParserRuleCall_2_1_0()); }
	rulePartName{ after(grammarAccess.getCapabilityReferencedPartAccess().getPartNamePartNameParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CapabilityReferencedPart__ParametersAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getParametersParameterListParserRuleCall_3_0()); }
	ruleParameterList{ after(grammarAccess.getCapabilityReferencedPartAccess().getParametersParameterListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundReferences__PrerequisitesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundReferencesAccess().getPrerequisitesPrerequisiteParserRuleCall_2_0()); }
	rulePrerequisite{ after(grammarAccess.getCompoundReferencesAccess().getPrerequisitesPrerequisiteParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Builder__DocumentationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0()); }
	RULE_DOCUMENTATION{ after(grammarAccess.getBuilderAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Builder__VisibilityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getVisibilityVisibilityEnumRuleCall_2_0()); }
	ruleVisibility{ after(grammarAccess.getBuilderAccess().getVisibilityVisibilityEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Builder__ExecutionModeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getExecutionModeExecutionModeEnumRuleCall_3_0()); }
	ruleExecutionMode{ after(grammarAccess.getBuilderAccess().getExecutionModeExecutionModeEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Builder__FinalAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getFinalFinalKeyword_4_0()); }
(
{ before(grammarAccess.getBuilderAccess().getFinalFinalKeyword_4_0()); }

	'final' 

{ after(grammarAccess.getBuilderAccess().getFinalFinalKeyword_4_0()); }
)

{ after(grammarAccess.getBuilderAccess().getFinalFinalKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Builder__CachedAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getCachedCachedKeyword_5_0()); }
(
{ before(grammarAccess.getBuilderAccess().getCachedCachedKeyword_5_0()); }

	'cached' 

{ after(grammarAccess.getBuilderAccess().getCachedCachedKeyword_5_0()); }
)

{ after(grammarAccess.getBuilderAccess().getCachedCachedKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Builder__NameAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getNamePartNameParserRuleCall_7_0()); }
	rulePartName{ after(grammarAccess.getBuilderAccess().getNamePartNameParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Builder__ParamsAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getParamsParameterDeclarationListParserRuleCall_8_1_0()); }
	ruleParameterDeclarationList{ after(grammarAccess.getBuilderAccess().getParamsParameterDeclarationListParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Builder__ProvidedCapabilitiesAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_9_1_0()); }
	ruleProvidedCapability{ after(grammarAccess.getBuilderAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Builder__ProvidedCapabilitiesAssignment_9_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_9_2_1_0()); }
	ruleProvidedCapability{ after(grammarAccess.getBuilderAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_9_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Builder__PreConditionAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getPreConditionPreConditionParserRuleCall_10_0()); }
	rulePreCondition{ after(grammarAccess.getBuilderAccess().getPreConditionPreConditionParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Builder__PostConditionAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getPostConditionPostConditionParserRuleCall_11_0()); }
	rulePostCondition{ after(grammarAccess.getBuilderAccess().getPostConditionPostConditionParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Builder__PropertiesAssignment_13_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getPropertiesPropertySetParserRuleCall_13_2_0()); }
	rulePropertySet{ after(grammarAccess.getBuilderAccess().getPropertiesPropertySetParserRuleCall_13_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Builder__InputAssignment_14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getInputBuilderInputParserRuleCall_14_0()); }
	ruleBuilderInput{ after(grammarAccess.getBuilderAccess().getInputBuilderInputParserRuleCall_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Builder__OutputAssignment_15
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getOutputBuilderOutputParserRuleCall_15_0()); }
	ruleBuilderOutput{ after(grammarAccess.getBuilderAccess().getOutputBuilderOutputParserRuleCall_15_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Builder__ExpressionListAssignment_16
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderAccess().getExpressionListExpressionListParserRuleCall_16_0()); }
	ruleExpressionList{ after(grammarAccess.getBuilderAccess().getExpressionListExpressionListParserRuleCall_16_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_1_0()); }
	ruleFirstParameter{ after(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParametersAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_2_1_0()); }
	ruleFirstParameter{ after(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getParameterAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureParameter__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureParameterAccess().getExprClosureExpressionParserRuleCall_1_0()); }
	ruleClosureExpression{ after(grammarAccess.getClosureParameterAccess().getExprClosureExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclarationList__ParamsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationListAccess().getParamsParameterDeclarationParserRuleCall_0_0_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getParameterDeclarationListAccess().getParamsParameterDeclarationParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclarationList__ParamsAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationListAccess().getParamsParameterDeclarationParserRuleCall_0_1_1_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getParameterDeclarationListAccess().getParamsParameterDeclarationParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclarationList__ParamsAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationListAccess().getParamsParameterDeclarationEllipseParserRuleCall_0_2_1_0()); }
	ruleParameterDeclarationEllipse{ after(grammarAccess.getParameterDeclarationListAccess().getParamsParameterDeclarationEllipseParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclarationList__ParamsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationListAccess().getParamsParameterDeclarationEllipseParserRuleCall_1_0()); }
	ruleParameterDeclarationEllipse{ after(grammarAccess.getParameterDeclarationListAccess().getParamsParameterDeclarationEllipseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__TypeAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getTypeTypeRefParserRuleCall_1_0_0()); }
	ruleTypeRef{ after(grammarAccess.getParameterDeclarationAccess().getTypeTypeRefParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclarationEllipse__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationEllipseAccess().getTypeTypeRefParserRuleCall_2_0()); }
	ruleTypeRef{ after(grammarAccess.getParameterDeclarationEllipseAccess().getTypeTypeRefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclarationEllipse__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationEllipseAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getParameterDeclarationEllipseAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuilderOutput__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderOutputAccess().getBodyPathGroupParserRuleCall_2_0()); }
	rulePathGroup{ after(grammarAccess.getBuilderOutputAccess().getBodyPathGroupParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuilderInput__PreConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderInputAccess().getPreConditionPreConditionParserRuleCall_1_0()); }
	rulePreCondition{ after(grammarAccess.getBuilderInputAccess().getPreConditionPreConditionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuilderInput__PostConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderInputAccess().getPostConditionPostConditionParserRuleCall_2_0()); }
	rulePostCondition{ after(grammarAccess.getBuilderInputAccess().getPostConditionPostConditionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuilderInput__PrerequisitesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuilderInputAccess().getPrerequisitesPrerequisiteParserRuleCall_4_0()); }
	rulePrerequisite{ after(grammarAccess.getBuilderInputAccess().getPrerequisitesPrerequisiteParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryDeclaration__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryDeclarationAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); }
	RULE_DOCUMENTATION{ after(grammarAccess.getRepositoryDeclarationAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryDeclaration__LocationAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryDeclarationAccess().getLocationURIParserRuleCall_1_0_0()); }
	ruleURI{ after(grammarAccess.getRepositoryDeclarationAccess().getLocationURIParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryDeclaration__TypeAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryDeclarationAccess().getTypeTypeRefParserRuleCall_1_1_1_0()); }
	ruleTypeRef{ after(grammarAccess.getRepositoryDeclarationAccess().getTypeTypeRefParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryDeclaration__ContextAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryDeclarationAccess().getContextContextBlockParserRuleCall_2_0()); }
	ruleContextBlock{ after(grammarAccess.getRepositoryDeclarationAccess().getContextContextBlockParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategy__StrategyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResolutionStrategyAccess().getStrategyAlternatives_0_0()); }
(rule__ResolutionStrategy__StrategyAlternatives_0_0)
{ after(grammarAccess.getResolutionStrategyAccess().getStrategyAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategy__RepositoryConfigAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResolutionStrategyAccess().getRepositoryConfigRepositoryConfigurationParserRuleCall_2_0()); }
	ruleRepositoryConfiguration{ after(grammarAccess.getResolutionStrategyAccess().getRepositoryConfigRepositoryConfigurationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerConfiguration__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerConfigurationAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); }
	RULE_DOCUMENTATION{ after(grammarAccess.getContainerConfigurationAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerConfiguration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerConfigurationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getContainerConfigurationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerConfiguration__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerConfigurationAccess().getTypeTypeRefParserRuleCall_4_0()); }
	ruleTypeRef{ after(grammarAccess.getContainerConfigurationAccess().getTypeTypeRefParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerConfiguration__ContextBlockAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerConfigurationAccess().getContextBlockContextBlockParserRuleCall_5_0()); }
	ruleContextBlock{ after(grammarAccess.getContainerConfigurationAccess().getContextBlockContextBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); }
	RULE_DOCUMENTATION{ after(grammarAccess.getConcernAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getConcernAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__ConcernAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernAccess().getConcernConcernBlockParserRuleCall_3_0()); }
	ruleConcernBlock{ after(grammarAccess.getConcernAccess().getConcernConcernBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConcernBlock__SuperConcernsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernBlockAccess().getSuperConcernsIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getConcernBlockAccess().getSuperConcernsIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConcernBlock__SuperConcernsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernBlockAccess().getSuperConcernsIDTerminalRuleCall_1_2_1_0()); }
	RULE_ID{ after(grammarAccess.getConcernBlockAccess().getSuperConcernsIDTerminalRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConcernBlock__ContextsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernBlockAccess().getContextsContextParserRuleCall_3_0_0()); }
	ruleContext{ after(grammarAccess.getConcernBlockAccess().getContextsContextParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConcernBlock__FunctionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcernBlockAccess().getFunctionsFunctionParserRuleCall_3_1_0()); }
	ruleFunction{ after(grammarAccess.getConcernBlockAccess().getFunctionsFunctionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__PredicateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterAccess().getPredicateExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getFilterAccess().getPredicateExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreCondition__AssertsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreConditionAccess().getAssertsAssertionExpressionParserRuleCall_2_0()); }
	ruleAssertionExpression{ after(grammarAccess.getPreConditionAccess().getAssertsAssertionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostCondition__AssertsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostConditionAccess().getAssertsAssertionExpressionParserRuleCall_2_0()); }
	ruleAssertionExpression{ after(grammarAccess.getPostConditionAccess().getAssertsAssertionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionExpression__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getAssertionExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionExpression__MessageAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionExpressionAccess().getMessageSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getAssertionExpressionAccess().getMessageSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExpressionsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExpressionsExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getExpressionListAccess().getExpressionsExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__DocumentationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0()); }
	RULE_DOCUMENTATION{ after(grammarAccess.getFunctionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__VisibilityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getVisibilityVisibilityEnumRuleCall_2_0()); }
	ruleVisibility{ after(grammarAccess.getFunctionAccess().getVisibilityVisibilityEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ExecutionModeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getExecutionModeExecutionModeEnumRuleCall_3_0()); }
	ruleExecutionMode{ after(grammarAccess.getFunctionAccess().getExecutionModeExecutionModeEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__FinalAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFinalFinalKeyword_4_0()); }
(
{ before(grammarAccess.getFunctionAccess().getFinalFinalKeyword_4_0()); }

	'final' 

{ after(grammarAccess.getFunctionAccess().getFinalFinalKeyword_4_0()); }
)

{ after(grammarAccess.getFunctionAccess().getFinalFinalKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ReturnTypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getReturnTypeTypeRefParserRuleCall_6_0()); }
	ruleTypeRef{ after(grammarAccess.getFunctionAccess().getReturnTypeTypeRefParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_7_0()); }
	RULE_ID{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ParametersAssignment_8_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_8_1_0_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_8_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ParametersAssignment_8_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_8_1_1_1_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_8_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__FuncExprAssignment_9_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFuncExprExpressionParserRuleCall_9_0_1_0()); }
	ruleExpression{ after(grammarAccess.getFunctionAccess().getFuncExprExpressionParserRuleCall_9_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__FuncExprAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFuncExprBlockExpressionParserRuleCall_9_1_0()); }
	ruleBlockExpression{ after(grammarAccess.getFunctionAccess().getFuncExprBlockExpressionParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__FunctionNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignmentOperatorParserRuleCall_1_1_0()); }
	ruleAssignmentOperator{ after(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignmentOperatorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__RightExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignmentExpressionParserRuleCall_1_2_0()); }
	ruleAssignmentExpression{ after(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignmentExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__FinalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); }
(
{ before(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); }

	'final' 

{ after(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); }
)

{ after(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__TypeAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationAccess().getTypeTypeRefParserRuleCall_2_0_1_0()); }
	ruleTypeRef{ after(grammarAccess.getVarDeclarationAccess().getTypeTypeRefParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_2_1_0()); }
	RULE_ID{ after(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__ValueExprAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationAccess().getValueExprExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getVarDeclarationAccess().getValueExprExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValDeclaration__FinalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); }
(
{ before(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); }

	'final' 

{ after(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); }
)

{ after(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValDeclaration__ImmutableAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); }
(
{ before(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); }

	'val' 

{ after(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); }
)

{ after(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValDeclaration__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValDeclarationAccess().getTypeTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getValDeclarationAccess().getTypeTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValDeclaration__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValDeclarationAccess().getNameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getValDeclarationAccess().getNameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValDeclaration__ValueExprAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValDeclarationAccess().getValueExprExpressionParserRuleCall_6_0()); }
	ruleExpression{ after(grammarAccess.getValDeclarationAccess().getValueExprExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeRef__RawTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeRefAccess().getRawTypeB3JavaImportCrossReference_1_0()); }
(
{ before(grammarAccess.getSimpleTypeRefAccess().getRawTypeB3JavaImportIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSimpleTypeRefAccess().getRawTypeB3JavaImportIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getSimpleTypeRefAccess().getRawTypeB3JavaImportCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeRef__ActualArgumentsListAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListB3JavaImportCrossReference_2_1_0()); }
(
{ before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListB3JavaImportIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListB3JavaImportIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListB3JavaImportCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeRef__ActualArgumentsListAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListB3JavaImportCrossReference_2_2_1_0()); }
(
{ before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListB3JavaImportIDTerminalRuleCall_2_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListB3JavaImportIDTerminalRuleCall_2_2_1_0_1()); }
)
{ after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListB3JavaImportCrossReference_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureTypeRef__ParameterTypesAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureTypeRefAccess().getParameterTypesB3JavaImportCrossReference_1_1_0_0()); }
(
{ before(grammarAccess.getClosureTypeRefAccess().getParameterTypesB3JavaImportIDTerminalRuleCall_1_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getClosureTypeRefAccess().getParameterTypesB3JavaImportIDTerminalRuleCall_1_1_0_0_1()); }
)
{ after(grammarAccess.getClosureTypeRefAccess().getParameterTypesB3JavaImportCrossReference_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureTypeRefAccess().getParameterTypesB3JavaImportCrossReference_1_1_1_1_0()); }
(
{ before(grammarAccess.getClosureTypeRefAccess().getParameterTypesB3JavaImportIDTerminalRuleCall_1_1_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getClosureTypeRefAccess().getParameterTypesB3JavaImportIDTerminalRuleCall_1_1_1_1_0_1()); }
)
{ after(grammarAccess.getClosureTypeRefAccess().getParameterTypesB3JavaImportCrossReference_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureTypeRef__ReturnTypeAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureTypeRefAccess().getReturnTypeB3JavaImportCrossReference_1_4_0()); }
(
{ before(grammarAccess.getClosureTypeRefAccess().getReturnTypeB3JavaImportIDTerminalRuleCall_1_4_0_1()); }
	RULE_ID{ after(grammarAccess.getClosureTypeRefAccess().getReturnTypeB3JavaImportIDTerminalRuleCall_1_4_0_1()); }
)
{ after(grammarAccess.getClosureTypeRefAccess().getReturnTypeB3JavaImportCrossReference_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WildcardRefParam__UpperBoundsListAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardRefParamAccess().getUpperBoundsListTypeRefParserRuleCall_2_0_1_0()); }
	ruleTypeRef{ after(grammarAccess.getWildcardRefParamAccess().getUpperBoundsListTypeRefParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WildcardRefParam__UpperBoundsListAssignment_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardRefParamAccess().getUpperBoundsListTypeRefParserRuleCall_2_0_2_1_0()); }
	ruleTypeRef{ after(grammarAccess.getWildcardRefParamAccess().getUpperBoundsListTypeRefParserRuleCall_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WildcardRefParam__LowerBoundsListAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardRefParamAccess().getLowerBoundsListTypeRefParserRuleCall_2_1_1_0()); }
	ruleTypeRef{ after(grammarAccess.getWildcardRefParamAccess().getLowerBoundsListTypeRefParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CachedExpression__ExprAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachedExpressionAccess().getExprOrExpressionParserRuleCall_0_2_0()); }
	ruleOrExpression{ after(grammarAccess.getCachedExpressionAccess().getExprOrExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightExprAndExpressionParserRuleCall_1_2_0()); }
	ruleAndExpression{ after(grammarAccess.getOrExpressionAccess().getRightExprAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightExprRelationalExpressionParserRuleCall_1_2_0()); }
	ruleRelationalExpression{ after(grammarAccess.getAndExpressionAccess().getRightExprRelationalExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__FunctionNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getFunctionNameRelationalOperatorParserRuleCall_1_1_0()); }
	ruleRelationalOperator{ after(grammarAccess.getRelationalExpressionAccess().getFunctionNameRelationalOperatorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightExprInstanceOfExpressionParserRuleCall_1_2_0()); }
	ruleInstanceOfExpression{ after(grammarAccess.getRelationalExpressionAccess().getRightExprInstanceOfExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpression__FunctionNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExpressionAccess().getFunctionNameInstanceofKeyword_1_1_0()); }
(
{ before(grammarAccess.getInstanceOfExpressionAccess().getFunctionNameInstanceofKeyword_1_1_0()); }

	'instanceof' 

{ after(grammarAccess.getInstanceOfExpressionAccess().getFunctionNameInstanceofKeyword_1_1_0()); }
)

{ after(grammarAccess.getInstanceOfExpressionAccess().getFunctionNameInstanceofKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpression__RightExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExpressionAccess().getRightExprLiteralTypeParserRuleCall_1_2_0()); }
	ruleLiteralType{ after(grammarAccess.getInstanceOfExpressionAccess().getRightExprLiteralTypeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__FunctionNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAlternatives_1_1_0()); }
(rule__AdditiveExpression__FunctionNameAlternatives_1_1_0)
{ after(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__RightExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getRightExprMultiplicativeExpressionParserRuleCall_1_2_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getRightExprMultiplicativeExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__FunctionNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAlternatives_1_1_0()); }
(rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__RightExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightExprSetExpressionParserRuleCall_1_2_0()); }
	ruleSetExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightExprSetExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetExpression__FunctionNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); }
(
{ before(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); }

	'..' 

{ after(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); }
)

{ after(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetExpression__RightExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetExpressionAccess().getRightExprUnaryOrInfixExpressionParserRuleCall_1_2_0()); }
	ruleUnaryOrInfixExpression{ after(grammarAccess.getSetExpressionAccess().getRightExprUnaryOrInfixExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__FunctionNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getFunctionNameAlternatives_1_0()); }
(rule__UnaryExpression__FunctionNameAlternatives_1_0)
{ after(grammarAccess.getUnaryExpressionAccess().getFunctionNameAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); }
	ruleInfixExpression{ after(grammarAccess.getUnaryExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreopExpression__FunctionNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreopExpressionAccess().getFunctionNameAlternatives_1_0()); }
(rule__PreopExpression__FunctionNameAlternatives_1_0)
{ after(grammarAccess.getPreopExpressionAccess().getFunctionNameAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreopExpression__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreopExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); }
	ruleInfixExpression{ after(grammarAccess.getPreopExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostopExpression__FunctionNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostopExpressionAccess().getFunctionNameAlternatives_1_1_0()); }
(rule__PostopExpression__FunctionNameAlternatives_1_1_0)
{ after(grammarAccess.getPostopExpressionAccess().getFunctionNameAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__NameAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0()); }
	RULE_ID{ after(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__ParameterListAssignment_1_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getParameterListParameterListParserRuleCall_1_0_4_0()); }
	ruleParameterList{ after(grammarAccess.getInfixExpressionAccess().getParameterListParameterListParserRuleCall_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__IndexExprAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getIndexExprExpressionParserRuleCall_1_1_2_0()); }
	ruleExpression{ after(grammarAccess.getInfixExpressionAccess().getIndexExprExpressionParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__FeatureNameAssignment_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getFeatureNameIDTerminalRuleCall_1_2_2_0()); }
	RULE_ID{ after(grammarAccess.getInfixExpressionAccess().getFeatureNameIDTerminalRuleCall_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__ParameterListAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExpressionAccess().getParameterListParameterListParserRuleCall_1_2_0()); }
	ruleParameterList{ after(grammarAccess.getCallExpressionAccess().getParameterListParameterListParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowExpression__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowExpressionAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getThrowExpressionAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchExpression__TryExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getTryExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getTryCatchExpressionAccess().getTryExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchExpression__CatchBlocksAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getCatchBlocksCatchBlockParserRuleCall_3_0()); }
	ruleCatchBlock{ after(grammarAccess.getTryCatchExpressionAccess().getCatchBlocksCatchBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchExpression__FinallyExprAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchExpressionAccess().getFinallyExprExpressionParserRuleCall_4_1_0()); }
	ruleExpression{ after(grammarAccess.getTryCatchExpressionAccess().getFinallyExprExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CatchBlock__ExceptionTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchBlockAccess().getExceptionTypeTypeRefParserRuleCall_2_0()); }
	ruleTypeRef{ after(grammarAccess.getCatchBlockAccess().getExceptionTypeTypeRefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CatchBlock__VarnameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchBlockAccess().getVarnameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getCatchBlockAccess().getVarnameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CatchBlock__CatchExprAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchBlockAccess().getCatchExprExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getCatchBlockAccess().getCatchExprExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__SwitchExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__CaseListAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getCaseListCaseParserRuleCall_3_0()); }
	ruleCase{ after(grammarAccess.getSwitchExpressionAccess().getCaseListCaseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__ConditionExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getConditionExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getCaseAccess().getConditionExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__ThenExprAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getThenExprExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getCaseAccess().getThenExprExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__ExpressionsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getExpressionsTopLevelExpressionParserRuleCall_2_0_0()); }
	ruleTopLevelExpression{ after(grammarAccess.getBlockExpressionAccess().getExpressionsTopLevelExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ConditionExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getConditionExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getIfExpressionAccess().getConditionExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ThenExprAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getThenExprExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getIfExpressionAccess().getThenExprExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseExprAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseExprElseIfExpressionParserRuleCall_5_0_0()); }
	ruleElseIfExpression{ after(grammarAccess.getIfExpressionAccess().getElseExprElseIfExpressionParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseExprAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseExprExpressionParserRuleCall_5_1_1_0()); }
	ruleExpression{ after(grammarAccess.getIfExpressionAccess().getElseExprExpressionParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfExpression__ConditionExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfExpressionAccess().getConditionExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getElseIfExpressionAccess().getConditionExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfExpression__ThenExprAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfExpressionAccess().getThenExprExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getElseIfExpressionAccess().getThenExprExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfExpression__ElseExprAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfExpressionAccess().getElseExprElseIfExpressionParserRuleCall_5_0_0()); }
	ruleElseIfExpression{ after(grammarAccess.getElseIfExpressionAccess().getElseExprElseIfExpressionParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfExpression__ElseExprAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfExpressionAccess().getElseExprExpressionParserRuleCall_5_1_1_0()); }
	ruleExpression{ after(grammarAccess.getElseIfExpressionAccess().getElseExprExpressionParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValue__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValueAccess().getNamePIDTerminalRuleCall_1_0()); }
	RULE_PID{ after(grammarAccess.getPropertyValueAccess().getNamePIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableValueAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVariableValueAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordVariables__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordVariablesAccess().getNameAlternatives_1_0()); }
(rule__KeywordVariables__NameAlternatives_1_0)
{ after(grammarAccess.getKeywordVariablesAccess().getNameAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getNameAlternatives_1_0()); }
(rule__OperationCall__NameAlternatives_1_0)
{ after(grammarAccess.getOperationCallAccess().getNameAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__ParameterListAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getParameterListParameterListParserRuleCall_3_0()); }
	ruleParameterList{ after(grammarAccess.getOperationCallAccess().getParameterListParameterListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCallExpression__TypeExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallExpressionAccess().getTypeExprLiteralTypeParserRuleCall_2_0()); }
	ruleLiteralType{ after(grammarAccess.getConstructorCallExpressionAccess().getTypeExprLiteralTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCallExpression__ParameterListAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallExpressionAccess().getParameterListParameterListParserRuleCall_3_1_0()); }
	ruleParameterList{ after(grammarAccess.getConstructorCallExpressionAccess().getParameterListParameterListParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCallExpression__AliasAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallExpressionAccess().getAliasIDTerminalRuleCall_4_1_0()); }
	RULE_ID{ after(grammarAccess.getConstructorCallExpressionAccess().getAliasIDTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCallExpression__ContextBlockAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallExpressionAccess().getContextBlockContextBlockParserRuleCall_5_0()); }
	ruleContextBlock{ after(grammarAccess.getConstructorCallExpressionAccess().getContextBlockContextBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Context__SelectorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getSelectorContextSelectorParserRuleCall_1_0()); }
	ruleContextSelector{ after(grammarAccess.getContextAccess().getSelectorContextSelectorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Context__BlockAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getBlockContextBlockParserRuleCall_2_0()); }
	ruleContextBlock{ after(grammarAccess.getContextAccess().getBlockContextBlockParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRefSelector__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefSelectorAccess().getTypeTypeRefParserRuleCall_0()); }
	ruleTypeRef{ after(grammarAccess.getTypeRefSelectorAccess().getTypeTypeRefParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSelector__ExprAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionSelectorAccess().getExprExpressionParserRuleCall_0()); }
	ruleExpression{ after(grammarAccess.getExpressionSelectorAccess().getExprExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitSelector__InterfaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitSelectorAccess().getInterfaceQIDParserRuleCall_1_0()); }
	ruleQID{ after(grammarAccess.getUnitSelectorAccess().getInterfaceQIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitSelector__NameAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitSelectorAccess().getNameUnitNameParserRuleCall_2_1_0_0()); }
	ruleUnitName{ after(grammarAccess.getUnitSelectorAccess().getNameUnitNameParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitSelector__NamePatternAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitSelectorAccess().getNamePatternREGULAR_EXPRTerminalRuleCall_2_1_1_0()); }
	RULE_REGULAR_EXPR{ after(grammarAccess.getUnitSelectorAccess().getNamePatternREGULAR_EXPRTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitSelector__VersionRangeAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitSelectorAccess().getVersionRangeVersionRangeParserRuleCall_2_2_1_0()); }
	ruleVersionRange{ after(grammarAccess.getUnitSelectorAccess().getVersionRangeVersionRangeParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContextBlock__ExpressionsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextBlockAccess().getExpressionsFunctionDefinitionParserRuleCall_2_0_0()); }
	ruleFunctionDefinition{ after(grammarAccess.getContextBlockAccess().getExpressionsFunctionDefinitionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContextBlock__ExpressionsAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextBlockAccess().getExpressionsTopLevelExpressionParserRuleCall_2_1_0_0()); }
	ruleTopLevelExpression{ after(grammarAccess.getContextBlockAccess().getExpressionsTopLevelExpressionParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__FunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getFunctionFunctionParserRuleCall_1_0()); }
	ruleFunction{ after(grammarAccess.getFunctionDefinitionAccess().getFunctionFunctionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralList__EntryTypeAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getEntryTypeTypeRefParserRuleCall_0_2_1_0()); }
	ruleTypeRef{ after(grammarAccess.getLiteralListAccess().getEntryTypeTypeRefParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralList__EntriesAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getEntriesExpressionParserRuleCall_0_3_0()); }
	ruleExpression{ after(grammarAccess.getLiteralListAccess().getEntriesExpressionParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralList__EntriesAssignment_0_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getEntriesExpressionParserRuleCall_0_4_1_0()); }
	ruleExpression{ after(grammarAccess.getLiteralListAccess().getEntriesExpressionParserRuleCall_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralList__EntryTypeAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getEntryTypeTypeRefParserRuleCall_1_3_0()); }
	ruleTypeRef{ after(grammarAccess.getLiteralListAccess().getEntryTypeTypeRefParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralMap__KeyTypeAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getKeyTypeTypeRefParserRuleCall_0_2_1_0()); }
	ruleTypeRef{ after(grammarAccess.getLiteralMapAccess().getKeyTypeTypeRefParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralMap__ValueTypeAssignment_0_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getValueTypeTypeRefParserRuleCall_0_2_3_0()); }
	ruleTypeRef{ after(grammarAccess.getLiteralMapAccess().getValueTypeTypeRefParserRuleCall_0_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralMap__EntriesAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getEntriesMapEntryParserRuleCall_0_3_0()); }
	ruleMapEntry{ after(grammarAccess.getLiteralMapAccess().getEntriesMapEntryParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralMap__EntriesAssignment_0_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getEntriesMapEntryParserRuleCall_0_4_1_0()); }
	ruleMapEntry{ after(grammarAccess.getLiteralMapAccess().getEntriesMapEntryParserRuleCall_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralMap__KeyTypeAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getKeyTypeTypeRefParserRuleCall_1_3_0()); }
	ruleTypeRef{ after(grammarAccess.getLiteralMapAccess().getKeyTypeTypeRefParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralMap__ValueTypeAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralMapAccess().getValueTypeTypeRefParserRuleCall_1_5_0()); }
	ruleTypeRef{ after(grammarAccess.getLiteralMapAccess().getValueTypeTypeRefParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralFunction__ReturnTypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getReturnTypeTypeRefParserRuleCall_2_1_0()); }
	ruleTypeRef{ after(grammarAccess.getLiteralFunctionAccess().getReturnTypeTypeRefParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralFunction__ParametersAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getParametersParameterDeclarationParserRuleCall_3_0_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getLiteralFunctionAccess().getParametersParameterDeclarationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralFunction__ParametersAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getParametersParameterDeclarationParserRuleCall_3_1_1_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getLiteralFunctionAccess().getParametersParameterDeclarationParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralFunction__FuncExprAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFunctionAccess().getFuncExprOneOrManyExpressionsParserRuleCall_5_0()); }
	ruleOneOrManyExpressions{ after(grammarAccess.getLiteralFunctionAccess().getFuncExprOneOrManyExpressionsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureExpression__ReturnTypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureExpressionAccess().getReturnTypeTypeRefParserRuleCall_1_1_0()); }
	ruleTypeRef{ after(grammarAccess.getClosureExpressionAccess().getReturnTypeTypeRefParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureExpression__ParametersAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureExpression__ParametersAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_1_1_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureExpression__FuncExprAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureExpressionAccess().getFuncExprOneOrManyExpressionsParserRuleCall_4_0()); }
	ruleOneOrManyExpressions{ after(grammarAccess.getClosureExpressionAccess().getFuncExprOneOrManyExpressionsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsTopLevelExpressionParserRuleCall_1_0_0()); }
	ruleTopLevelExpression{ after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsTopLevelExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntry__KeyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntryAccess().getKeyKeyLiteralParserRuleCall_1_0()); }
	ruleKeyLiteral{ after(grammarAccess.getMapEntryAccess().getKeyKeyLiteralParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntry__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntryAccess().getValueExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getMapEntryAccess().getValueExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyLiteralAccess().getValueAlternatives_1_0()); }
(rule__KeyLiteral__ValueAlternatives_1_0)
{ after(grammarAccess.getKeyLiteralAccess().getValueAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTypeAccess().getTypeTypeRefParserRuleCall_1_0()); }
	ruleTypeRef{ after(grammarAccess.getLiteralTypeAccess().getTypeTypeRefParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueBooleanValueParserRuleCall_1_0()); }
	ruleBooleanValue{ after(grammarAccess.getBooleanLiteralAccess().getValueBooleanValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getValueIntValueParserRuleCall_1_0()); }
	ruleIntValue{ after(grammarAccess.getIntegerLiteralAccess().getValueIntValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralAccess().getValueUnitKeyword_1_0()); }
(
{ before(grammarAccess.getUnitLiteralAccess().getValueUnitKeyword_1_0()); }

	'unit' 

{ after(grammarAccess.getUnitLiteralAccess().getValueUnitKeyword_1_0()); }
)

{ after(grammarAccess.getUnitLiteralAccess().getValueUnitKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getValueRealValueParserRuleCall_1_0()); }
	ruleRealValue{ after(grammarAccess.getRealLiteralAccess().getValueRealValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegexpLiteral__PatternAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegexpLiteralAccess().getPatternREGULAR_EXPRTerminalRuleCall_1_0()); }
	RULE_REGULAR_EXPR{ after(grammarAccess.getRegexpLiteralAccess().getPatternREGULAR_EXPRTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Version__VersionAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getVersionVersionLiteralParserRuleCall_0()); }
	ruleVersionLiteral{ after(grammarAccess.getVersionAccess().getVersionVersionLiteralParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VersionRange__RangeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeAccess().getRangeVersionRangeLiteralParserRuleCall_0()); }
	ruleVersionRangeLiteral{ after(grammarAccess.getVersionRangeAccess().getRangeVersionRangeLiteralParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

RULE_PID : '$' RULE_ID ('.' RULE_ID)*;

RULE_REGULAR_EXPR : '~/' ('\\' ~(('\t'|'\r'|'\n'))|~(('\\'|'/'|' '|'\t'|'\r'|'\n')))* '/' ('u'|'m'|'i'|'c'|'d')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'x'|'0'|'"'|'\''|'\\')|~(('\\'|'"'|'\r'|'\n')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'x'|'0'|'"'|'\''|'\\')|~(('\\'|'\''|'\r'|'\n')))* '\'');

RULE_DOCUMENTATION : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_HEX : '0' ('x'|'X') ('0'..'9'|'a'..'f'|'A'..'F')+;

RULE_INT : ('0'..'9')+;

RULE_EXT_INT : RULE_INT ('e'|'E') ('-'|'+') RULE_INT;

RULE_ANY_OTHER : .;


