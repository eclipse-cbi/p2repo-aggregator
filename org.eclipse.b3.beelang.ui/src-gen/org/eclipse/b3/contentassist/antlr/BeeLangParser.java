/*
* generated by Xtext
*/
package org.eclipse.b3.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.eclipse.b3.services.BeeLangGrammarAccess;

public class BeeLangParser extends AbstractContentAssistParser {
	
	@Inject
	private BeeLangGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangParser createParser() {
		org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangParser result = new org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getBeeModelAccess().getAlternatives_1(), "rule__BeeModel__Alternatives_1");
					put(grammarAccess.getUnitAccess().getAlternatives_9(), "rule__Unit__Alternatives_9");
					put(grammarAccess.getPropertyOperationAccess().getAlternatives(), "rule__PropertyOperation__Alternatives");
					put(grammarAccess.getConditionalPropertyOperationAccess().getAlternatives_5(), "rule__ConditionalPropertyOperation__Alternatives_5");
					put(grammarAccess.getPropertyDefinitionOperationAccess().getAlternatives_1(), "rule__PropertyDefinitionOperation__Alternatives_1");
					put(grammarAccess.getSynchronizedPartAccess().getAlternatives(), "rule__SynchronizedPart__Alternatives");
					put(grammarAccess.getPathVectorAccess().getAlternatives(), "rule__PathVector__Alternatives");
					put(grammarAccess.getPathAccess().getAlternatives(), "rule__Path__Alternatives");
					put(grammarAccess.getWithClauseAccess().getAlternatives_3(), "rule__WithClause__Alternatives_3");
					put(grammarAccess.getBuildResultReferenceAccess().getAlternatives(), "rule__BuildResultReference__Alternatives");
					put(grammarAccess.getDirectBuildResultReferenceAccess().getAlternatives_1(), "rule__DirectBuildResultReference__Alternatives_1");
					put(grammarAccess.getBuilderAccess().getAlternatives_7(), "rule__Builder__Alternatives_7");
					put(grammarAccess.getBuilderAccess().getAlternatives_9_1(), "rule__Builder__Alternatives_9_1");
					put(grammarAccess.getBuilderAccess().getAlternatives_10_1(), "rule__Builder__Alternatives_10_1");
					put(grammarAccess.getFirstParameterAccess().getAlternatives(), "rule__FirstParameter__Alternatives");
					put(grammarAccess.getParameterDeclarationListAccess().getAlternatives(), "rule__ParameterDeclarationList__Alternatives");
					put(grammarAccess.getBuilderInputAccess().getAlternatives_2_1(), "rule__BuilderInput__Alternatives_2_1");
					put(grammarAccess.getBuilderInputAccess().getAlternatives_3_1(), "rule__BuilderInput__Alternatives_3_1");
					put(grammarAccess.getRepositoryConfigurationAccess().getAlternatives(), "rule__RepositoryConfiguration__Alternatives");
					put(grammarAccess.getRepositoryDeclarationAccess().getAlternatives_1(), "rule__RepositoryDeclaration__Alternatives_1");
					put(grammarAccess.getResolutionStrategyAccess().getStrategyAlternatives_0_0(), "rule__ResolutionStrategy__StrategyAlternatives_0_0");
					put(grammarAccess.getConcern_NamedAccess().getAlternatives_6(), "rule__Concern_Named__Alternatives_6");
					put(grammarAccess.getConcern_AnonymousAccess().getAlternatives_3(), "rule__Concern_Anonymous__Alternatives_3");
					put(grammarAccess.getFunctionAccess().getAlternatives_8_1(), "rule__Function__Alternatives_8_1");
					put(grammarAccess.getFunctionAccess().getAlternatives_9(), "rule__Function__Alternatives_9");
					put(grammarAccess.getAssignmentOperatorAccess().getAlternatives(), "rule__AssignmentOperator__Alternatives");
					put(grammarAccess.getRelationalOperatorAccess().getAlternatives(), "rule__RelationalOperator__Alternatives");
					put(grammarAccess.getTopLevelExpressionAccess().getAlternatives(), "rule__TopLevelExpression__Alternatives");
					put(grammarAccess.getVarDeclarationAccess().getAlternatives_2_0(), "rule__VarDeclaration__Alternatives_2_0");
					put(grammarAccess.getTypeRefAccess().getAlternatives(), "rule__TypeRef__Alternatives");
					put(grammarAccess.getClosureTypeRefAccess().getAlternatives_1_1(), "rule__ClosureTypeRef__Alternatives_1_1");
					put(grammarAccess.getTypeParamAccess().getAlternatives(), "rule__TypeParam__Alternatives");
					put(grammarAccess.getWildcardRefParamAccess().getAlternatives_2(), "rule__WildcardRefParam__Alternatives_2");
					put(grammarAccess.getCachedExpressionAccess().getAlternatives(), "rule__CachedExpression__Alternatives");
					put(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAlternatives_1_1_0(), "rule__AdditiveExpression__FunctionNameAlternatives_1_1_0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAlternatives_1_1_0(), "rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0");
					put(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives(), "rule__UnaryOrInfixExpression__Alternatives");
					put(grammarAccess.getUnaryExpressionAccess().getFunctionNameAlternatives_1_0(), "rule__UnaryExpression__FunctionNameAlternatives_1_0");
					put(grammarAccess.getPreopExpressionAccess().getFunctionNameAlternatives_1_0(), "rule__PreopExpression__FunctionNameAlternatives_1_0");
					put(grammarAccess.getPostopExpressionAccess().getFunctionNameAlternatives_1_1_0(), "rule__PostopExpression__FunctionNameAlternatives_1_1_0");
					put(grammarAccess.getInfixExpressionAccess().getAlternatives_1(), "rule__InfixExpression__Alternatives_1");
					put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
					put(grammarAccess.getIfExpressionAccess().getAlternatives_5(), "rule__IfExpression__Alternatives_5");
					put(grammarAccess.getElseIfExpressionAccess().getAlternatives_5(), "rule__ElseIfExpression__Alternatives_5");
					put(grammarAccess.getKeywordVariablesAccess().getNameAlternatives_1_0(), "rule__KeywordVariables__NameAlternatives_1_0");
					put(grammarAccess.getOperationCallAccess().getNameAlternatives_1_0(), "rule__OperationCall__NameAlternatives_1_0");
					put(grammarAccess.getContextBlockAccess().getAlternatives_2(), "rule__ContextBlock__Alternatives_2");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getLiteralListAccess().getAlternatives(), "rule__LiteralList__Alternatives");
					put(grammarAccess.getLiteralMapAccess().getAlternatives(), "rule__LiteralMap__Alternatives");
					put(grammarAccess.getLiteralFunctionAccess().getAlternatives_3(), "rule__LiteralFunction__Alternatives_3");
					put(grammarAccess.getClosureExpressionAccess().getAlternatives_2(), "rule__ClosureExpression__Alternatives_2");
					put(grammarAccess.getOneOrManyExpressionsAccess().getAlternatives(), "rule__OneOrManyExpressions__Alternatives");
					put(grammarAccess.getKeyLiteralAccess().getValueAlternatives_1_0(), "rule__KeyLiteral__ValueAlternatives_1_0");
					put(grammarAccess.getValueLiteralAccess().getAlternatives(), "rule__ValueLiteral__Alternatives");
					put(grammarAccess.getBooleanValueAccess().getAlternatives(), "rule__BooleanValue__Alternatives");
					put(grammarAccess.getIntValueAccess().getAlternatives(), "rule__IntValue__Alternatives");
					put(grammarAccess.getVersionLiteralAccess().getAlternatives(), "rule__VersionLiteral__Alternatives");
					put(grammarAccess.getVersionRangeLiteralAccess().getAlternatives(), "rule__VersionRangeLiteral__Alternatives");
					put(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_0_0(), "rule__VersionRangeLiteral__Alternatives_0_0");
					put(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_0_1(), "rule__VersionRangeLiteral__Alternatives_0_1");
					put(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_0_2_1(), "rule__VersionRangeLiteral__Alternatives_0_2_1");
					put(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_0_3(), "rule__VersionRangeLiteral__Alternatives_0_3");
					put(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_1(), "rule__VersionRangeLiteral__Alternatives_1");
					put(grammarAccess.getQIDREFAccess().getAlternatives(), "rule__QIDREF__Alternatives");
					put(grammarAccess.getQIDREFAccess().getAlternatives_0_0(), "rule__QIDREF__Alternatives_0_0");
					put(grammarAccess.getQIDREFAccess().getAlternatives_0_0_1_0(), "rule__QIDREF__Alternatives_0_0_1_0");
					put(grammarAccess.getQIDAccess().getAlternatives_1(), "rule__QID__Alternatives_1");
					put(grammarAccess.getQIDAccess().getAlternatives_2_2(), "rule__QID__Alternatives_2_2");
					put(grammarAccess.getEscapedQualifiedNameAccess().getAlternatives(), "rule__EscapedQualifiedName__Alternatives");
					put(grammarAccess.getSeparatorAccess().getAlternatives(), "rule__Separator__Alternatives");
					put(grammarAccess.getAlfanumSymAccess().getAlternatives_0(), "rule__AlfanumSym__Alternatives_0");
					put(grammarAccess.getAlfanumSymAccess().getAlternatives_1(), "rule__AlfanumSym__Alternatives_1");
					put(grammarAccess.getREALAccess().getAlternatives_2(), "rule__REAL__Alternatives_2");
					put(grammarAccess.getVisibilityAccess().getAlternatives(), "rule__Visibility__Alternatives");
					put(grammarAccess.getExecutionModeAccess().getAlternatives(), "rule__ExecutionMode__Alternatives");
					put(grammarAccess.getBeeModelAccess().getGroup(), "rule__BeeModel__Group__0");
					put(grammarAccess.getBeeModelAccess().getGroup_1_2(), "rule__BeeModel__Group_1_2__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getImportAccess().getGroup_4(), "rule__Import__Group_4__0");
					put(grammarAccess.getUnitAccess().getGroup(), "rule__Unit__Group__0");
					put(grammarAccess.getUnitAccess().getGroup_5(), "rule__Unit__Group_5__0");
					put(grammarAccess.getUnitAccess().getGroup_6(), "rule__Unit__Group_6__0");
					put(grammarAccess.getUnitAccess().getGroup_6_2(), "rule__Unit__Group_6_2__0");
					put(grammarAccess.getUnitAccess().getGroup_8(), "rule__Unit__Group_8__0");
					put(grammarAccess.getUnitAccess().getGroup_9_0(), "rule__Unit__Group_9_0__0");
					put(grammarAccess.getUnitAccess().getGroup_9_0_2(), "rule__Unit__Group_9_0_2__0");
					put(grammarAccess.getUnitAccess().getGroup_9_1(), "rule__Unit__Group_9_1__0");
					put(grammarAccess.getUnitAccess().getGroup_9_2(), "rule__Unit__Group_9_2__0");
					put(grammarAccess.getUnitAccess().getGroup_9_2_2(), "rule__Unit__Group_9_2_2__0");
					put(grammarAccess.getUnitAccess().getGroup_9_3(), "rule__Unit__Group_9_3__0");
					put(grammarAccess.getUnitAccess().getGroup_9_4(), "rule__Unit__Group_9_4__0");
					put(grammarAccess.getUnitAccess().getGroup_9_4_3(), "rule__Unit__Group_9_4_3__0");
					put(grammarAccess.getUnitAccess().getGroup_9_5(), "rule__Unit__Group_9_5__0");
					put(grammarAccess.getUnitAccess().getGroup_9_7(), "rule__Unit__Group_9_7__0");
					put(grammarAccess.getUnitAccess().getGroup_9_8(), "rule__Unit__Group_9_8__0");
					put(grammarAccess.getUnitAccess().getGroup_9_11(), "rule__Unit__Group_9_11__0");
					put(grammarAccess.getUnitAccess().getGroup_9_12(), "rule__Unit__Group_9_12__0");
					put(grammarAccess.getUnitAccess().getGroup_9_13(), "rule__Unit__Group_9_13__0");
					put(grammarAccess.getProvidedCapabilityAccess().getGroup(), "rule__ProvidedCapability__Group__0");
					put(grammarAccess.getProvidedCapabilityAccess().getGroup_1(), "rule__ProvidedCapability__Group_1__0");
					put(grammarAccess.getProvidedCapabilityAccess().getGroup_5(), "rule__ProvidedCapability__Group_5__0");
					put(grammarAccess.getRequiredCapabilityAccess().getGroup(), "rule__RequiredCapability__Group__0");
					put(grammarAccess.getRequiredCapabilityAccess().getGroup_1(), "rule__RequiredCapability__Group_1__0");
					put(grammarAccess.getRequiredCapabilityAccess().getGroup_5(), "rule__RequiredCapability__Group_5__0");
					put(grammarAccess.getPropertySet_NamedAccess().getGroup(), "rule__PropertySet_Named__Group__0");
					put(grammarAccess.getPropertySet_NamedAccess().getGroup_2(), "rule__PropertySet_Named__Group_2__0");
					put(grammarAccess.getPropertySetAccess().getGroup(), "rule__PropertySet__Group__0");
					put(grammarAccess.getPropertySetAccess().getGroup_1(), "rule__PropertySet__Group_1__0");
					put(grammarAccess.getConditionalPropertyOperationAccess().getGroup(), "rule__ConditionalPropertyOperation__Group__0");
					put(grammarAccess.getPropertyDefinitionOperationAccess().getGroup(), "rule__PropertyDefinitionOperation__Group__0");
					put(grammarAccess.getPropertyValDeclarationAccess().getGroup(), "rule__PropertyValDeclaration__Group__0");
					put(grammarAccess.getPropertyVarDeclarationAccess().getGroup(), "rule__PropertyVarDeclaration__Group__0");
					put(grammarAccess.getPropertyVarDeclarationAccess().getGroup_5(), "rule__PropertyVarDeclaration__Group_5__0");
					put(grammarAccess.getPropertySetOperationAccess().getGroup(), "rule__PropertySetOperation__Group__0");
					put(grammarAccess.getSetPropertyOperationAccess().getGroup(), "rule__SetPropertyOperation__Group__0");
					put(grammarAccess.getUnsetPropertyOperationAccess().getGroup(), "rule__UnsetPropertyOperation__Group__0");
					put(grammarAccess.getSynchronizationAccess().getGroup(), "rule__Synchronization__Group__0");
					put(grammarAccess.getSynchronizationAccess().getGroup_1(), "rule__Synchronization__Group_1__0");
					put(grammarAccess.getSynchronizedPartAccess().getGroup_0(), "rule__SynchronizedPart__Group_0__0");
					put(grammarAccess.getSynchronizedPartAccess().getGroup_0_1(), "rule__SynchronizedPart__Group_0_1__0");
					put(grammarAccess.getPathGroupAccess().getGroup(), "rule__PathGroup__Group__0");
					put(grammarAccess.getPathGroupAccess().getGroup_2(), "rule__PathGroup__Group_2__0");
					put(grammarAccess.getBasePathVectorAccess().getGroup(), "rule__BasePathVector__Group__0");
					put(grammarAccess.getBasePathVectorAccess().getGroup_1(), "rule__BasePathVector__Group_1__0");
					put(grammarAccess.getBasePathVectorAccess().getGroup_4(), "rule__BasePathVector__Group_4__0");
					put(grammarAccess.getBasePathVectorAccess().getGroup_4_1(), "rule__BasePathVector__Group_4_1__0");
					put(grammarAccess.getUnbasedPathVectorAccess().getGroup(), "rule__UnbasedPathVector__Group__0");
					put(grammarAccess.getUnbasedPathVectorAccess().getGroup_1(), "rule__UnbasedPathVector__Group_1__0");
					put(grammarAccess.getUnbasedPathVectorAccess().getGroup_3(), "rule__UnbasedPathVector__Group_3__0");
					put(grammarAccess.getCompoundPathVectorAccess().getGroup(), "rule__CompoundPathVector__Group__0");
					put(grammarAccess.getPathAccess().getGroup_1(), "rule__Path__Group_1__0");
					put(grammarAccess.getPathAccess().getGroup_1_2(), "rule__Path__Group_1_2__0");
					put(grammarAccess.getPrerequisiteAccess().getGroup(), "rule__Prerequisite__Group__0");
					put(grammarAccess.getPrerequisiteAccess().getGroup_1(), "rule__Prerequisite__Group_1__0");
					put(grammarAccess.getPrerequisiteAccess().getGroup_4(), "rule__Prerequisite__Group_4__0");
					put(grammarAccess.getWithClauseAccess().getGroup(), "rule__WithClause__Group__0");
					put(grammarAccess.getWithClauseAccess().getGroup_2(), "rule__WithClause__Group_2__0");
					put(grammarAccess.getWithClauseAccess().getGroup_2_2(), "rule__WithClause__Group_2_2__0");
					put(grammarAccess.getWithClauseAccess().getGroup_3_0(), "rule__WithClause__Group_3_0__0");
					put(grammarAccess.getWithClauseAccess().getGroup_3_1(), "rule__WithClause__Group_3_1__0");
					put(grammarAccess.getDirectBuildResultReferenceAccess().getGroup(), "rule__DirectBuildResultReference__Group__0");
					put(grammarAccess.getCapabilityReferenceAccess().getGroup(), "rule__CapabilityReference__Group__0");
					put(grammarAccess.getCapabilityReferenceAccess().getGroup_4(), "rule__CapabilityReference__Group_4__0");
					put(grammarAccess.getCapabilityReferenceAccess().getGroup_5(), "rule__CapabilityReference__Group_5__0");
					put(grammarAccess.getCompoundBuildResultReferenceAccess().getGroup(), "rule__CompoundBuildResultReference__Group__0");
					put(grammarAccess.getBuilderAccess().getGroup(), "rule__Builder__Group__0");
					put(grammarAccess.getBuilderAccess().getGroup_7_0(), "rule__Builder__Group_7_0__0");
					put(grammarAccess.getBuilderAccess().getGroup_7_0_1(), "rule__Builder__Group_7_0_1__0");
					put(grammarAccess.getBuilderAccess().getGroup_7_0_1_1(), "rule__Builder__Group_7_0_1_1__0");
					put(grammarAccess.getBuilderAccess().getGroup_7_0_1_2(), "rule__Builder__Group_7_0_1_2__0");
					put(grammarAccess.getBuilderAccess().getGroup_7_1(), "rule__Builder__Group_7_1__0");
					put(grammarAccess.getBuilderAccess().getGroup_7_1_0(), "rule__Builder__Group_7_1_0__0");
					put(grammarAccess.getBuilderAccess().getGroup_8(), "rule__Builder__Group_8__0");
					put(grammarAccess.getBuilderAccess().getGroup_8_2(), "rule__Builder__Group_8_2__0");
					put(grammarAccess.getBuilderAccess().getGroup_9(), "rule__Builder__Group_9__0");
					put(grammarAccess.getBuilderAccess().getGroup_9_1_0(), "rule__Builder__Group_9_1_0__0");
					put(grammarAccess.getBuilderAccess().getGroup_10(), "rule__Builder__Group_10__0");
					put(grammarAccess.getBuilderAccess().getGroup_10_1_0(), "rule__Builder__Group_10_1_0__0");
					put(grammarAccess.getBuilderAccess().getGroup_12(), "rule__Builder__Group_12__0");
					put(grammarAccess.getBuilderAccess().getGroup_14(), "rule__Builder__Group_14__0");
					put(grammarAccess.getParameterListAccess().getGroup(), "rule__ParameterList__Group__0");
					put(grammarAccess.getParameterListAccess().getGroup_2(), "rule__ParameterList__Group_2__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getClosureParameterAccess().getGroup(), "rule__ClosureParameter__Group__0");
					put(grammarAccess.getParameterDeclarationListAccess().getGroup_0(), "rule__ParameterDeclarationList__Group_0__0");
					put(grammarAccess.getParameterDeclarationListAccess().getGroup_0_1(), "rule__ParameterDeclarationList__Group_0_1__0");
					put(grammarAccess.getParameterDeclarationListAccess().getGroup_0_2(), "rule__ParameterDeclarationList__Group_0_2__0");
					put(grammarAccess.getParameterDeclarationAccess().getGroup(), "rule__ParameterDeclaration__Group__0");
					put(grammarAccess.getParameterDeclarationAccess().getGroup_1(), "rule__ParameterDeclaration__Group_1__0");
					put(grammarAccess.getParameterDeclarationEllipseAccess().getGroup(), "rule__ParameterDeclarationEllipse__Group__0");
					put(grammarAccess.getBuilderOutputAccess().getGroup(), "rule__BuilderOutput__Group__0");
					put(grammarAccess.getBuilderInputAccess().getGroup(), "rule__BuilderInput__Group__0");
					put(grammarAccess.getBuilderInputAccess().getGroup_2(), "rule__BuilderInput__Group_2__0");
					put(grammarAccess.getBuilderInputAccess().getGroup_2_1_0(), "rule__BuilderInput__Group_2_1_0__0");
					put(grammarAccess.getBuilderInputAccess().getGroup_3(), "rule__BuilderInput__Group_3__0");
					put(grammarAccess.getBuilderInputAccess().getGroup_3_1_0(), "rule__BuilderInput__Group_3_1_0__0");
					put(grammarAccess.getRepositoryDeclarationAccess().getGroup(), "rule__RepositoryDeclaration__Group__0");
					put(grammarAccess.getRepositoryDeclarationAccess().getGroup_1_1(), "rule__RepositoryDeclaration__Group_1_1__0");
					put(grammarAccess.getResolutionStrategyAccess().getGroup(), "rule__ResolutionStrategy__Group__0");
					put(grammarAccess.getContainerConfigurationAccess().getGroup(), "rule__ContainerConfiguration__Group__0");
					put(grammarAccess.getConcern_NamedAccess().getGroup(), "rule__Concern_Named__Group__0");
					put(grammarAccess.getConcern_NamedAccess().getGroup_4(), "rule__Concern_Named__Group_4__0");
					put(grammarAccess.getConcern_NamedAccess().getGroup_4_2(), "rule__Concern_Named__Group_4_2__0");
					put(grammarAccess.getConcern_NamedAccess().getGroup_6_0(), "rule__Concern_Named__Group_6_0__0");
					put(grammarAccess.getConcern_AnonymousAccess().getGroup(), "rule__Concern_Anonymous__Group__0");
					put(grammarAccess.getConcern_AnonymousAccess().getGroup_1(), "rule__Concern_Anonymous__Group_1__0");
					put(grammarAccess.getConcern_AnonymousAccess().getGroup_1_2(), "rule__Concern_Anonymous__Group_1_2__0");
					put(grammarAccess.getConcern_AnonymousAccess().getGroup_3_0(), "rule__Concern_Anonymous__Group_3_0__0");
					put(grammarAccess.getFunctionAccess().getGroup(), "rule__Function__Group__0");
					put(grammarAccess.getFunctionAccess().getGroup_8(), "rule__Function__Group_8__0");
					put(grammarAccess.getFunctionAccess().getGroup_8_1_0(), "rule__Function__Group_8_1_0__0");
					put(grammarAccess.getFunctionAccess().getGroup_8_1_0_1(), "rule__Function__Group_8_1_0_1__0");
					put(grammarAccess.getFunctionAccess().getGroup_8_1_0_2(), "rule__Function__Group_8_1_0_2__0");
					put(grammarAccess.getFunctionAccess().getGroup_8_1_1(), "rule__Function__Group_8_1_1__0");
					put(grammarAccess.getFunctionAccess().getGroup_9_0(), "rule__Function__Group_9_0__0");
					put(grammarAccess.getAssignmentExpressionAccess().getGroup(), "rule__AssignmentExpression__Group__0");
					put(grammarAccess.getAssignmentExpressionAccess().getGroup_1(), "rule__AssignmentExpression__Group_1__0");
					put(grammarAccess.getVarDeclarationAccess().getGroup(), "rule__VarDeclaration__Group__0");
					put(grammarAccess.getVarDeclarationAccess().getGroup_2(), "rule__VarDeclaration__Group_2__0");
					put(grammarAccess.getVarDeclarationAccess().getGroup_3(), "rule__VarDeclaration__Group_3__0");
					put(grammarAccess.getValDeclarationAccess().getGroup(), "rule__ValDeclaration__Group__0");
					put(grammarAccess.getSimpleTypeRefAccess().getGroup(), "rule__SimpleTypeRef__Group__0");
					put(grammarAccess.getSimpleTypeRefAccess().getGroup_2(), "rule__SimpleTypeRef__Group_2__0");
					put(grammarAccess.getSimpleTypeRefAccess().getGroup_2_2(), "rule__SimpleTypeRef__Group_2_2__0");
					put(grammarAccess.getClosureTypeRefAccess().getGroup(), "rule__ClosureTypeRef__Group__0");
					put(grammarAccess.getClosureTypeRefAccess().getGroup_1(), "rule__ClosureTypeRef__Group_1__0");
					put(grammarAccess.getClosureTypeRefAccess().getGroup_1_1_0(), "rule__ClosureTypeRef__Group_1_1_0__0");
					put(grammarAccess.getClosureTypeRefAccess().getGroup_1_1_0_1(), "rule__ClosureTypeRef__Group_1_1_0_1__0");
					put(grammarAccess.getClosureTypeRefAccess().getGroup_1_1_0_2(), "rule__ClosureTypeRef__Group_1_1_0_2__0");
					put(grammarAccess.getClosureTypeRefAccess().getGroup_1_1_1(), "rule__ClosureTypeRef__Group_1_1_1__0");
					put(grammarAccess.getWildcardRefParamAccess().getGroup(), "rule__WildcardRefParam__Group__0");
					put(grammarAccess.getWildcardRefParamAccess().getGroup_2_0(), "rule__WildcardRefParam__Group_2_0__0");
					put(grammarAccess.getWildcardRefParamAccess().getGroup_2_0_2(), "rule__WildcardRefParam__Group_2_0_2__0");
					put(grammarAccess.getWildcardRefParamAccess().getGroup_2_1(), "rule__WildcardRefParam__Group_2_1__0");
					put(grammarAccess.getCachedExpressionAccess().getGroup_0(), "rule__CachedExpression__Group_0__0");
					put(grammarAccess.getOrExpressionAccess().getGroup(), "rule__OrExpression__Group__0");
					put(grammarAccess.getOrExpressionAccess().getGroup_1(), "rule__OrExpression__Group_1__0");
					put(grammarAccess.getAndExpressionAccess().getGroup(), "rule__AndExpression__Group__0");
					put(grammarAccess.getAndExpressionAccess().getGroup_1(), "rule__AndExpression__Group_1__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup(), "rule__RelationalExpression__Group__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1(), "rule__RelationalExpression__Group_1__0");
					put(grammarAccess.getInstanceOfExpressionAccess().getGroup(), "rule__InstanceOfExpression__Group__0");
					put(grammarAccess.getInstanceOfExpressionAccess().getGroup_1(), "rule__InstanceOfExpression__Group_1__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup(), "rule__AdditiveExpression__Group__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1(), "rule__AdditiveExpression__Group_1__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup(), "rule__MultiplicativeExpression__Group__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1(), "rule__MultiplicativeExpression__Group_1__0");
					put(grammarAccess.getSetExpressionAccess().getGroup(), "rule__SetExpression__Group__0");
					put(grammarAccess.getSetExpressionAccess().getGroup_1(), "rule__SetExpression__Group_1__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup(), "rule__UnaryExpression__Group__0");
					put(grammarAccess.getPreopExpressionAccess().getGroup(), "rule__PreopExpression__Group__0");
					put(grammarAccess.getPostopExpressionAccess().getGroup(), "rule__PostopExpression__Group__0");
					put(grammarAccess.getPostopExpressionAccess().getGroup_1(), "rule__PostopExpression__Group_1__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup(), "rule__InfixExpression__Group__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup_1_0(), "rule__InfixExpression__Group_1_0__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup_1_1(), "rule__InfixExpression__Group_1_1__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup_1_2(), "rule__InfixExpression__Group_1_2__0");
					put(grammarAccess.getCallExpressionAccess().getGroup(), "rule__CallExpression__Group__0");
					put(grammarAccess.getCallExpressionAccess().getGroup_1(), "rule__CallExpression__Group_1__0");
					put(grammarAccess.getWildcardExpressionAccess().getGroup(), "rule__WildcardExpression__Group__0");
					put(grammarAccess.getThrowExpressionAccess().getGroup(), "rule__ThrowExpression__Group__0");
					put(grammarAccess.getTryCatchExpressionAccess().getGroup(), "rule__TryCatchExpression__Group__0");
					put(grammarAccess.getTryCatchExpressionAccess().getGroup_4(), "rule__TryCatchExpression__Group_4__0");
					put(grammarAccess.getCatchBlockAccess().getGroup(), "rule__CatchBlock__Group__0");
					put(grammarAccess.getSwitchExpressionAccess().getGroup(), "rule__SwitchExpression__Group__0");
					put(grammarAccess.getCaseAccess().getGroup(), "rule__Case__Group__0");
					put(grammarAccess.getBlockExpressionAccess().getGroup(), "rule__BlockExpression__Group__0");
					put(grammarAccess.getBlockExpressionAccess().getGroup_2(), "rule__BlockExpression__Group_2__0");
					put(grammarAccess.getIfExpressionAccess().getGroup(), "rule__IfExpression__Group__0");
					put(grammarAccess.getIfExpressionAccess().getGroup_5_1(), "rule__IfExpression__Group_5_1__0");
					put(grammarAccess.getElseIfExpressionAccess().getGroup(), "rule__ElseIfExpression__Group__0");
					put(grammarAccess.getElseIfExpressionAccess().getGroup_5_1(), "rule__ElseIfExpression__Group_5_1__0");
					put(grammarAccess.getPropertyValueAccess().getGroup(), "rule__PropertyValue__Group__0");
					put(grammarAccess.getVariableValueAccess().getGroup(), "rule__VariableValue__Group__0");
					put(grammarAccess.getKeywordVariablesAccess().getGroup(), "rule__KeywordVariables__Group__0");
					put(grammarAccess.getOperationCallAccess().getGroup(), "rule__OperationCall__Group__0");
					put(grammarAccess.getConstructorCallExpressionAccess().getGroup(), "rule__ConstructorCallExpression__Group__0");
					put(grammarAccess.getConstructorCallExpressionAccess().getGroup_3(), "rule__ConstructorCallExpression__Group_3__0");
					put(grammarAccess.getConstructorCallExpressionAccess().getGroup_4(), "rule__ConstructorCallExpression__Group_4__0");
					put(grammarAccess.getContextBlockAccess().getGroup(), "rule__ContextBlock__Group__0");
					put(grammarAccess.getContextBlockAccess().getGroup_2_1(), "rule__ContextBlock__Group_2_1__0");
					put(grammarAccess.getFunctionDefinitionAccess().getGroup(), "rule__FunctionDefinition__Group__0");
					put(grammarAccess.getLiteralListAccess().getGroup_0(), "rule__LiteralList__Group_0__0");
					put(grammarAccess.getLiteralListAccess().getGroup_0_2(), "rule__LiteralList__Group_0_2__0");
					put(grammarAccess.getLiteralListAccess().getGroup_0_4(), "rule__LiteralList__Group_0_4__0");
					put(grammarAccess.getLiteralListAccess().getGroup_1(), "rule__LiteralList__Group_1__0");
					put(grammarAccess.getLiteralMapAccess().getGroup_0(), "rule__LiteralMap__Group_0__0");
					put(grammarAccess.getLiteralMapAccess().getGroup_0_2(), "rule__LiteralMap__Group_0_2__0");
					put(grammarAccess.getLiteralMapAccess().getGroup_0_4(), "rule__LiteralMap__Group_0_4__0");
					put(grammarAccess.getLiteralMapAccess().getGroup_1(), "rule__LiteralMap__Group_1__0");
					put(grammarAccess.getLiteralFunctionAccess().getGroup(), "rule__LiteralFunction__Group__0");
					put(grammarAccess.getLiteralFunctionAccess().getGroup_2(), "rule__LiteralFunction__Group_2__0");
					put(grammarAccess.getLiteralFunctionAccess().getGroup_3_0(), "rule__LiteralFunction__Group_3_0__0");
					put(grammarAccess.getLiteralFunctionAccess().getGroup_3_0_1(), "rule__LiteralFunction__Group_3_0_1__0");
					put(grammarAccess.getLiteralFunctionAccess().getGroup_3_0_2(), "rule__LiteralFunction__Group_3_0_2__0");
					put(grammarAccess.getLiteralFunctionAccess().getGroup_3_1(), "rule__LiteralFunction__Group_3_1__0");
					put(grammarAccess.getClosureExpressionAccess().getGroup(), "rule__ClosureExpression__Group__0");
					put(grammarAccess.getClosureExpressionAccess().getGroup_1(), "rule__ClosureExpression__Group_1__0");
					put(grammarAccess.getClosureExpressionAccess().getGroup_2_0(), "rule__ClosureExpression__Group_2_0__0");
					put(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1(), "rule__ClosureExpression__Group_2_0_1__0");
					put(grammarAccess.getClosureExpressionAccess().getGroup_2_0_2(), "rule__ClosureExpression__Group_2_0_2__0");
					put(grammarAccess.getClosureExpressionAccess().getGroup_2_1(), "rule__ClosureExpression__Group_2_1__0");
					put(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup(), "rule__BlockExpressionWithoutBrackets__Group__0");
					put(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1(), "rule__BlockExpressionWithoutBrackets__Group_1__0");
					put(grammarAccess.getMapEntryAccess().getGroup(), "rule__MapEntry__Group__0");
					put(grammarAccess.getKeyLiteralAccess().getGroup(), "rule__KeyLiteral__Group__0");
					put(grammarAccess.getLiteralTypeAccess().getGroup(), "rule__LiteralType__Group__0");
					put(grammarAccess.getBooleanLiteralAccess().getGroup(), "rule__BooleanLiteral__Group__0");
					put(grammarAccess.getIntegerLiteralAccess().getGroup(), "rule__IntegerLiteral__Group__0");
					put(grammarAccess.getUnitLiteralAccess().getGroup(), "rule__UnitLiteral__Group__0");
					put(grammarAccess.getStringLiteralAccess().getGroup(), "rule__StringLiteral__Group__0");
					put(grammarAccess.getRealLiteralAccess().getGroup(), "rule__RealLiteral__Group__0");
					put(grammarAccess.getRegexpLiteralAccess().getGroup(), "rule__RegexpLiteral__Group__0");
					put(grammarAccess.getNullLiteralAccess().getGroup(), "rule__NullLiteral__Group__0");
					put(grammarAccess.getParanthesizedExpressionAccess().getGroup(), "rule__ParanthesizedExpression__Group__0");
					put(grammarAccess.getVersionRangeLiteralAccess().getGroup_0(), "rule__VersionRangeLiteral__Group_0__0");
					put(grammarAccess.getVersionRangeLiteralAccess().getGroup_0_2(), "rule__VersionRangeLiteral__Group_0_2__0");
					put(grammarAccess.getQIDREFAccess().getGroup_0(), "rule__QIDREF__Group_0__0");
					put(grammarAccess.getQIDREFAccess().getGroup_0_0_1(), "rule__QIDREF__Group_0_0_1__0");
					put(grammarAccess.getQIDREFAccess().getGroup_0_0_1_1(), "rule__QIDREF__Group_0_0_1_1__0");
					put(grammarAccess.getQIDREFAccess().getGroup_0_1(), "rule__QIDREF__Group_0_1__0");
					put(grammarAccess.getQIDAccess().getGroup(), "rule__QID__Group__0");
					put(grammarAccess.getQIDAccess().getGroup_2(), "rule__QID__Group_2__0");
					put(grammarAccess.getCompoundNameAccess().getGroup(), "rule__CompoundName__Group__0");
					put(grammarAccess.getAlfanumSymAccess().getGroup(), "rule__AlfanumSym__Group__0");
					put(grammarAccess.getREALAccess().getGroup(), "rule__REAL__Group__0");
					put(grammarAccess.getBeeModelAccess().getImportsAssignment_0(), "rule__BeeModel__ImportsAssignment_0");
					put(grammarAccess.getBeeModelAccess().getFunctionsAssignment_1_0(), "rule__BeeModel__FunctionsAssignment_1_0");
					put(grammarAccess.getBeeModelAccess().getConcernAssignment_1_1(), "rule__BeeModel__ConcernAssignment_1_1");
					put(grammarAccess.getBeeModelAccess().getPropertySetsAssignment_1_2_1(), "rule__BeeModel__PropertySetsAssignment_1_2_1");
					put(grammarAccess.getBeeModelAccess().getBodyAssignment_2(), "rule__BeeModel__BodyAssignment_2");
					put(grammarAccess.getImportAccess().getReexportAssignment_1(), "rule__Import__ReexportAssignment_1");
					put(grammarAccess.getImportAccess().getQualifiedNameAssignment_3(), "rule__Import__QualifiedNameAssignment_3");
					put(grammarAccess.getImportAccess().getNameAssignment_4_1(), "rule__Import__NameAssignment_4_1");
					put(grammarAccess.getUnitAccess().getDocumentationAssignment_1(), "rule__Unit__DocumentationAssignment_1");
					put(grammarAccess.getUnitAccess().getExecutionModeAssignment_2(), "rule__Unit__ExecutionModeAssignment_2");
					put(grammarAccess.getUnitAccess().getNameAssignment_4(), "rule__Unit__NameAssignment_4");
					put(grammarAccess.getUnitAccess().getVersionAssignment_5_1(), "rule__Unit__VersionAssignment_5_1");
					put(grammarAccess.getUnitAccess().getImplementsAssignment_6_1(), "rule__Unit__ImplementsAssignment_6_1");
					put(grammarAccess.getUnitAccess().getImplementsAssignment_6_2_1(), "rule__Unit__ImplementsAssignment_6_2_1");
					put(grammarAccess.getUnitAccess().getDefaultPropertiesAssignment_8_2(), "rule__Unit__DefaultPropertiesAssignment_8_2");
					put(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_9_0_2_0(), "rule__Unit__ProvidedCapabilitiesAssignment_9_0_2_0");
					put(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_9_1_1(), "rule__Unit__ProvidedCapabilitiesAssignment_9_1_1");
					put(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_9_2_2_0(), "rule__Unit__RequiredCapabilitiesAssignment_9_2_2_0");
					put(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_9_3_1(), "rule__Unit__RequiredCapabilitiesAssignment_9_3_1");
					put(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_9_4_3_0(), "rule__Unit__MetaRequiredCapabilitiesAssignment_9_4_3_0");
					put(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_9_5_2(), "rule__Unit__MetaRequiredCapabilitiesAssignment_9_5_2");
					put(grammarAccess.getUnitAccess().getConcernsAssignment_9_6(), "rule__Unit__ConcernsAssignment_9_6");
					put(grammarAccess.getUnitAccess().getSynchronizationsAssignment_9_7_2(), "rule__Unit__SynchronizationsAssignment_9_7_2");
					put(grammarAccess.getUnitAccess().getSynchronizationsAssignment_9_8_1(), "rule__Unit__SynchronizationsAssignment_9_8_1");
					put(grammarAccess.getUnitAccess().getBuildersAssignment_9_9(), "rule__Unit__BuildersAssignment_9_9");
					put(grammarAccess.getUnitAccess().getFunctionsAssignment_9_10(), "rule__Unit__FunctionsAssignment_9_10");
					put(grammarAccess.getUnitAccess().getRepositoryConfigurationsAssignment_9_11_2(), "rule__Unit__RepositoryConfigurationsAssignment_9_11_2");
					put(grammarAccess.getUnitAccess().getPropertySetsAssignment_9_12_1(), "rule__Unit__PropertySetsAssignment_9_12_1");
					put(grammarAccess.getUnitAccess().getContainersAssignment_9_13_2(), "rule__Unit__ContainersAssignment_9_13_2");
					put(grammarAccess.getProvidedCapabilityAccess().getCondExprAssignment_1_2(), "rule__ProvidedCapability__CondExprAssignment_1_2");
					put(grammarAccess.getProvidedCapabilityAccess().getNameSpaceAssignment_2(), "rule__ProvidedCapability__NameSpaceAssignment_2");
					put(grammarAccess.getProvidedCapabilityAccess().getNameAssignment_4(), "rule__ProvidedCapability__NameAssignment_4");
					put(grammarAccess.getProvidedCapabilityAccess().getVersionAssignment_5_1(), "rule__ProvidedCapability__VersionAssignment_5_1");
					put(grammarAccess.getRequiredCapabilityAccess().getCondExprAssignment_1_2(), "rule__RequiredCapability__CondExprAssignment_1_2");
					put(grammarAccess.getRequiredCapabilityAccess().getNameSpaceAssignment_2(), "rule__RequiredCapability__NameSpaceAssignment_2");
					put(grammarAccess.getRequiredCapabilityAccess().getNameAssignment_4(), "rule__RequiredCapability__NameAssignment_4");
					put(grammarAccess.getRequiredCapabilityAccess().getVersionRangeAssignment_5_1(), "rule__RequiredCapability__VersionRangeAssignment_5_1");
					put(grammarAccess.getPropertySet_NamedAccess().getNameAssignment_1(), "rule__PropertySet_Named__NameAssignment_1");
					put(grammarAccess.getPropertySet_NamedAccess().getExtendsAssignment_2_1(), "rule__PropertySet_Named__ExtendsAssignment_2_1");
					put(grammarAccess.getPropertySet_NamedAccess().getOperationsAssignment_4(), "rule__PropertySet_Named__OperationsAssignment_4");
					put(grammarAccess.getPropertySetAccess().getExtendsAssignment_1_1(), "rule__PropertySet__ExtendsAssignment_1_1");
					put(grammarAccess.getPropertySetAccess().getOperationsAssignment_3(), "rule__PropertySet__OperationsAssignment_3");
					put(grammarAccess.getConditionalPropertyOperationAccess().getCondExprAssignment_3(), "rule__ConditionalPropertyOperation__CondExprAssignment_3");
					put(grammarAccess.getConditionalPropertyOperationAccess().getBodyAssignment_5_0(), "rule__ConditionalPropertyOperation__BodyAssignment_5_0");
					put(grammarAccess.getConditionalPropertyOperationAccess().getBodyAssignment_5_1(), "rule__ConditionalPropertyOperation__BodyAssignment_5_1");
					put(grammarAccess.getPropertyDefinitionOperationAccess().getDefinitionAssignment_1_0(), "rule__PropertyDefinitionOperation__DefinitionAssignment_1_0");
					put(grammarAccess.getPropertyDefinitionOperationAccess().getDefinitionAssignment_1_1(), "rule__PropertyDefinitionOperation__DefinitionAssignment_1_1");
					put(grammarAccess.getPropertyValDeclarationAccess().getFinalAssignment_1(), "rule__PropertyValDeclaration__FinalAssignment_1");
					put(grammarAccess.getPropertyValDeclarationAccess().getTypeAssignment_2(), "rule__PropertyValDeclaration__TypeAssignment_2");
					put(grammarAccess.getPropertyValDeclarationAccess().getNameAssignment_3(), "rule__PropertyValDeclaration__NameAssignment_3");
					put(grammarAccess.getPropertyValDeclarationAccess().getValueExprAssignment_5(), "rule__PropertyValDeclaration__ValueExprAssignment_5");
					put(grammarAccess.getPropertyVarDeclarationAccess().getFinalAssignment_1(), "rule__PropertyVarDeclaration__FinalAssignment_1");
					put(grammarAccess.getPropertyVarDeclarationAccess().getMutableAssignment_2(), "rule__PropertyVarDeclaration__MutableAssignment_2");
					put(grammarAccess.getPropertyVarDeclarationAccess().getTypeAssignment_3(), "rule__PropertyVarDeclaration__TypeAssignment_3");
					put(grammarAccess.getPropertyVarDeclarationAccess().getNameAssignment_4(), "rule__PropertyVarDeclaration__NameAssignment_4");
					put(grammarAccess.getPropertyVarDeclarationAccess().getValueExprAssignment_5_1(), "rule__PropertyVarDeclaration__ValueExprAssignment_5_1");
					put(grammarAccess.getPropertySetOperationAccess().getPropertySetAssignment_1(), "rule__PropertySetOperation__PropertySetAssignment_1");
					put(grammarAccess.getSetPropertyOperationAccess().getFinalAssignment_0(), "rule__SetPropertyOperation__FinalAssignment_0");
					put(grammarAccess.getSetPropertyOperationAccess().getKeyAssignment_1(), "rule__SetPropertyOperation__KeyAssignment_1");
					put(grammarAccess.getSetPropertyOperationAccess().getOpAssignment_2(), "rule__SetPropertyOperation__OpAssignment_2");
					put(grammarAccess.getSetPropertyOperationAccess().getValueAssignment_3(), "rule__SetPropertyOperation__ValueAssignment_3");
					put(grammarAccess.getUnsetPropertyOperationAccess().getKeyAssignment_1(), "rule__UnsetPropertyOperation__KeyAssignment_1");
					put(grammarAccess.getSynchronizationAccess().getPartrefsAssignment_0(), "rule__Synchronization__PartrefsAssignment_0");
					put(grammarAccess.getSynchronizationAccess().getPartrefsAssignment_1_1(), "rule__Synchronization__PartrefsAssignment_1_1");
					put(grammarAccess.getPathGroupAccess().getPathVectorsAssignment_1(), "rule__PathGroup__PathVectorsAssignment_1");
					put(grammarAccess.getPathGroupAccess().getAnnotationsAssignment_2_1(), "rule__PathGroup__AnnotationsAssignment_2_1");
					put(grammarAccess.getBasePathVectorAccess().getCondExprAssignment_1_2(), "rule__BasePathVector__CondExprAssignment_1_2");
					put(grammarAccess.getBasePathVectorAccess().getBasePathAssignment_2(), "rule__BasePathVector__BasePathAssignment_2");
					put(grammarAccess.getBasePathVectorAccess().getPathsAssignment_4_0(), "rule__BasePathVector__PathsAssignment_4_0");
					put(grammarAccess.getBasePathVectorAccess().getPathsAssignment_4_1_1(), "rule__BasePathVector__PathsAssignment_4_1_1");
					put(grammarAccess.getUnbasedPathVectorAccess().getCondExprAssignment_1_2(), "rule__UnbasedPathVector__CondExprAssignment_1_2");
					put(grammarAccess.getUnbasedPathVectorAccess().getPathsAssignment_2(), "rule__UnbasedPathVector__PathsAssignment_2");
					put(grammarAccess.getUnbasedPathVectorAccess().getPathsAssignment_3_1(), "rule__UnbasedPathVector__PathsAssignment_3_1");
					put(grammarAccess.getCompoundPathVectorAccess().getCondExprAssignment_3(), "rule__CompoundPathVector__CondExprAssignment_3");
					put(grammarAccess.getCompoundPathVectorAccess().getPathVectorsAssignment_6(), "rule__CompoundPathVector__PathVectorsAssignment_6");
					put(grammarAccess.getPrerequisiteAccess().getCondExprAssignment_1_2(), "rule__Prerequisite__CondExprAssignment_1_2");
					put(grammarAccess.getPrerequisiteAccess().getWithExprAssignment_2(), "rule__Prerequisite__WithExprAssignment_2");
					put(grammarAccess.getPrerequisiteAccess().getBuildResultAssignment_3(), "rule__Prerequisite__BuildResultAssignment_3");
					put(grammarAccess.getPrerequisiteAccess().getAliasAssignment_4_1(), "rule__Prerequisite__AliasAssignment_4_1");
					put(grammarAccess.getWithClauseAccess().getReferencedAdviceAssignment_2_1(), "rule__WithClause__ReferencedAdviceAssignment_2_1");
					put(grammarAccess.getWithClauseAccess().getReferencedAdviceAssignment_2_2_1(), "rule__WithClause__ReferencedAdviceAssignment_2_2_1");
					put(grammarAccess.getWithClauseAccess().getPropertySetsAssignment_3_0_1(), "rule__WithClause__PropertySetsAssignment_3_0_1");
					put(grammarAccess.getWithClauseAccess().getConcernsAssignment_3_1_1(), "rule__WithClause__ConcernsAssignment_3_1_1");
					put(grammarAccess.getDirectBuildResultReferenceAccess().getNameAssignment_1_0(), "rule__DirectBuildResultReference__NameAssignment_1_0");
					put(grammarAccess.getDirectBuildResultReferenceAccess().getBuilderNameAssignment_3(), "rule__DirectBuildResultReference__BuilderNameAssignment_3");
					put(grammarAccess.getDirectBuildResultReferenceAccess().getParametersAssignment_4(), "rule__DirectBuildResultReference__ParametersAssignment_4");
					put(grammarAccess.getCapabilityReferenceAccess().getNameSpaceAssignment_1(), "rule__CapabilityReference__NameSpaceAssignment_1");
					put(grammarAccess.getCapabilityReferenceAccess().getNameAssignment_3(), "rule__CapabilityReference__NameAssignment_3");
					put(grammarAccess.getCapabilityReferenceAccess().getVersionRangeAssignment_4_1(), "rule__CapabilityReference__VersionRangeAssignment_4_1");
					put(grammarAccess.getCapabilityReferenceAccess().getBuilderNameAssignment_5_1(), "rule__CapabilityReference__BuilderNameAssignment_5_1");
					put(grammarAccess.getCapabilityReferenceAccess().getParametersAssignment_6(), "rule__CapabilityReference__ParametersAssignment_6");
					put(grammarAccess.getCompoundBuildResultReferenceAccess().getPrerequisitesAssignment_2(), "rule__CompoundBuildResultReference__PrerequisitesAssignment_2");
					put(grammarAccess.getBuilderAccess().getDocumentationAssignment_1(), "rule__Builder__DocumentationAssignment_1");
					put(grammarAccess.getBuilderAccess().getVisibilityAssignment_2(), "rule__Builder__VisibilityAssignment_2");
					put(grammarAccess.getBuilderAccess().getExecutionModeAssignment_3(), "rule__Builder__ExecutionModeAssignment_3");
					put(grammarAccess.getBuilderAccess().getFinalAssignment_4(), "rule__Builder__FinalAssignment_4");
					put(grammarAccess.getBuilderAccess().getNameAssignment_6(), "rule__Builder__NameAssignment_6");
					put(grammarAccess.getBuilderAccess().getParametersAssignment_7_0_1_0(), "rule__Builder__ParametersAssignment_7_0_1_0");
					put(grammarAccess.getBuilderAccess().getParametersAssignment_7_0_1_1_1(), "rule__Builder__ParametersAssignment_7_0_1_1_1");
					put(grammarAccess.getBuilderAccess().getVarArgsAssignment_7_0_1_2_1(), "rule__Builder__VarArgsAssignment_7_0_1_2_1");
					put(grammarAccess.getBuilderAccess().getParametersAssignment_7_0_1_2_2(), "rule__Builder__ParametersAssignment_7_0_1_2_2");
					put(grammarAccess.getBuilderAccess().getVarArgsAssignment_7_1_0_0(), "rule__Builder__VarArgsAssignment_7_1_0_0");
					put(grammarAccess.getBuilderAccess().getParametersAssignment_7_1_0_1(), "rule__Builder__ParametersAssignment_7_1_0_1");
					put(grammarAccess.getBuilderAccess().getProvidedCapabilitiesAssignment_8_1(), "rule__Builder__ProvidedCapabilitiesAssignment_8_1");
					put(grammarAccess.getBuilderAccess().getProvidedCapabilitiesAssignment_8_2_1(), "rule__Builder__ProvidedCapabilitiesAssignment_8_2_1");
					put(grammarAccess.getBuilderAccess().getPrecondExprAssignment_9_1_0_1(), "rule__Builder__PrecondExprAssignment_9_1_0_1");
					put(grammarAccess.getBuilderAccess().getPrecondExprAssignment_9_1_1(), "rule__Builder__PrecondExprAssignment_9_1_1");
					put(grammarAccess.getBuilderAccess().getPostcondExprAssignment_10_1_0_1(), "rule__Builder__PostcondExprAssignment_10_1_0_1");
					put(grammarAccess.getBuilderAccess().getPostcondExprAssignment_10_1_1(), "rule__Builder__PostcondExprAssignment_10_1_1");
					put(grammarAccess.getBuilderAccess().getDefaultPropertiesAssignment_12_2(), "rule__Builder__DefaultPropertiesAssignment_12_2");
					put(grammarAccess.getBuilderAccess().getInputAssignment_13(), "rule__Builder__InputAssignment_13");
					put(grammarAccess.getBuilderAccess().getOutputAssignment_14_2(), "rule__Builder__OutputAssignment_14_2");
					put(grammarAccess.getBuilderAccess().getFuncExprAssignment_15(), "rule__Builder__FuncExprAssignment_15");
					put(grammarAccess.getParameterListAccess().getParametersAssignment_1(), "rule__ParameterList__ParametersAssignment_1");
					put(grammarAccess.getParameterListAccess().getParametersAssignment_2_1(), "rule__ParameterList__ParametersAssignment_2_1");
					put(grammarAccess.getParameterAccess().getExprAssignment_1(), "rule__Parameter__ExprAssignment_1");
					put(grammarAccess.getClosureParameterAccess().getExprAssignment_1(), "rule__ClosureParameter__ExprAssignment_1");
					put(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_0_0(), "rule__ParameterDeclarationList__ParamsAssignment_0_0");
					put(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_0_1_1(), "rule__ParameterDeclarationList__ParamsAssignment_0_1_1");
					put(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_0_2_1(), "rule__ParameterDeclarationList__ParamsAssignment_0_2_1");
					put(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_1(), "rule__ParameterDeclarationList__ParamsAssignment_1");
					put(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_1_0(), "rule__ParameterDeclaration__TypeAssignment_1_0");
					put(grammarAccess.getParameterDeclarationAccess().getNameAssignment_1_1(), "rule__ParameterDeclaration__NameAssignment_1_1");
					put(grammarAccess.getParameterDeclarationEllipseAccess().getTypeAssignment_2(), "rule__ParameterDeclarationEllipse__TypeAssignment_2");
					put(grammarAccess.getParameterDeclarationEllipseAccess().getNameAssignment_3(), "rule__ParameterDeclarationEllipse__NameAssignment_3");
					put(grammarAccess.getBuilderOutputAccess().getBodyAssignment_2(), "rule__BuilderOutput__BodyAssignment_2");
					put(grammarAccess.getBuilderInputAccess().getPrecondExprAssignment_2_1_0_1(), "rule__BuilderInput__PrecondExprAssignment_2_1_0_1");
					put(grammarAccess.getBuilderInputAccess().getPrecondExprAssignment_2_1_1(), "rule__BuilderInput__PrecondExprAssignment_2_1_1");
					put(grammarAccess.getBuilderInputAccess().getPostcondExprAssignment_3_1_0_1(), "rule__BuilderInput__PostcondExprAssignment_3_1_0_1");
					put(grammarAccess.getBuilderInputAccess().getPostcondExprAssignment_3_1_1(), "rule__BuilderInput__PostcondExprAssignment_3_1_1");
					put(grammarAccess.getBuilderInputAccess().getPrerequisitesAssignment_5(), "rule__BuilderInput__PrerequisitesAssignment_5");
					put(grammarAccess.getRepositoryDeclarationAccess().getDocumentationAssignment_0(), "rule__RepositoryDeclaration__DocumentationAssignment_0");
					put(grammarAccess.getRepositoryDeclarationAccess().getLocationAssignment_1_0(), "rule__RepositoryDeclaration__LocationAssignment_1_0");
					put(grammarAccess.getRepositoryDeclarationAccess().getTypeAssignment_1_1_1(), "rule__RepositoryDeclaration__TypeAssignment_1_1_1");
					put(grammarAccess.getRepositoryDeclarationAccess().getContextAssignment_2(), "rule__RepositoryDeclaration__ContextAssignment_2");
					put(grammarAccess.getResolutionStrategyAccess().getStrategyAssignment_0(), "rule__ResolutionStrategy__StrategyAssignment_0");
					put(grammarAccess.getResolutionStrategyAccess().getRepositoryConfigAssignment_2(), "rule__ResolutionStrategy__RepositoryConfigAssignment_2");
					put(grammarAccess.getContainerConfigurationAccess().getDocumentationAssignment_0(), "rule__ContainerConfiguration__DocumentationAssignment_0");
					put(grammarAccess.getContainerConfigurationAccess().getNameAssignment_2(), "rule__ContainerConfiguration__NameAssignment_2");
					put(grammarAccess.getContainerConfigurationAccess().getTypeAssignment_4(), "rule__ContainerConfiguration__TypeAssignment_4");
					put(grammarAccess.getContainerConfigurationAccess().getContextBlockAssignment_5(), "rule__ContainerConfiguration__ContextBlockAssignment_5");
					put(grammarAccess.getConcern_NamedAccess().getDocumentationAssignment_1(), "rule__Concern_Named__DocumentationAssignment_1");
					put(grammarAccess.getConcern_NamedAccess().getNameAssignment_3(), "rule__Concern_Named__NameAssignment_3");
					put(grammarAccess.getConcern_NamedAccess().getSuperConcernsAssignment_4_1(), "rule__Concern_Named__SuperConcernsAssignment_4_1");
					put(grammarAccess.getConcern_NamedAccess().getSuperConcernsAssignment_4_2_1(), "rule__Concern_Named__SuperConcernsAssignment_4_2_1");
					put(grammarAccess.getConcern_NamedAccess().getPropertySetsAssignment_6_0_1(), "rule__Concern_Named__PropertySetsAssignment_6_0_1");
					put(grammarAccess.getConcern_NamedAccess().getFunctionsAssignment_6_1(), "rule__Concern_Named__FunctionsAssignment_6_1");
					put(grammarAccess.getConcern_NamedAccess().getFunctionsAssignment_6_2(), "rule__Concern_Named__FunctionsAssignment_6_2");
					put(grammarAccess.getConcern_AnonymousAccess().getSuperConcernsAssignment_1_1(), "rule__Concern_Anonymous__SuperConcernsAssignment_1_1");
					put(grammarAccess.getConcern_AnonymousAccess().getSuperConcernsAssignment_1_2_1(), "rule__Concern_Anonymous__SuperConcernsAssignment_1_2_1");
					put(grammarAccess.getConcern_AnonymousAccess().getPropertySetsAssignment_3_0_1(), "rule__Concern_Anonymous__PropertySetsAssignment_3_0_1");
					put(grammarAccess.getConcern_AnonymousAccess().getFunctionsAssignment_3_1(), "rule__Concern_Anonymous__FunctionsAssignment_3_1");
					put(grammarAccess.getConcern_AnonymousAccess().getFunctionsAssignment_3_2(), "rule__Concern_Anonymous__FunctionsAssignment_3_2");
					put(grammarAccess.getFunctionAccess().getDocumentationAssignment_1(), "rule__Function__DocumentationAssignment_1");
					put(grammarAccess.getFunctionAccess().getVisibilityAssignment_2(), "rule__Function__VisibilityAssignment_2");
					put(grammarAccess.getFunctionAccess().getExecutionModeAssignment_3(), "rule__Function__ExecutionModeAssignment_3");
					put(grammarAccess.getFunctionAccess().getFinalAssignment_4(), "rule__Function__FinalAssignment_4");
					put(grammarAccess.getFunctionAccess().getReturnTypeAssignment_6(), "rule__Function__ReturnTypeAssignment_6");
					put(grammarAccess.getFunctionAccess().getNameAssignment_7(), "rule__Function__NameAssignment_7");
					put(grammarAccess.getFunctionAccess().getParametersAssignment_8_1_0_0(), "rule__Function__ParametersAssignment_8_1_0_0");
					put(grammarAccess.getFunctionAccess().getParametersAssignment_8_1_0_1_1(), "rule__Function__ParametersAssignment_8_1_0_1_1");
					put(grammarAccess.getFunctionAccess().getVarArgsAssignment_8_1_0_2_1(), "rule__Function__VarArgsAssignment_8_1_0_2_1");
					put(grammarAccess.getFunctionAccess().getParametersAssignment_8_1_0_2_2(), "rule__Function__ParametersAssignment_8_1_0_2_2");
					put(grammarAccess.getFunctionAccess().getVarArgsAssignment_8_1_1_0(), "rule__Function__VarArgsAssignment_8_1_1_0");
					put(grammarAccess.getFunctionAccess().getParametersAssignment_8_1_1_1(), "rule__Function__ParametersAssignment_8_1_1_1");
					put(grammarAccess.getFunctionAccess().getFuncExprAssignment_9_0_1(), "rule__Function__FuncExprAssignment_9_0_1");
					put(grammarAccess.getFunctionAccess().getFuncExprAssignment_9_1(), "rule__Function__FuncExprAssignment_9_1");
					put(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignment_1_1(), "rule__AssignmentExpression__FunctionNameAssignment_1_1");
					put(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignment_1_2(), "rule__AssignmentExpression__RightExprAssignment_1_2");
					put(grammarAccess.getVarDeclarationAccess().getFinalAssignment_1(), "rule__VarDeclaration__FinalAssignment_1");
					put(grammarAccess.getVarDeclarationAccess().getTypeAssignment_2_0_1(), "rule__VarDeclaration__TypeAssignment_2_0_1");
					put(grammarAccess.getVarDeclarationAccess().getNameAssignment_2_1(), "rule__VarDeclaration__NameAssignment_2_1");
					put(grammarAccess.getVarDeclarationAccess().getValueExprAssignment_3_1(), "rule__VarDeclaration__ValueExprAssignment_3_1");
					put(grammarAccess.getValDeclarationAccess().getFinalAssignment_1(), "rule__ValDeclaration__FinalAssignment_1");
					put(grammarAccess.getValDeclarationAccess().getImmutableAssignment_2(), "rule__ValDeclaration__ImmutableAssignment_2");
					put(grammarAccess.getValDeclarationAccess().getTypeAssignment_3(), "rule__ValDeclaration__TypeAssignment_3");
					put(grammarAccess.getValDeclarationAccess().getNameAssignment_4(), "rule__ValDeclaration__NameAssignment_4");
					put(grammarAccess.getValDeclarationAccess().getValueExprAssignment_6(), "rule__ValDeclaration__ValueExprAssignment_6");
					put(grammarAccess.getSimpleTypeRefAccess().getRawTypeAssignment_1(), "rule__SimpleTypeRef__RawTypeAssignment_1");
					put(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_2_1(), "rule__SimpleTypeRef__ActualArgumentsListAssignment_2_1");
					put(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_2_2_1(), "rule__SimpleTypeRef__ActualArgumentsListAssignment_2_2_1");
					put(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_1_0_0(), "rule__ClosureTypeRef__ParameterTypesAssignment_1_1_0_0");
					put(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_1_0_1_1(), "rule__ClosureTypeRef__ParameterTypesAssignment_1_1_0_1_1");
					put(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_1_0_2_1(), "rule__ClosureTypeRef__VarArgsAssignment_1_1_0_2_1");
					put(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_1_0_2_2(), "rule__ClosureTypeRef__ParameterTypesAssignment_1_1_0_2_2");
					put(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_1_1_0(), "rule__ClosureTypeRef__VarArgsAssignment_1_1_1_0");
					put(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_1_1_1(), "rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1_1");
					put(grammarAccess.getClosureTypeRefAccess().getReturnTypeAssignment_1_4(), "rule__ClosureTypeRef__ReturnTypeAssignment_1_4");
					put(grammarAccess.getWildcardRefParamAccess().getUpperBoundsListAssignment_2_0_1(), "rule__WildcardRefParam__UpperBoundsListAssignment_2_0_1");
					put(grammarAccess.getWildcardRefParamAccess().getUpperBoundsListAssignment_2_0_2_1(), "rule__WildcardRefParam__UpperBoundsListAssignment_2_0_2_1");
					put(grammarAccess.getWildcardRefParamAccess().getLowerBoundsListAssignment_2_1_1(), "rule__WildcardRefParam__LowerBoundsListAssignment_2_1_1");
					put(grammarAccess.getCachedExpressionAccess().getExprAssignment_0_2(), "rule__CachedExpression__ExprAssignment_0_2");
					put(grammarAccess.getOrExpressionAccess().getRightExprAssignment_1_2(), "rule__OrExpression__RightExprAssignment_1_2");
					put(grammarAccess.getAndExpressionAccess().getRightExprAssignment_1_2(), "rule__AndExpression__RightExprAssignment_1_2");
					put(grammarAccess.getRelationalExpressionAccess().getFunctionNameAssignment_1_1(), "rule__RelationalExpression__FunctionNameAssignment_1_1");
					put(grammarAccess.getRelationalExpressionAccess().getRightExprAssignment_1_2(), "rule__RelationalExpression__RightExprAssignment_1_2");
					put(grammarAccess.getInstanceOfExpressionAccess().getFunctionNameAssignment_1_1(), "rule__InstanceOfExpression__FunctionNameAssignment_1_1");
					put(grammarAccess.getInstanceOfExpressionAccess().getRightExprAssignment_1_2(), "rule__InstanceOfExpression__RightExprAssignment_1_2");
					put(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAssignment_1_1(), "rule__AdditiveExpression__FunctionNameAssignment_1_1");
					put(grammarAccess.getAdditiveExpressionAccess().getRightExprAssignment_1_2(), "rule__AdditiveExpression__RightExprAssignment_1_2");
					put(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAssignment_1_1(), "rule__MultiplicativeExpression__FunctionNameAssignment_1_1");
					put(grammarAccess.getMultiplicativeExpressionAccess().getRightExprAssignment_1_2(), "rule__MultiplicativeExpression__RightExprAssignment_1_2");
					put(grammarAccess.getSetExpressionAccess().getFunctionNameAssignment_1_1(), "rule__SetExpression__FunctionNameAssignment_1_1");
					put(grammarAccess.getSetExpressionAccess().getRightExprAssignment_1_2(), "rule__SetExpression__RightExprAssignment_1_2");
					put(grammarAccess.getUnaryExpressionAccess().getFunctionNameAssignment_1(), "rule__UnaryExpression__FunctionNameAssignment_1");
					put(grammarAccess.getUnaryExpressionAccess().getExprAssignment_2(), "rule__UnaryExpression__ExprAssignment_2");
					put(grammarAccess.getPreopExpressionAccess().getFunctionNameAssignment_1(), "rule__PreopExpression__FunctionNameAssignment_1");
					put(grammarAccess.getPreopExpressionAccess().getExprAssignment_2(), "rule__PreopExpression__ExprAssignment_2");
					put(grammarAccess.getPostopExpressionAccess().getFunctionNameAssignment_1_1(), "rule__PostopExpression__FunctionNameAssignment_1_1");
					put(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2(), "rule__InfixExpression__NameAssignment_1_0_2");
					put(grammarAccess.getInfixExpressionAccess().getParameterListAssignment_1_0_4(), "rule__InfixExpression__ParameterListAssignment_1_0_4");
					put(grammarAccess.getInfixExpressionAccess().getIndexExprAssignment_1_1_2(), "rule__InfixExpression__IndexExprAssignment_1_1_2");
					put(grammarAccess.getInfixExpressionAccess().getFeatureNameAssignment_1_2_2(), "rule__InfixExpression__FeatureNameAssignment_1_2_2");
					put(grammarAccess.getCallExpressionAccess().getParameterListAssignment_1_2(), "rule__CallExpression__ParameterListAssignment_1_2");
					put(grammarAccess.getThrowExpressionAccess().getExprAssignment_2(), "rule__ThrowExpression__ExprAssignment_2");
					put(grammarAccess.getTryCatchExpressionAccess().getTryExprAssignment_2(), "rule__TryCatchExpression__TryExprAssignment_2");
					put(grammarAccess.getTryCatchExpressionAccess().getCatchBlocksAssignment_3(), "rule__TryCatchExpression__CatchBlocksAssignment_3");
					put(grammarAccess.getTryCatchExpressionAccess().getFinallyExprAssignment_4_1(), "rule__TryCatchExpression__FinallyExprAssignment_4_1");
					put(grammarAccess.getCatchBlockAccess().getExceptionTypeAssignment_2(), "rule__CatchBlock__ExceptionTypeAssignment_2");
					put(grammarAccess.getCatchBlockAccess().getVarnameAssignment_3(), "rule__CatchBlock__VarnameAssignment_3");
					put(grammarAccess.getCatchBlockAccess().getCatchExprAssignment_5(), "rule__CatchBlock__CatchExprAssignment_5");
					put(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionAssignment_2(), "rule__SwitchExpression__SwitchExpressionAssignment_2");
					put(grammarAccess.getSwitchExpressionAccess().getCaseListAssignment_3(), "rule__SwitchExpression__CaseListAssignment_3");
					put(grammarAccess.getCaseAccess().getConditionExprAssignment_2(), "rule__Case__ConditionExprAssignment_2");
					put(grammarAccess.getCaseAccess().getThenExprAssignment_4(), "rule__Case__ThenExprAssignment_4");
					put(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_0(), "rule__BlockExpression__ExpressionsAssignment_2_0");
					put(grammarAccess.getIfExpressionAccess().getConditionExprAssignment_2(), "rule__IfExpression__ConditionExprAssignment_2");
					put(grammarAccess.getIfExpressionAccess().getThenExprAssignment_4(), "rule__IfExpression__ThenExprAssignment_4");
					put(grammarAccess.getIfExpressionAccess().getElseExprAssignment_5_0(), "rule__IfExpression__ElseExprAssignment_5_0");
					put(grammarAccess.getIfExpressionAccess().getElseExprAssignment_5_1_1(), "rule__IfExpression__ElseExprAssignment_5_1_1");
					put(grammarAccess.getElseIfExpressionAccess().getConditionExprAssignment_2(), "rule__ElseIfExpression__ConditionExprAssignment_2");
					put(grammarAccess.getElseIfExpressionAccess().getThenExprAssignment_4(), "rule__ElseIfExpression__ThenExprAssignment_4");
					put(grammarAccess.getElseIfExpressionAccess().getElseExprAssignment_5_0(), "rule__ElseIfExpression__ElseExprAssignment_5_0");
					put(grammarAccess.getElseIfExpressionAccess().getElseExprAssignment_5_1_1(), "rule__ElseIfExpression__ElseExprAssignment_5_1_1");
					put(grammarAccess.getPropertyValueAccess().getNameAssignment_1(), "rule__PropertyValue__NameAssignment_1");
					put(grammarAccess.getVariableValueAccess().getNameAssignment_1(), "rule__VariableValue__NameAssignment_1");
					put(grammarAccess.getKeywordVariablesAccess().getNameAssignment_1(), "rule__KeywordVariables__NameAssignment_1");
					put(grammarAccess.getOperationCallAccess().getNameAssignment_1(), "rule__OperationCall__NameAssignment_1");
					put(grammarAccess.getOperationCallAccess().getParameterListAssignment_3(), "rule__OperationCall__ParameterListAssignment_3");
					put(grammarAccess.getConstructorCallExpressionAccess().getTypeExprAssignment_2(), "rule__ConstructorCallExpression__TypeExprAssignment_2");
					put(grammarAccess.getConstructorCallExpressionAccess().getParameterListAssignment_3_1(), "rule__ConstructorCallExpression__ParameterListAssignment_3_1");
					put(grammarAccess.getConstructorCallExpressionAccess().getAliasAssignment_4_1(), "rule__ConstructorCallExpression__AliasAssignment_4_1");
					put(grammarAccess.getConstructorCallExpressionAccess().getContextBlockAssignment_5(), "rule__ConstructorCallExpression__ContextBlockAssignment_5");
					put(grammarAccess.getContextBlockAccess().getExpressionsAssignment_2_0(), "rule__ContextBlock__ExpressionsAssignment_2_0");
					put(grammarAccess.getContextBlockAccess().getExpressionsAssignment_2_1_0(), "rule__ContextBlock__ExpressionsAssignment_2_1_0");
					put(grammarAccess.getFunctionDefinitionAccess().getFunctionAssignment_1(), "rule__FunctionDefinition__FunctionAssignment_1");
					put(grammarAccess.getLiteralListAccess().getEntryTypeAssignment_0_2_1(), "rule__LiteralList__EntryTypeAssignment_0_2_1");
					put(grammarAccess.getLiteralListAccess().getEntriesAssignment_0_3(), "rule__LiteralList__EntriesAssignment_0_3");
					put(grammarAccess.getLiteralListAccess().getEntriesAssignment_0_4_1(), "rule__LiteralList__EntriesAssignment_0_4_1");
					put(grammarAccess.getLiteralListAccess().getEntryTypeAssignment_1_3(), "rule__LiteralList__EntryTypeAssignment_1_3");
					put(grammarAccess.getLiteralMapAccess().getKeyTypeAssignment_0_2_1(), "rule__LiteralMap__KeyTypeAssignment_0_2_1");
					put(grammarAccess.getLiteralMapAccess().getValueTypeAssignment_0_2_3(), "rule__LiteralMap__ValueTypeAssignment_0_2_3");
					put(grammarAccess.getLiteralMapAccess().getEntriesAssignment_0_3(), "rule__LiteralMap__EntriesAssignment_0_3");
					put(grammarAccess.getLiteralMapAccess().getEntriesAssignment_0_4_1(), "rule__LiteralMap__EntriesAssignment_0_4_1");
					put(grammarAccess.getLiteralMapAccess().getKeyTypeAssignment_1_3(), "rule__LiteralMap__KeyTypeAssignment_1_3");
					put(grammarAccess.getLiteralMapAccess().getValueTypeAssignment_1_5(), "rule__LiteralMap__ValueTypeAssignment_1_5");
					put(grammarAccess.getLiteralFunctionAccess().getReturnTypeAssignment_2_1(), "rule__LiteralFunction__ReturnTypeAssignment_2_1");
					put(grammarAccess.getLiteralFunctionAccess().getParametersAssignment_3_0_0(), "rule__LiteralFunction__ParametersAssignment_3_0_0");
					put(grammarAccess.getLiteralFunctionAccess().getParametersAssignment_3_0_1_1(), "rule__LiteralFunction__ParametersAssignment_3_0_1_1");
					put(grammarAccess.getLiteralFunctionAccess().getVarArgsAssignment_3_0_2_1(), "rule__LiteralFunction__VarArgsAssignment_3_0_2_1");
					put(grammarAccess.getLiteralFunctionAccess().getParametersAssignment_3_0_2_2(), "rule__LiteralFunction__ParametersAssignment_3_0_2_2");
					put(grammarAccess.getLiteralFunctionAccess().getVarArgsAssignment_3_1_0(), "rule__LiteralFunction__VarArgsAssignment_3_1_0");
					put(grammarAccess.getLiteralFunctionAccess().getParametersAssignment_3_1_1(), "rule__LiteralFunction__ParametersAssignment_3_1_1");
					put(grammarAccess.getLiteralFunctionAccess().getFuncExprAssignment_5(), "rule__LiteralFunction__FuncExprAssignment_5");
					put(grammarAccess.getClosureExpressionAccess().getReturnTypeAssignment_1_1(), "rule__ClosureExpression__ReturnTypeAssignment_1_1");
					put(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_0(), "rule__ClosureExpression__ParametersAssignment_2_0_0");
					put(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_1(), "rule__ClosureExpression__ParametersAssignment_2_0_1_1");
					put(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_0_2_1(), "rule__ClosureExpression__VarArgsAssignment_2_0_2_1");
					put(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_2_2(), "rule__ClosureExpression__ParametersAssignment_2_0_2_2");
					put(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_1_0(), "rule__ClosureExpression__VarArgsAssignment_2_1_0");
					put(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_1_1(), "rule__ClosureExpression__ParametersAssignment_2_1_1");
					put(grammarAccess.getClosureExpressionAccess().getFuncExprAssignment_4(), "rule__ClosureExpression__FuncExprAssignment_4");
					put(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsAssignment_1_0(), "rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0");
					put(grammarAccess.getMapEntryAccess().getKeyAssignment_1(), "rule__MapEntry__KeyAssignment_1");
					put(grammarAccess.getMapEntryAccess().getValueAssignment_3(), "rule__MapEntry__ValueAssignment_3");
					put(grammarAccess.getKeyLiteralAccess().getValueAssignment_1(), "rule__KeyLiteral__ValueAssignment_1");
					put(grammarAccess.getLiteralTypeAccess().getTypeAssignment_1(), "rule__LiteralType__TypeAssignment_1");
					put(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1(), "rule__BooleanLiteral__ValueAssignment_1");
					put(grammarAccess.getIntegerLiteralAccess().getValueAssignment_1(), "rule__IntegerLiteral__ValueAssignment_1");
					put(grammarAccess.getUnitLiteralAccess().getValueAssignment_1(), "rule__UnitLiteral__ValueAssignment_1");
					put(grammarAccess.getStringLiteralAccess().getValueAssignment_1(), "rule__StringLiteral__ValueAssignment_1");
					put(grammarAccess.getRealLiteralAccess().getValueAssignment_1(), "rule__RealLiteral__ValueAssignment_1");
					put(grammarAccess.getRegexpLiteralAccess().getPatternAssignment_1(), "rule__RegexpLiteral__PatternAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangParser typedParser = (org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangParser) parser;
			typedParser.entryRuleBeeModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] {  };
	}
	
	public BeeLangGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(BeeLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
