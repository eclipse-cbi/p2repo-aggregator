/*
* generated by Xtext
*/
package org.eclipse.b3.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.CharStream;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.eclipse.b3.services.BeeLangGrammarAccess;

public class BeeLangParser extends AbstractContentAssistParser {
	
	@Inject
	private BeeLangGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangLexer createLexer(CharStream stream) {
		return new org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangLexer(stream);
	}
	
	@Override
	protected org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangParser createParser() {
		org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangParser result = new org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				{
					put(grammarAccess.getBeeModelAccess().getAlternatives_1(), "rule__BeeModel__Alternatives_1");
					put(grammarAccess.getImportAccess().getImporterAlternatives_2_0(), "rule__Import__ImporterAlternatives_2_0");
					put(grammarAccess.getUnitAccess().getAlternatives_8(), "rule__Unit__Alternatives_8");
					put(grammarAccess.getPropertyOperationAccess().getAlternatives(), "rule__PropertyOperation__Alternatives");
					put(grammarAccess.getFilteredPropertyOperationAccess().getBodyAlternatives_2_0(), "rule__FilteredPropertyOperation__BodyAlternatives_2_0");
					put(grammarAccess.getSynchronizedPartAccess().getAlternatives(), "rule__SynchronizedPart__Alternatives");
					put(grammarAccess.getPathVectorElementAccess().getAlternatives(), "rule__PathVectorElement__Alternatives");
					put(grammarAccess.getFilteredPathVectorAccess().getBodyAlternatives_2_0(), "rule__FilteredPathVector__BodyAlternatives_2_0");
					put(grammarAccess.getPathAccess().getAlternatives(), "rule__Path__Alternatives");
					put(grammarAccess.getWithClauseAccess().getAlternatives_3(), "rule__WithClause__Alternatives_3");
					put(grammarAccess.getPrerequisiteEntryAccess().getAlternatives(), "rule__PrerequisiteEntry__Alternatives");
					put(grammarAccess.getDirectPartReferemceAccess().getAlternatives_0(), "rule__DirectPartReferemce__Alternatives_0");
					put(grammarAccess.getParameterListAccess().getAlternatives(), "rule__ParameterList__Alternatives");
					put(grammarAccess.getParameterDeclarationListAccess().getAlternatives(), "rule__ParameterDeclarationList__Alternatives");
					put(grammarAccess.getRepositoryConfigurationAccess().getAlternatives(), "rule__RepositoryConfiguration__Alternatives");
					put(grammarAccess.getRepositoryDeclarationAccess().getAlternatives_1(), "rule__RepositoryDeclaration__Alternatives_1");
					put(grammarAccess.getResolutionStrategyAccess().getStrategyAlternatives_0_0(), "rule__ResolutionStrategy__StrategyAlternatives_0_0");
					put(grammarAccess.getConcernBlockAccess().getAlternatives_2(), "rule__ConcernBlock__Alternatives_2");
					put(grammarAccess.getSelectorAccess().getAlternatives_0(), "rule__Selector__Alternatives_0");
					put(grammarAccess.getFunctionOrMethodAccess().getFormAlternatives_5_0(), "rule__FunctionOrMethod__FormAlternatives_5_0");
					put(grammarAccess.getFunctionOrMethodAccess().getAlternatives_10(), "rule__FunctionOrMethod__Alternatives_10");
					put(grammarAccess.getTypeParamDeclarationAccess().getAlternatives_1(), "rule__TypeParamDeclaration__Alternatives_1");
					put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
					put(grammarAccess.getAssignmentExpressionAccess().getAlternatives_0(), "rule__AssignmentExpression__Alternatives_0");
					put(grammarAccess.getVarDeclarationAccess().getAlternatives_1(), "rule__VarDeclaration__Alternatives_1");
					put(grammarAccess.getTypeRefAccess().getAlternatives(), "rule__TypeRef__Alternatives");
					put(grammarAccess.getRuleTypeParamAccess().getAlternatives(), "rule__RuleTypeParam__Alternatives");
					put(grammarAccess.getWildcardRefParamAccess().getAlternatives_1(), "rule__WildcardRefParam__Alternatives_1");
					put(grammarAccess.getBitwiseExpressionAccess().getNameAlternatives_1_1_0(), "rule__BitwiseExpression__NameAlternatives_1_1_0");
					put(grammarAccess.getShiftExpressionAccess().getNameAlternatives_1_1_0(), "rule__ShiftExpression__NameAlternatives_1_1_0");
					put(grammarAccess.getAdditiveExpressionAccess().getNameAlternatives_1_1_0(), "rule__AdditiveExpression__NameAlternatives_1_1_0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getNameAlternatives_1_1_0(), "rule__MultiplicativeExpression__NameAlternatives_1_1_0");
					put(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives(), "rule__UnaryOrInfixExpression__Alternatives");
					put(grammarAccess.getUnaryExpressionAccess().getNameAlternatives_1_0(), "rule__UnaryExpression__NameAlternatives_1_0");
					put(grammarAccess.getPostopExpressionAccess().getNameAlternatives_1_1_0(), "rule__PostopExpression__NameAlternatives_1_1_0");
					put(grammarAccess.getInfixExpressionAccess().getAlternatives_1(), "rule__InfixExpression__Alternatives_1");
					put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
					put(grammarAccess.getWithExpressionAccess().getAlternatives(), "rule__WithExpression__Alternatives");
					put(grammarAccess.getIfExpressionTailAccess().getAlternatives(), "rule__IfExpressionTail__Alternatives");
					put(grammarAccess.getKeywordVariablesAccess().getNameAlternatives_1_0(), "rule__KeywordVariables__NameAlternatives_1_0");
					put(grammarAccess.getOperationCallAccess().getAlternatives(), "rule__OperationCall__Alternatives");
					put(grammarAccess.getOperationCallAccess().getNameAlternatives_0_0_0(), "rule__OperationCall__NameAlternatives_0_0_0");
					put(grammarAccess.getContextSelectorAccess().getAlternatives(), "rule__ContextSelector__Alternatives");
					put(grammarAccess.getUnitSelectorAccess().getAlternatives_2_1(), "rule__UnitSelector__Alternatives_2_1");
					put(grammarAccess.getContextBlockAccess().getAlternatives_1(), "rule__ContextBlock__Alternatives_1");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getLiteralListAccess().getAlternatives(), "rule__LiteralList__Alternatives");
					put(grammarAccess.getLiteralMapAccess().getAlternatives(), "rule__LiteralMap__Alternatives");
					put(grammarAccess.getFeatureAccess().getNameAlternatives_1_0(), "rule__Feature__NameAlternatives_1_0");
					put(grammarAccess.getValueLiteralAccess().getAlternatives(), "rule__ValueLiteral__Alternatives");
					put(grammarAccess.getBooleanLiteralAccess().getValAlternatives_1_0(), "rule__BooleanLiteral__ValAlternatives_1_0");
					put(grammarAccess.getIntValueAccess().getAlternatives(), "rule__IntValue__Alternatives");
					put(grammarAccess.getVersionLiteralAccess().getAlternatives(), "rule__VersionLiteral__Alternatives");
					put(grammarAccess.getVersionRangeLiteralAccess().getAlternatives(), "rule__VersionRangeLiteral__Alternatives");
					put(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_0_0(), "rule__VersionRangeLiteral__Alternatives_0_0");
					put(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_0_1(), "rule__VersionRangeLiteral__Alternatives_0_1");
					put(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_0_2_1(), "rule__VersionRangeLiteral__Alternatives_0_2_1");
					put(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_0_3(), "rule__VersionRangeLiteral__Alternatives_0_3");
					put(grammarAccess.getVersionRangeLiteralAccess().getAlternatives_1(), "rule__VersionRangeLiteral__Alternatives_1");
					put(grammarAccess.getQIDREFAccess().getAlternatives(), "rule__QIDREF__Alternatives");
					put(grammarAccess.getQIDREFAccess().getAlternatives_0_0(), "rule__QIDREF__Alternatives_0_0");
					put(grammarAccess.getQIDREFAccess().getAlternatives_0_0_1_0(), "rule__QIDREF__Alternatives_0_0_1_0");
					put(grammarAccess.getQIDAccess().getAlternatives_1(), "rule__QID__Alternatives_1");
					put(grammarAccess.getQIDAccess().getAlternatives_2_2(), "rule__QID__Alternatives_2_2");
					put(grammarAccess.getEscapedQualifiedNameAccess().getAlternatives(), "rule__EscapedQualifiedName__Alternatives");
					put(grammarAccess.getSeparatorAccess().getAlternatives(), "rule__Separator__Alternatives");
					put(grammarAccess.getAlfanumSymAccess().getAlternatives_0(), "rule__AlfanumSym__Alternatives_0");
					put(grammarAccess.getAlfanumSymAccess().getAlternatives_1(), "rule__AlfanumSym__Alternatives_1");
					put(grammarAccess.getREALAccess().getAlternatives_2(), "rule__REAL__Alternatives_2");
					put(grammarAccess.getSelectorOperatorAccess().getAlternatives(), "rule__SelectorOperator__Alternatives");
					put(grammarAccess.getAssignmentOperatorAccess().getAlternatives(), "rule__AssignmentOperator__Alternatives");
					put(grammarAccess.getRelationalOperatorAccess().getAlternatives(), "rule__RelationalOperator__Alternatives");
					put(grammarAccess.getVisibilityAccess().getAlternatives(), "rule__Visibility__Alternatives");
					put(grammarAccess.getExecutionModeAccess().getAlternatives(), "rule__ExecutionMode__Alternatives");
					put(grammarAccess.getBeeModelAccess().getGroup(), "rule__BeeModel__Group__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getImportAccess().getGroup_3(), "rule__Import__Group_3__0");
					put(grammarAccess.getUnitAccess().getGroup(), "rule__Unit__Group__0");
					put(grammarAccess.getUnitAccess().getGroup_4(), "rule__Unit__Group_4__0");
					put(grammarAccess.getUnitAccess().getGroup_5(), "rule__Unit__Group_5__0");
					put(grammarAccess.getUnitAccess().getGroup_5_2(), "rule__Unit__Group_5_2__0");
					put(grammarAccess.getUnitAccess().getGroup_7(), "rule__Unit__Group_7__0");
					put(grammarAccess.getUnitAccess().getGroup_8_0(), "rule__Unit__Group_8_0__0");
					put(grammarAccess.getUnitAccess().getGroup_8_0_2(), "rule__Unit__Group_8_0_2__0");
					put(grammarAccess.getUnitAccess().getGroup_8_1(), "rule__Unit__Group_8_1__0");
					put(grammarAccess.getUnitAccess().getGroup_8_2(), "rule__Unit__Group_8_2__0");
					put(grammarAccess.getUnitAccess().getGroup_8_2_2(), "rule__Unit__Group_8_2_2__0");
					put(grammarAccess.getUnitAccess().getGroup_8_3(), "rule__Unit__Group_8_3__0");
					put(grammarAccess.getUnitAccess().getGroup_8_4(), "rule__Unit__Group_8_4__0");
					put(grammarAccess.getUnitAccess().getGroup_8_4_3(), "rule__Unit__Group_8_4_3__0");
					put(grammarAccess.getUnitAccess().getGroup_8_5(), "rule__Unit__Group_8_5__0");
					put(grammarAccess.getUnitAccess().getGroup_8_7(), "rule__Unit__Group_8_7__0");
					put(grammarAccess.getUnitAccess().getGroup_8_8(), "rule__Unit__Group_8_8__0");
					put(grammarAccess.getUnitAccess().getGroup_8_11(), "rule__Unit__Group_8_11__0");
					put(grammarAccess.getUnitAccess().getGroup_8_12(), "rule__Unit__Group_8_12__0");
					put(grammarAccess.getUnitAccess().getGroup_8_13(), "rule__Unit__Group_8_13__0");
					put(grammarAccess.getProvidedCapabilityAccess().getGroup(), "rule__ProvidedCapability__Group__0");
					put(grammarAccess.getProvidedCapabilityAccess().getGroup_1(), "rule__ProvidedCapability__Group_1__0");
					put(grammarAccess.getRequiredCapabilityAccess().getGroup(), "rule__RequiredCapability__Group__0");
					put(grammarAccess.getRequiredCapabilityAccess().getGroup_1(), "rule__RequiredCapability__Group_1__0");
					put(grammarAccess.getFilteredCapabilityAccess().getGroup(), "rule__FilteredCapability__Group__0");
					put(grammarAccess.getFilteredCapabilityAccess().getGroup_0(), "rule__FilteredCapability__Group_0__0");
					put(grammarAccess.getCapabilityAccess().getGroup(), "rule__Capability__Group__0");
					put(grammarAccess.getNamedPropertySetAccess().getGroup(), "rule__NamedPropertySet__Group__0");
					put(grammarAccess.getPropertySetAccess().getGroup(), "rule__PropertySet__Group__0");
					put(grammarAccess.getPropertySetAccess().getGroup_0(), "rule__PropertySet__Group_0__0");
					put(grammarAccess.getFilteredPropertyOperationAccess().getGroup(), "rule__FilteredPropertyOperation__Group__0");
					put(grammarAccess.getSetPropertyOperationAccess().getGroup(), "rule__SetPropertyOperation__Group__0");
					put(grammarAccess.getUnsetPropertyOperationAccess().getGroup(), "rule__UnsetPropertyOperation__Group__0");
					put(grammarAccess.getSynchronizationAccess().getGroup(), "rule__Synchronization__Group__0");
					put(grammarAccess.getSynchronizationAccess().getGroup_1(), "rule__Synchronization__Group_1__0");
					put(grammarAccess.getSynchronizedPartAccess().getGroup_0(), "rule__SynchronizedPart__Group_0__0");
					put(grammarAccess.getSynchronizedPartAccess().getGroup_0_1(), "rule__SynchronizedPart__Group_0_1__0");
					put(grammarAccess.getPathGroupAccess().getGroup(), "rule__PathGroup__Group__0");
					put(grammarAccess.getPathGroupAccess().getGroup_1(), "rule__PathGroup__Group_1__0");
					put(grammarAccess.getFilteredPathVectorAccess().getGroup(), "rule__FilteredPathVector__Group__0");
					put(grammarAccess.getBasePathVectorAccess().getGroup(), "rule__BasePathVector__Group__0");
					put(grammarAccess.getBasePathVectorAccess().getGroup_2(), "rule__BasePathVector__Group_2__0");
					put(grammarAccess.getBasePathVectorAccess().getGroup_2_1(), "rule__BasePathVector__Group_2_1__0");
					put(grammarAccess.getUnbasedPathVectorAccess().getGroup(), "rule__UnbasedPathVector__Group__0");
					put(grammarAccess.getUnbasedPathVectorAccess().getGroup_1(), "rule__UnbasedPathVector__Group_1__0");
					put(grammarAccess.getCompoundPathVectorAccess().getGroup(), "rule__CompoundPathVector__Group__0");
					put(grammarAccess.getPathAccess().getGroup_1(), "rule__Path__Group_1__0");
					put(grammarAccess.getPathAccess().getGroup_1_2(), "rule__Path__Group_1_2__0");
					put(grammarAccess.getPrerequisiteAccess().getGroup(), "rule__Prerequisite__Group__0");
					put(grammarAccess.getPrerequisiteAccess().getGroup_0(), "rule__Prerequisite__Group_0__0");
					put(grammarAccess.getPrerequisiteAccess().getGroup_3(), "rule__Prerequisite__Group_3__0");
					put(grammarAccess.getWithClauseAccess().getGroup(), "rule__WithClause__Group__0");
					put(grammarAccess.getWithClauseAccess().getGroup_2(), "rule__WithClause__Group_2__0");
					put(grammarAccess.getWithClauseAccess().getGroup_2_2(), "rule__WithClause__Group_2_2__0");
					put(grammarAccess.getWithClauseAccess().getGroup_3_0(), "rule__WithClause__Group_3_0__0");
					put(grammarAccess.getWithClauseAccess().getGroup_3_1(), "rule__WithClause__Group_3_1__0");
					put(grammarAccess.getDirectPartReferemceAccess().getGroup(), "rule__DirectPartReferemce__Group__0");
					put(grammarAccess.getCapabilityReferencedPartAccess().getGroup(), "rule__CapabilityReferencedPart__Group__0");
					put(grammarAccess.getCapabilityReferencedPartAccess().getGroup_1(), "rule__CapabilityReferencedPart__Group_1__0");
					put(grammarAccess.getCapabilityReferencedPartAccess().getGroup_2(), "rule__CapabilityReferencedPart__Group_2__0");
					put(grammarAccess.getCompoundReferencesAccess().getGroup(), "rule__CompoundReferences__Group__0");
					put(grammarAccess.getBuilderAccess().getGroup(), "rule__Builder__Group__0");
					put(grammarAccess.getBuilderAccess().getGroup_8(), "rule__Builder__Group_8__0");
					put(grammarAccess.getBuilderAccess().getGroup_9(), "rule__Builder__Group_9__0");
					put(grammarAccess.getBuilderAccess().getGroup_9_2(), "rule__Builder__Group_9_2__0");
					put(grammarAccess.getBuilderAccess().getGroup_13(), "rule__Builder__Group_13__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getParameterAccess().getGroup_0(), "rule__Parameter__Group_0__0");
					put(grammarAccess.getParameterListAccess().getGroup_0(), "rule__ParameterList__Group_0__0");
					put(grammarAccess.getParameterListAccess().getGroup_0_1(), "rule__ParameterList__Group_0_1__0");
					put(grammarAccess.getParameterDeclarationListAccess().getGroup_0(), "rule__ParameterDeclarationList__Group_0__0");
					put(grammarAccess.getParameterDeclarationListAccess().getGroup_0_1(), "rule__ParameterDeclarationList__Group_0_1__0");
					put(grammarAccess.getParameterDeclarationListAccess().getGroup_0_2(), "rule__ParameterDeclarationList__Group_0_2__0");
					put(grammarAccess.getParameterDeclarationAccess().getGroup(), "rule__ParameterDeclaration__Group__0");
					put(grammarAccess.getParameterDeclarationEllipseAccess().getGroup(), "rule__ParameterDeclarationEllipse__Group__0");
					put(grammarAccess.getBuilderOutputAccess().getGroup(), "rule__BuilderOutput__Group__0");
					put(grammarAccess.getBuilderInputAccess().getGroup(), "rule__BuilderInput__Group__0");
					put(grammarAccess.getRepositoryDeclarationAccess().getGroup(), "rule__RepositoryDeclaration__Group__0");
					put(grammarAccess.getRepositoryDeclarationAccess().getGroup_1_1(), "rule__RepositoryDeclaration__Group_1_1__0");
					put(grammarAccess.getResolutionStrategyAccess().getGroup(), "rule__ResolutionStrategy__Group__0");
					put(grammarAccess.getContainerConfigurationAccess().getGroup(), "rule__ContainerConfiguration__Group__0");
					put(grammarAccess.getConcernAccess().getGroup(), "rule__Concern__Group__0");
					put(grammarAccess.getConcernBlockAccess().getGroup(), "rule__ConcernBlock__Group__0");
					put(grammarAccess.getConcernBlockAccess().getGroup_0(), "rule__ConcernBlock__Group_0__0");
					put(grammarAccess.getConcernBlockAccess().getGroup_0_2(), "rule__ConcernBlock__Group_0_2__0");
					put(grammarAccess.getQueryAccess().getGroup(), "rule__Query__Group__0");
					put(grammarAccess.getQueryAccess().getGroup_1(), "rule__Query__Group_1__0");
					put(grammarAccess.getQueryPathAccess().getGroup(), "rule__QueryPath__Group__0");
					put(grammarAccess.getQueryPathAccess().getGroup_2(), "rule__QueryPath__Group_2__0");
					put(grammarAccess.getSelectorAccess().getGroup(), "rule__Selector__Group__0");
					put(grammarAccess.getSelectorAccess().getGroup_1(), "rule__Selector__Group_1__0");
					put(grammarAccess.getFilterAccess().getGroup(), "rule__Filter__Group__0");
					put(grammarAccess.getPreConditionAccess().getGroup(), "rule__PreCondition__Group__0");
					put(grammarAccess.getPostConditionAccess().getGroup(), "rule__PostCondition__Group__0");
					put(grammarAccess.getAssertionExpressionAccess().getGroup(), "rule__AssertionExpression__Group__0");
					put(grammarAccess.getExpressionListAccess().getGroup(), "rule__ExpressionList__Group__0");
					put(grammarAccess.getFunctionAccess().getGroup(), "rule__Function__Group__0");
					put(grammarAccess.getMethodAccess().getGroup(), "rule__Method__Group__0");
					put(grammarAccess.getFunctionOrMethodAccess().getGroup(), "rule__FunctionOrMethod__Group__0");
					put(grammarAccess.getFunctionOrMethodAccess().getGroup_8(), "rule__FunctionOrMethod__Group_8__0");
					put(grammarAccess.getFunctionOrMethodAccess().getGroup_8_2(), "rule__FunctionOrMethod__Group_8_2__0");
					put(grammarAccess.getFunctionOrMethodAccess().getGroup_9(), "rule__FunctionOrMethod__Group_9__0");
					put(grammarAccess.getFunctionOrMethodAccess().getGroup_9_1(), "rule__FunctionOrMethod__Group_9_1__0");
					put(grammarAccess.getFunctionOrMethodAccess().getGroup_9_1_1(), "rule__FunctionOrMethod__Group_9_1_1__0");
					put(grammarAccess.getFunctionOrMethodAccess().getGroup_10_0(), "rule__FunctionOrMethod__Group_10_0__0");
					put(grammarAccess.getTypeParamDeclarationAccess().getGroup(), "rule__TypeParamDeclaration__Group__0");
					put(grammarAccess.getTypeParamDeclarationAccess().getGroup_1_0(), "rule__TypeParamDeclaration__Group_1_0__0");
					put(grammarAccess.getTypeParamDeclarationAccess().getGroup_1_0_2(), "rule__TypeParamDeclaration__Group_1_0_2__0");
					put(grammarAccess.getTypeParamDeclarationAccess().getGroup_1_1(), "rule__TypeParamDeclaration__Group_1_1__0");
					put(grammarAccess.getReturnExpressionAccess().getGroup(), "rule__ReturnExpression__Group__0");
					put(grammarAccess.getAssignmentExpressionAccess().getGroup(), "rule__AssignmentExpression__Group__0");
					put(grammarAccess.getAssignmentExpressionAccess().getGroup_1(), "rule__AssignmentExpression__Group_1__0");
					put(grammarAccess.getVarDeclarationAccess().getGroup(), "rule__VarDeclaration__Group__0");
					put(grammarAccess.getSimpleTypeRefAccess().getGroup(), "rule__SimpleTypeRef__Group__0");
					put(grammarAccess.getSimpleTypeRefAccess().getGroup_1(), "rule__SimpleTypeRef__Group_1__0");
					put(grammarAccess.getSimpleTypeRefAccess().getGroup_2(), "rule__SimpleTypeRef__Group_2__0");
					put(grammarAccess.getSimpleTypeRefAccess().getGroup_2_2(), "rule__SimpleTypeRef__Group_2_2__0");
					put(grammarAccess.getClosureTypeRefAccess().getGroup(), "rule__ClosureTypeRef__Group__0");
					put(grammarAccess.getClosureTypeRefAccess().getGroup_0(), "rule__ClosureTypeRef__Group_0__0");
					put(grammarAccess.getClosureTypeRefAccess().getGroup_0_2(), "rule__ClosureTypeRef__Group_0_2__0");
					put(grammarAccess.getWildcardRefParamAccess().getGroup(), "rule__WildcardRefParam__Group__0");
					put(grammarAccess.getWildcardRefParamAccess().getGroup_1_0(), "rule__WildcardRefParam__Group_1_0__0");
					put(grammarAccess.getWildcardRefParamAccess().getGroup_1_0_2(), "rule__WildcardRefParam__Group_1_0_2__0");
					put(grammarAccess.getWildcardRefParamAccess().getGroup_1_1(), "rule__WildcardRefParam__Group_1_1__0");
					put(grammarAccess.getOrExpressionAccess().getGroup(), "rule__OrExpression__Group__0");
					put(grammarAccess.getOrExpressionAccess().getGroup_1(), "rule__OrExpression__Group_1__0");
					put(grammarAccess.getAndExpressionAccess().getGroup(), "rule__AndExpression__Group__0");
					put(grammarAccess.getAndExpressionAccess().getGroup_1(), "rule__AndExpression__Group_1__0");
					put(grammarAccess.getBitwiseExpressionAccess().getGroup(), "rule__BitwiseExpression__Group__0");
					put(grammarAccess.getBitwiseExpressionAccess().getGroup_1(), "rule__BitwiseExpression__Group_1__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup(), "rule__RelationalExpression__Group__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1(), "rule__RelationalExpression__Group_1__0");
					put(grammarAccess.getShiftExpressionAccess().getGroup(), "rule__ShiftExpression__Group__0");
					put(grammarAccess.getShiftExpressionAccess().getGroup_1(), "rule__ShiftExpression__Group_1__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup(), "rule__AdditiveExpression__Group__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1(), "rule__AdditiveExpression__Group_1__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup(), "rule__MultiplicativeExpression__Group__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1(), "rule__MultiplicativeExpression__Group_1__0");
					put(grammarAccess.getSetExpressionAccess().getGroup(), "rule__SetExpression__Group__0");
					put(grammarAccess.getSetExpressionAccess().getGroup_1(), "rule__SetExpression__Group_1__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup(), "rule__UnaryExpression__Group__0");
					put(grammarAccess.getPostopExpressionAccess().getGroup(), "rule__PostopExpression__Group__0");
					put(grammarAccess.getPostopExpressionAccess().getGroup_1(), "rule__PostopExpression__Group_1__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup(), "rule__InfixExpression__Group__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup_1_0(), "rule__InfixExpression__Group_1_0__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup_1_1(), "rule__InfixExpression__Group_1_1__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup_1_1_4(), "rule__InfixExpression__Group_1_1_4__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup_1_2(), "rule__InfixExpression__Group_1_2__0");
					put(grammarAccess.getCallExpressionAccess().getGroup(), "rule__CallExpression__Group__0");
					put(grammarAccess.getCallExpressionAccess().getGroup_1(), "rule__CallExpression__Group_1__0");
					put(grammarAccess.getWithClauseExpressionAccess().getGroup(), "rule__WithClauseExpression__Group__0");
					put(grammarAccess.getWithContextExpressionAccess().getGroup(), "rule__WithContextExpression__Group__0");
					put(grammarAccess.getWildcardExpressionAccess().getGroup(), "rule__WildcardExpression__Group__0");
					put(grammarAccess.getThrowExpressionAccess().getGroup(), "rule__ThrowExpression__Group__0");
					put(grammarAccess.getTryCatchExpressionAccess().getGroup(), "rule__TryCatchExpression__Group__0");
					put(grammarAccess.getCatchBlockAccess().getGroup(), "rule__CatchBlock__Group__0");
					put(grammarAccess.getFinallyBlockAccess().getGroup(), "rule__FinallyBlock__Group__0");
					put(grammarAccess.getSwitchExpressionAccess().getGroup(), "rule__SwitchExpression__Group__0");
					put(grammarAccess.getCaseAccess().getGroup(), "rule__Case__Group__0");
					put(grammarAccess.getBlockExpressionAccess().getGroup(), "rule__BlockExpression__Group__0");
					put(grammarAccess.getBlockExpressionAccess().getGroup_2(), "rule__BlockExpression__Group_2__0");
					put(grammarAccess.getIfExpressionAccess().getGroup(), "rule__IfExpression__Group__0");
					put(grammarAccess.getElseIfExpressionAccess().getGroup(), "rule__ElseIfExpression__Group__0");
					put(grammarAccess.getElseExpressionAccess().getGroup(), "rule__ElseExpression__Group__0");
					put(grammarAccess.getPropertyValueAccess().getGroup(), "rule__PropertyValue__Group__0");
					put(grammarAccess.getVariableValueAccess().getGroup(), "rule__VariableValue__Group__0");
					put(grammarAccess.getKeywordVariablesAccess().getGroup(), "rule__KeywordVariables__Group__0");
					put(grammarAccess.getOperationCallAccess().getGroup_0(), "rule__OperationCall__Group_0__0");
					put(grammarAccess.getOperationCallAccess().getGroup_1(), "rule__OperationCall__Group_1__0");
					put(grammarAccess.getConstructorCallExpressionAccess().getGroup(), "rule__ConstructorCallExpression__Group__0");
					put(grammarAccess.getConstructorCallExpressionAccess().getGroup_3(), "rule__ConstructorCallExpression__Group_3__0");
					put(grammarAccess.getConstructorCallExpressionAccess().getGroup_4(), "rule__ConstructorCallExpression__Group_4__0");
					put(grammarAccess.getContextAccess().getGroup(), "rule__Context__Group__0");
					put(grammarAccess.getUnitSelectorAccess().getGroup(), "rule__UnitSelector__Group__0");
					put(grammarAccess.getUnitSelectorAccess().getGroup_2(), "rule__UnitSelector__Group_2__0");
					put(grammarAccess.getUnitSelectorAccess().getGroup_2_2(), "rule__UnitSelector__Group_2_2__0");
					put(grammarAccess.getContextBlockAccess().getGroup(), "rule__ContextBlock__Group__0");
					put(grammarAccess.getExpressionStatementAccess().getGroup(), "rule__ExpressionStatement__Group__0");
					put(grammarAccess.getPropertiesStatementAccess().getGroup(), "rule__PropertiesStatement__Group__0");
					put(grammarAccess.getLiteralListAccess().getGroup_0(), "rule__LiteralList__Group_0__0");
					put(grammarAccess.getLiteralListAccess().getGroup_0_3(), "rule__LiteralList__Group_0_3__0");
					put(grammarAccess.getLiteralListAccess().getGroup_0_5(), "rule__LiteralList__Group_0_5__0");
					put(grammarAccess.getLiteralListAccess().getGroup_1(), "rule__LiteralList__Group_1__0");
					put(grammarAccess.getLiteralMapAccess().getGroup_0(), "rule__LiteralMap__Group_0__0");
					put(grammarAccess.getLiteralMapAccess().getGroup_0_3(), "rule__LiteralMap__Group_0_3__0");
					put(grammarAccess.getLiteralMapAccess().getGroup_0_5(), "rule__LiteralMap__Group_0_5__0");
					put(grammarAccess.getLiteralMapAccess().getGroup_1(), "rule__LiteralMap__Group_1__0");
					put(grammarAccess.getLiteralFunctionAccess().getGroup(), "rule__LiteralFunction__Group__0");
					put(grammarAccess.getClosureExpressionAccess().getGroup(), "rule__ClosureExpression__Group__0");
					put(grammarAccess.getClosureExpressionAccess().getGroup_0(), "rule__ClosureExpression__Group_0__0");
					put(grammarAccess.getClosureExpressionAccess().getGroup_0_1(), "rule__ClosureExpression__Group_0_1__0");
					put(grammarAccess.getFeatureAccess().getGroup(), "rule__Feature__Group__0");
					put(grammarAccess.getBooleanLiteralAccess().getGroup(), "rule__BooleanLiteral__Group__0");
					put(grammarAccess.getIntegerLiteralAccess().getGroup(), "rule__IntegerLiteral__Group__0");
					put(grammarAccess.getNullLiteralAccess().getGroup(), "rule__NullLiteral__Group__0");
					put(grammarAccess.getThisLiteralAccess().getGroup(), "rule__ThisLiteral__Group__0");
					put(grammarAccess.getSuperLiteralAccess().getGroup(), "rule__SuperLiteral__Group__0");
					put(grammarAccess.getUnitLiteralAccess().getGroup(), "rule__UnitLiteral__Group__0");
					put(grammarAccess.getStringLiteralAccess().getGroup(), "rule__StringLiteral__Group__0");
					put(grammarAccess.getRealLiteralAccess().getGroup(), "rule__RealLiteral__Group__0");
					put(grammarAccess.getRegexpLiteralAccess().getGroup(), "rule__RegexpLiteral__Group__0");
					put(grammarAccess.getQueryLiteralAccess().getGroup(), "rule__QueryLiteral__Group__0");
					put(grammarAccess.getParanthesizedExpressionAccess().getGroup(), "rule__ParanthesizedExpression__Group__0");
					put(grammarAccess.getVersionRangeLiteralAccess().getGroup_0(), "rule__VersionRangeLiteral__Group_0__0");
					put(grammarAccess.getVersionRangeLiteralAccess().getGroup_0_2(), "rule__VersionRangeLiteral__Group_0_2__0");
					put(grammarAccess.getQIDREFAccess().getGroup_0(), "rule__QIDREF__Group_0__0");
					put(grammarAccess.getQIDREFAccess().getGroup_0_0_1(), "rule__QIDREF__Group_0_0_1__0");
					put(grammarAccess.getQIDREFAccess().getGroup_0_0_1_1(), "rule__QIDREF__Group_0_0_1_1__0");
					put(grammarAccess.getQIDREFAccess().getGroup_0_1(), "rule__QIDREF__Group_0_1__0");
					put(grammarAccess.getQIDAccess().getGroup(), "rule__QID__Group__0");
					put(grammarAccess.getQIDAccess().getGroup_2(), "rule__QID__Group_2__0");
					put(grammarAccess.getCompoundNameAccess().getGroup(), "rule__CompoundName__Group__0");
					put(grammarAccess.getAlfanumSymAccess().getGroup(), "rule__AlfanumSym__Group__0");
					put(grammarAccess.getREALAccess().getGroup(), "rule__REAL__Group__0");
					put(grammarAccess.getBeeModelAccess().getImportsAssignment_0(), "rule__BeeModel__ImportsAssignment_0");
					put(grammarAccess.getBeeModelAccess().getFunctionsAssignment_1_0(), "rule__BeeModel__FunctionsAssignment_1_0");
					put(grammarAccess.getBeeModelAccess().getConcernAssignment_1_1(), "rule__BeeModel__ConcernAssignment_1_1");
					put(grammarAccess.getBeeModelAccess().getBodyAssignment_2(), "rule__BeeModel__BodyAssignment_2");
					put(grammarAccess.getImportAccess().getReexportAssignment_0(), "rule__Import__ReexportAssignment_0");
					put(grammarAccess.getImportAccess().getImporterAssignment_2(), "rule__Import__ImporterAssignment_2");
					put(grammarAccess.getImportAccess().getNameSpaceAssignment_3_1(), "rule__Import__NameSpaceAssignment_3_1");
					put(grammarAccess.getJavaImporterAccess().getNameAssignment(), "rule__JavaImporter__NameAssignment");
					put(grammarAccess.getNativeImporterAccess().getUriStringAssignment(), "rule__NativeImporter__UriStringAssignment");
					put(grammarAccess.getUnitAccess().getDocumentationAssignment_0(), "rule__Unit__DocumentationAssignment_0");
					put(grammarAccess.getUnitAccess().getExecutionModeAssignment_1(), "rule__Unit__ExecutionModeAssignment_1");
					put(grammarAccess.getUnitAccess().getNameAssignment_3(), "rule__Unit__NameAssignment_3");
					put(grammarAccess.getUnitAccess().getVersionAssignment_4_1(), "rule__Unit__VersionAssignment_4_1");
					put(grammarAccess.getUnitAccess().getImplementsAssignment_5_1(), "rule__Unit__ImplementsAssignment_5_1");
					put(grammarAccess.getUnitAccess().getImplementsAssignment_5_2_1(), "rule__Unit__ImplementsAssignment_5_2_1");
					put(grammarAccess.getUnitAccess().getDefaultPropertiesAssignment_7_2(), "rule__Unit__DefaultPropertiesAssignment_7_2");
					put(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_8_0_2_0(), "rule__Unit__ProvidedCapabilitiesAssignment_8_0_2_0");
					put(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_8_1_1(), "rule__Unit__ProvidedCapabilitiesAssignment_8_1_1");
					put(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_8_2_2_0(), "rule__Unit__RequiredCapabilitiesAssignment_8_2_2_0");
					put(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_8_3_1(), "rule__Unit__RequiredCapabilitiesAssignment_8_3_1");
					put(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_8_4_3_0(), "rule__Unit__MetaRequiredCapabilitiesAssignment_8_4_3_0");
					put(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_8_5_2(), "rule__Unit__MetaRequiredCapabilitiesAssignment_8_5_2");
					put(grammarAccess.getUnitAccess().getConcernsAssignment_8_6(), "rule__Unit__ConcernsAssignment_8_6");
					put(grammarAccess.getUnitAccess().getSynchronizationsAssignment_8_7_2(), "rule__Unit__SynchronizationsAssignment_8_7_2");
					put(grammarAccess.getUnitAccess().getSynchronizationsAssignment_8_8_1(), "rule__Unit__SynchronizationsAssignment_8_8_1");
					put(grammarAccess.getUnitAccess().getBuildersAssignment_8_9(), "rule__Unit__BuildersAssignment_8_9");
					put(grammarAccess.getUnitAccess().getMethodsAssignment_8_10(), "rule__Unit__MethodsAssignment_8_10");
					put(grammarAccess.getUnitAccess().getRepositoryConfigurationsAssignment_8_11_2(), "rule__Unit__RepositoryConfigurationsAssignment_8_11_2");
					put(grammarAccess.getUnitAccess().getPropertySetsAssignment_8_12_1(), "rule__Unit__PropertySetsAssignment_8_12_1");
					put(grammarAccess.getUnitAccess().getContainersAssignment_8_13_2(), "rule__Unit__ContainersAssignment_8_13_2");
					put(grammarAccess.getProvidedCapabilityAccess().getCapabilityAssignment_0(), "rule__ProvidedCapability__CapabilityAssignment_0");
					put(grammarAccess.getProvidedCapabilityAccess().getVersionAssignment_1_1(), "rule__ProvidedCapability__VersionAssignment_1_1");
					put(grammarAccess.getRequiredCapabilityAccess().getCapabilityAssignment_0(), "rule__RequiredCapability__CapabilityAssignment_0");
					put(grammarAccess.getRequiredCapabilityAccess().getRangeAssignment_1_1(), "rule__RequiredCapability__RangeAssignment_1_1");
					put(grammarAccess.getFilteredCapabilityAccess().getFilterAssignment_0_1(), "rule__FilteredCapability__FilterAssignment_0_1");
					put(grammarAccess.getFilteredCapabilityAccess().getCapabilityAssignment_1(), "rule__FilteredCapability__CapabilityAssignment_1");
					put(grammarAccess.getCapabilityAccess().getInterfaceAssignment_0(), "rule__Capability__InterfaceAssignment_0");
					put(grammarAccess.getCapabilityAccess().getNameAssignment_2(), "rule__Capability__NameAssignment_2");
					put(grammarAccess.getNamedPropertySetAccess().getNameAssignment_0(), "rule__NamedPropertySet__NameAssignment_0");
					put(grammarAccess.getNamedPropertySetAccess().getBodyAssignment_1(), "rule__NamedPropertySet__BodyAssignment_1");
					put(grammarAccess.getPropertySetAccess().getExtendsAssignment_0_1(), "rule__PropertySet__ExtendsAssignment_0_1");
					put(grammarAccess.getPropertySetAccess().getOperationsAssignment_2(), "rule__PropertySet__OperationsAssignment_2");
					put(grammarAccess.getFilteredPropertyOperationAccess().getFilterAssignment_1(), "rule__FilteredPropertyOperation__FilterAssignment_1");
					put(grammarAccess.getFilteredPropertyOperationAccess().getBodyAssignment_2(), "rule__FilteredPropertyOperation__BodyAssignment_2");
					put(grammarAccess.getSetPropertyOperationAccess().getFinalAssignment_0(), "rule__SetPropertyOperation__FinalAssignment_0");
					put(grammarAccess.getSetPropertyOperationAccess().getKeyAssignment_1(), "rule__SetPropertyOperation__KeyAssignment_1");
					put(grammarAccess.getSetPropertyOperationAccess().getOpAssignment_2(), "rule__SetPropertyOperation__OpAssignment_2");
					put(grammarAccess.getSetPropertyOperationAccess().getValueAssignment_3(), "rule__SetPropertyOperation__ValueAssignment_3");
					put(grammarAccess.getUnsetPropertyOperationAccess().getKeyAssignment_1(), "rule__UnsetPropertyOperation__KeyAssignment_1");
					put(grammarAccess.getSynchronizationAccess().getPartrefsAssignment_0(), "rule__Synchronization__PartrefsAssignment_0");
					put(grammarAccess.getSynchronizationAccess().getPartrefsAssignment_1_1(), "rule__Synchronization__PartrefsAssignment_1_1");
					put(grammarAccess.getPathGroupAccess().getPathsAssignment_0(), "rule__PathGroup__PathsAssignment_0");
					put(grammarAccess.getPathGroupAccess().getAnnotationsAssignment_1_1(), "rule__PathGroup__AnnotationsAssignment_1_1");
					put(grammarAccess.getFilteredPathVectorAccess().getFilterAssignment_1(), "rule__FilteredPathVector__FilterAssignment_1");
					put(grammarAccess.getFilteredPathVectorAccess().getBodyAssignment_2(), "rule__FilteredPathVector__BodyAssignment_2");
					put(grammarAccess.getBasePathVectorAccess().getBasePathAssignment_0(), "rule__BasePathVector__BasePathAssignment_0");
					put(grammarAccess.getBasePathVectorAccess().getPathsAssignment_2_0(), "rule__BasePathVector__PathsAssignment_2_0");
					put(grammarAccess.getBasePathVectorAccess().getPathsAssignment_2_1_1(), "rule__BasePathVector__PathsAssignment_2_1_1");
					put(grammarAccess.getUnbasedPathVectorAccess().getPathsAssignment_0(), "rule__UnbasedPathVector__PathsAssignment_0");
					put(grammarAccess.getUnbasedPathVectorAccess().getPathsAssignment_1_1(), "rule__UnbasedPathVector__PathsAssignment_1_1");
					put(grammarAccess.getCompoundPathVectorAccess().getBodyAssignment_1(), "rule__CompoundPathVector__BodyAssignment_1");
					put(grammarAccess.getPrerequisiteAccess().getFilterAssignment_0_1(), "rule__Prerequisite__FilterAssignment_0_1");
					put(grammarAccess.getPrerequisiteAccess().getWithClauseAssignment_1(), "rule__Prerequisite__WithClauseAssignment_1");
					put(grammarAccess.getPrerequisiteAccess().getPartReferenceAssignment_2(), "rule__Prerequisite__PartReferenceAssignment_2");
					put(grammarAccess.getPrerequisiteAccess().getAliasAssignment_3_1(), "rule__Prerequisite__AliasAssignment_3_1");
					put(grammarAccess.getWithClauseAccess().getReferencesAssignment_2_1(), "rule__WithClause__ReferencesAssignment_2_1");
					put(grammarAccess.getWithClauseAccess().getReferencesAssignment_2_2_1(), "rule__WithClause__ReferencesAssignment_2_2_1");
					put(grammarAccess.getWithClauseAccess().getPropertiesAssignment_3_0_1(), "rule__WithClause__PropertiesAssignment_3_0_1");
					put(grammarAccess.getWithClauseAccess().getConcernAssignment_3_1_1(), "rule__WithClause__ConcernAssignment_3_1_1");
					put(grammarAccess.getDirectPartReferemceAccess().getUnitAssignment_0_0(), "rule__DirectPartReferemce__UnitAssignment_0_0");
					put(grammarAccess.getDirectPartReferemceAccess().getUnitAssignment_0_1(), "rule__DirectPartReferemce__UnitAssignment_0_1");
					put(grammarAccess.getDirectPartReferemceAccess().getBuilderAssignment_2(), "rule__DirectPartReferemce__BuilderAssignment_2");
					put(grammarAccess.getDirectPartReferemceAccess().getParametersAssignment_3(), "rule__DirectPartReferemce__ParametersAssignment_3");
					put(grammarAccess.getCapabilityReferencedPartAccess().getCapabilityAssignment_0(), "rule__CapabilityReferencedPart__CapabilityAssignment_0");
					put(grammarAccess.getCapabilityReferencedPartAccess().getRangeAssignment_1_1(), "rule__CapabilityReferencedPart__RangeAssignment_1_1");
					put(grammarAccess.getCapabilityReferencedPartAccess().getPartNameAssignment_2_1(), "rule__CapabilityReferencedPart__PartNameAssignment_2_1");
					put(grammarAccess.getCapabilityReferencedPartAccess().getParametersAssignment_3(), "rule__CapabilityReferencedPart__ParametersAssignment_3");
					put(grammarAccess.getCompoundReferencesAccess().getPrerequisitesAssignment_1(), "rule__CompoundReferences__PrerequisitesAssignment_1");
					put(grammarAccess.getBuilderAccess().getDocumentationAssignment_1(), "rule__Builder__DocumentationAssignment_1");
					put(grammarAccess.getBuilderAccess().getVisibilityAssignment_2(), "rule__Builder__VisibilityAssignment_2");
					put(grammarAccess.getBuilderAccess().getExecutionModeAssignment_3(), "rule__Builder__ExecutionModeAssignment_3");
					put(grammarAccess.getBuilderAccess().getFinalAssignment_4(), "rule__Builder__FinalAssignment_4");
					put(grammarAccess.getBuilderAccess().getCachedAssignment_5(), "rule__Builder__CachedAssignment_5");
					put(grammarAccess.getBuilderAccess().getNameAssignment_7(), "rule__Builder__NameAssignment_7");
					put(grammarAccess.getBuilderAccess().getParamsAssignment_8_1(), "rule__Builder__ParamsAssignment_8_1");
					put(grammarAccess.getBuilderAccess().getProvidedCapabilitiesAssignment_9_1(), "rule__Builder__ProvidedCapabilitiesAssignment_9_1");
					put(grammarAccess.getBuilderAccess().getProvidedCapabilitiesAssignment_9_2_1(), "rule__Builder__ProvidedCapabilitiesAssignment_9_2_1");
					put(grammarAccess.getBuilderAccess().getPreConditionAssignment_10(), "rule__Builder__PreConditionAssignment_10");
					put(grammarAccess.getBuilderAccess().getPostConditionAssignment_11(), "rule__Builder__PostConditionAssignment_11");
					put(grammarAccess.getBuilderAccess().getPropertiesAssignment_13_2(), "rule__Builder__PropertiesAssignment_13_2");
					put(grammarAccess.getBuilderAccess().getInputAssignment_14(), "rule__Builder__InputAssignment_14");
					put(grammarAccess.getBuilderAccess().getOutputAssignment_15(), "rule__Builder__OutputAssignment_15");
					put(grammarAccess.getBuilderAccess().getExpressionListAssignment_16(), "rule__Builder__ExpressionListAssignment_16");
					put(grammarAccess.getParameterAccess().getNameAssignment_0_0(), "rule__Parameter__NameAssignment_0_0");
					put(grammarAccess.getParameterAccess().getValAssignment_1(), "rule__Parameter__ValAssignment_1");
					put(grammarAccess.getParameterListAccess().getParamsAssignment_0_0(), "rule__ParameterList__ParamsAssignment_0_0");
					put(grammarAccess.getParameterListAccess().getParamsAssignment_0_1_1(), "rule__ParameterList__ParamsAssignment_0_1_1");
					put(grammarAccess.getParameterListAccess().getParamsAssignment_1(), "rule__ParameterList__ParamsAssignment_1");
					put(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_0_0(), "rule__ParameterDeclarationList__ParamsAssignment_0_0");
					put(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_0_1_1(), "rule__ParameterDeclarationList__ParamsAssignment_0_1_1");
					put(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_0_2_1(), "rule__ParameterDeclarationList__ParamsAssignment_0_2_1");
					put(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_1(), "rule__ParameterDeclarationList__ParamsAssignment_1");
					put(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_0(), "rule__ParameterDeclaration__TypeAssignment_0");
					put(grammarAccess.getParameterDeclarationAccess().getNameAssignment_1(), "rule__ParameterDeclaration__NameAssignment_1");
					put(grammarAccess.getParameterDeclarationEllipseAccess().getTypeAssignment_2(), "rule__ParameterDeclarationEllipse__TypeAssignment_2");
					put(grammarAccess.getParameterDeclarationEllipseAccess().getNameAssignment_3(), "rule__ParameterDeclarationEllipse__NameAssignment_3");
					put(grammarAccess.getBuilderOutputAccess().getBodyAssignment_2(), "rule__BuilderOutput__BodyAssignment_2");
					put(grammarAccess.getBuilderInputAccess().getPreConditionAssignment_1(), "rule__BuilderInput__PreConditionAssignment_1");
					put(grammarAccess.getBuilderInputAccess().getPostConditionAssignment_2(), "rule__BuilderInput__PostConditionAssignment_2");
					put(grammarAccess.getBuilderInputAccess().getPrerequisitesAssignment_4(), "rule__BuilderInput__PrerequisitesAssignment_4");
					put(grammarAccess.getRepositoryDeclarationAccess().getDocumentationAssignment_0(), "rule__RepositoryDeclaration__DocumentationAssignment_0");
					put(grammarAccess.getRepositoryDeclarationAccess().getLocationAssignment_1_0(), "rule__RepositoryDeclaration__LocationAssignment_1_0");
					put(grammarAccess.getRepositoryDeclarationAccess().getTypeAssignment_1_1_1(), "rule__RepositoryDeclaration__TypeAssignment_1_1_1");
					put(grammarAccess.getRepositoryDeclarationAccess().getContextAssignment_2(), "rule__RepositoryDeclaration__ContextAssignment_2");
					put(grammarAccess.getResolutionStrategyAccess().getStrategyAssignment_0(), "rule__ResolutionStrategy__StrategyAssignment_0");
					put(grammarAccess.getResolutionStrategyAccess().getRepositoryConfigAssignment_2(), "rule__ResolutionStrategy__RepositoryConfigAssignment_2");
					put(grammarAccess.getContainerConfigurationAccess().getDocumentationAssignment_0(), "rule__ContainerConfiguration__DocumentationAssignment_0");
					put(grammarAccess.getContainerConfigurationAccess().getNameAssignment_2(), "rule__ContainerConfiguration__NameAssignment_2");
					put(grammarAccess.getContainerConfigurationAccess().getTypeAssignment_4(), "rule__ContainerConfiguration__TypeAssignment_4");
					put(grammarAccess.getContainerConfigurationAccess().getContextBlockAssignment_5(), "rule__ContainerConfiguration__ContextBlockAssignment_5");
					put(grammarAccess.getConcernAccess().getDocumentationAssignment_0(), "rule__Concern__DocumentationAssignment_0");
					put(grammarAccess.getConcernAccess().getNameAssignment_2(), "rule__Concern__NameAssignment_2");
					put(grammarAccess.getConcernAccess().getConcernAssignment_3(), "rule__Concern__ConcernAssignment_3");
					put(grammarAccess.getConcernBlockAccess().getSuperConcernsAssignment_0_1(), "rule__ConcernBlock__SuperConcernsAssignment_0_1");
					put(grammarAccess.getConcernBlockAccess().getSuperConcernsAssignment_0_2_1(), "rule__ConcernBlock__SuperConcernsAssignment_0_2_1");
					put(grammarAccess.getConcernBlockAccess().getContextsAssignment_2_0(), "rule__ConcernBlock__ContextsAssignment_2_0");
					put(grammarAccess.getConcernBlockAccess().getFunctionsAssignment_2_1(), "rule__ConcernBlock__FunctionsAssignment_2_1");
					put(grammarAccess.getQueryAccess().getSelectorAssignment_1_1(), "rule__Query__SelectorAssignment_1_1");
					put(grammarAccess.getQueryPathAccess().getAbsoluteAssignment_0(), "rule__QueryPath__AbsoluteAssignment_0");
					put(grammarAccess.getQueryPathAccess().getSelectorsAssignment_1(), "rule__QueryPath__SelectorsAssignment_1");
					put(grammarAccess.getQueryPathAccess().getSelectorsAssignment_2_1(), "rule__QueryPath__SelectorsAssignment_2_1");
					put(grammarAccess.getSelectorAccess().getNameAssignment_0_0(), "rule__Selector__NameAssignment_0_0");
					put(grammarAccess.getSelectorAccess().getOpAssignment_0_1(), "rule__Selector__OpAssignment_0_1");
					put(grammarAccess.getSelectorAccess().getPatternAssignment_0_2(), "rule__Selector__PatternAssignment_0_2");
					put(grammarAccess.getSelectorAccess().getPredicateAssignment_1_1(), "rule__Selector__PredicateAssignment_1_1");
					put(grammarAccess.getFilterAccess().getPredicateAssignment_1(), "rule__Filter__PredicateAssignment_1");
					put(grammarAccess.getPreConditionAccess().getAssertsAssignment_2(), "rule__PreCondition__AssertsAssignment_2");
					put(grammarAccess.getPostConditionAccess().getAssertsAssignment_2(), "rule__PostCondition__AssertsAssignment_2");
					put(grammarAccess.getAssertionExpressionAccess().getExprAssignment_1(), "rule__AssertionExpression__ExprAssignment_1");
					put(grammarAccess.getAssertionExpressionAccess().getMessageAssignment_3(), "rule__AssertionExpression__MessageAssignment_3");
					put(grammarAccess.getExpressionListAccess().getExpressionsAssignment_0(), "rule__ExpressionList__ExpressionsAssignment_0");
					put(grammarAccess.getFunctionAccess().getFuncAssignment_1(), "rule__Function__FuncAssignment_1");
					put(grammarAccess.getMethodAccess().getMethodAssignment_1(), "rule__Method__MethodAssignment_1");
					put(grammarAccess.getFunctionOrMethodAccess().getDocumentationAssignment_0(), "rule__FunctionOrMethod__DocumentationAssignment_0");
					put(grammarAccess.getFunctionOrMethodAccess().getVisibilityAssignment_1(), "rule__FunctionOrMethod__VisibilityAssignment_1");
					put(grammarAccess.getFunctionOrMethodAccess().getExecutionModeAssignment_2(), "rule__FunctionOrMethod__ExecutionModeAssignment_2");
					put(grammarAccess.getFunctionOrMethodAccess().getFinalAssignment_3(), "rule__FunctionOrMethod__FinalAssignment_3");
					put(grammarAccess.getFunctionOrMethodAccess().getCachedAssignment_4(), "rule__FunctionOrMethod__CachedAssignment_4");
					put(grammarAccess.getFunctionOrMethodAccess().getFormAssignment_5(), "rule__FunctionOrMethod__FormAssignment_5");
					put(grammarAccess.getFunctionOrMethodAccess().getTypeAssignment_6(), "rule__FunctionOrMethod__TypeAssignment_6");
					put(grammarAccess.getFunctionOrMethodAccess().getNameAssignment_7(), "rule__FunctionOrMethod__NameAssignment_7");
					put(grammarAccess.getFunctionOrMethodAccess().getTypeParamsAssignment_8_1(), "rule__FunctionOrMethod__TypeParamsAssignment_8_1");
					put(grammarAccess.getFunctionOrMethodAccess().getTypeParamsAssignment_8_2_1(), "rule__FunctionOrMethod__TypeParamsAssignment_8_2_1");
					put(grammarAccess.getFunctionOrMethodAccess().getParamsAssignment_9_1_0(), "rule__FunctionOrMethod__ParamsAssignment_9_1_0");
					put(grammarAccess.getFunctionOrMethodAccess().getParamsAssignment_9_1_1_1(), "rule__FunctionOrMethod__ParamsAssignment_9_1_1_1");
					put(grammarAccess.getFunctionOrMethodAccess().getBodyAssignment_10_0_1(), "rule__FunctionOrMethod__BodyAssignment_10_0_1");
					put(grammarAccess.getFunctionOrMethodAccess().getBodyAssignment_10_1(), "rule__FunctionOrMethod__BodyAssignment_10_1");
					put(grammarAccess.getTypeParamDeclarationAccess().getTypeAssignment_1_0_1(), "rule__TypeParamDeclaration__TypeAssignment_1_0_1");
					put(grammarAccess.getTypeParamDeclarationAccess().getTypeAssignment_1_0_2_1(), "rule__TypeParamDeclaration__TypeAssignment_1_0_2_1");
					put(grammarAccess.getTypeParamDeclarationAccess().getSuperTypeAssignment_1_1_1(), "rule__TypeParamDeclaration__SuperTypeAssignment_1_1_1");
					put(grammarAccess.getReturnExpressionAccess().getExprAssignment_2(), "rule__ReturnExpression__ExprAssignment_2");
					put(grammarAccess.getAssignmentExpressionAccess().getOpAssignment_1_1(), "rule__AssignmentExpression__OpAssignment_1_1");
					put(grammarAccess.getAssignmentExpressionAccess().getRightAssignment_1_2(), "rule__AssignmentExpression__RightAssignment_1_2");
					put(grammarAccess.getVarDeclarationAccess().getTypeAssignment_1_1(), "rule__VarDeclaration__TypeAssignment_1_1");
					put(grammarAccess.getVarDeclarationAccess().getNameAssignment_2(), "rule__VarDeclaration__NameAssignment_2");
					put(grammarAccess.getSimpleTypeRefAccess().getTypeNameAssignment_0(), "rule__SimpleTypeRef__TypeNameAssignment_0");
					put(grammarAccess.getSimpleTypeRefAccess().getTypeNameAssignment_1_1(), "rule__SimpleTypeRef__TypeNameAssignment_1_1");
					put(grammarAccess.getSimpleTypeRefAccess().getRuleTypeParameterAssignment_2_1(), "rule__SimpleTypeRef__RuleTypeParameterAssignment_2_1");
					put(grammarAccess.getSimpleTypeRefAccess().getRuleTypeParameterAssignment_2_2_1(), "rule__SimpleTypeRef__RuleTypeParameterAssignment_2_2_1");
					put(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_0_1(), "rule__ClosureTypeRef__ParameterTypesAssignment_0_1");
					put(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_0_2_1(), "rule__ClosureTypeRef__ParameterTypesAssignment_0_2_1");
					put(grammarAccess.getClosureTypeRefAccess().getReturnTypeAssignment_2(), "rule__ClosureTypeRef__ReturnTypeAssignment_2");
					put(grammarAccess.getWildcardRefParamAccess().getExtendsAssignment_1_0_1(), "rule__WildcardRefParam__ExtendsAssignment_1_0_1");
					put(grammarAccess.getWildcardRefParamAccess().getExtendsAssignment_1_0_2_1(), "rule__WildcardRefParam__ExtendsAssignment_1_0_2_1");
					put(grammarAccess.getWildcardRefParamAccess().getSuperRefAssignment_1_1_1(), "rule__WildcardRefParam__SuperRefAssignment_1_1_1");
					put(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1(), "rule__OrExpression__OperatorAssignment_1_1");
					put(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2(), "rule__OrExpression__RightAssignment_1_2");
					put(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1(), "rule__AndExpression__OperatorAssignment_1_1");
					put(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2(), "rule__AndExpression__RightAssignment_1_2");
					put(grammarAccess.getBitwiseExpressionAccess().getNameAssignment_1_1(), "rule__BitwiseExpression__NameAssignment_1_1");
					put(grammarAccess.getBitwiseExpressionAccess().getParamsAssignment_1_2(), "rule__BitwiseExpression__ParamsAssignment_1_2");
					put(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1(), "rule__RelationalExpression__OperatorAssignment_1_1");
					put(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2(), "rule__RelationalExpression__RightAssignment_1_2");
					put(grammarAccess.getShiftExpressionAccess().getNameAssignment_1_1(), "rule__ShiftExpression__NameAssignment_1_1");
					put(grammarAccess.getShiftExpressionAccess().getParamsAssignment_1_2(), "rule__ShiftExpression__ParamsAssignment_1_2");
					put(grammarAccess.getAdditiveExpressionAccess().getNameAssignment_1_1(), "rule__AdditiveExpression__NameAssignment_1_1");
					put(grammarAccess.getAdditiveExpressionAccess().getParamsAssignment_1_2(), "rule__AdditiveExpression__ParamsAssignment_1_2");
					put(grammarAccess.getMultiplicativeExpressionAccess().getNameAssignment_1_1(), "rule__MultiplicativeExpression__NameAssignment_1_1");
					put(grammarAccess.getMultiplicativeExpressionAccess().getParamsAssignment_1_2(), "rule__MultiplicativeExpression__ParamsAssignment_1_2");
					put(grammarAccess.getSetExpressionAccess().getOpAssignment_1_1(), "rule__SetExpression__OpAssignment_1_1");
					put(grammarAccess.getSetExpressionAccess().getParamsAssignment_1_2(), "rule__SetExpression__ParamsAssignment_1_2");
					put(grammarAccess.getUnaryExpressionAccess().getNameAssignment_1(), "rule__UnaryExpression__NameAssignment_1");
					put(grammarAccess.getUnaryExpressionAccess().getParamsAssignment_2(), "rule__UnaryExpression__ParamsAssignment_2");
					put(grammarAccess.getPostopExpressionAccess().getNameAssignment_1_1(), "rule__PostopExpression__NameAssignment_1_1");
					put(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2(), "rule__InfixExpression__NameAssignment_1_0_2");
					put(grammarAccess.getInfixExpressionAccess().getParametersAssignment_1_0_4(), "rule__InfixExpression__ParametersAssignment_1_0_4");
					put(grammarAccess.getInfixExpressionAccess().getIndexAssignment_1_1_2(), "rule__InfixExpression__IndexAssignment_1_1_2");
					put(grammarAccess.getInfixExpressionAccess().getParametersAssignment_1_1_4_1(), "rule__InfixExpression__ParametersAssignment_1_1_4_1");
					put(grammarAccess.getInfixExpressionAccess().getTypeAssignment_1_2_2(), "rule__InfixExpression__TypeAssignment_1_2_2");
					put(grammarAccess.getCallExpressionAccess().getParametersAssignment_1_2(), "rule__CallExpression__ParametersAssignment_1_2");
					put(grammarAccess.getWithClauseExpressionAccess().getWithclauseAssignment_1(), "rule__WithClauseExpression__WithclauseAssignment_1");
					put(grammarAccess.getWithClauseExpressionAccess().getExprAssignment_2(), "rule__WithClauseExpression__ExprAssignment_2");
					put(grammarAccess.getWithContextExpressionAccess().getContextAssignment_3(), "rule__WithContextExpression__ContextAssignment_3");
					put(grammarAccess.getWithContextExpressionAccess().getExprAssignment_4(), "rule__WithContextExpression__ExprAssignment_4");
					put(grammarAccess.getThrowExpressionAccess().getExprAssignment_2(), "rule__ThrowExpression__ExprAssignment_2");
					put(grammarAccess.getTryCatchExpressionAccess().getTryBlockAssignment_1(), "rule__TryCatchExpression__TryBlockAssignment_1");
					put(grammarAccess.getTryCatchExpressionAccess().getCatchAssignment_2(), "rule__TryCatchExpression__CatchAssignment_2");
					put(grammarAccess.getTryCatchExpressionAccess().getFinallyAssignment_3(), "rule__TryCatchExpression__FinallyAssignment_3");
					put(grammarAccess.getCatchBlockAccess().getTypeAssignment_1(), "rule__CatchBlock__TypeAssignment_1");
					put(grammarAccess.getCatchBlockAccess().getVarAssignment_2(), "rule__CatchBlock__VarAssignment_2");
					put(grammarAccess.getCatchBlockAccess().getExprAssignment_4(), "rule__CatchBlock__ExprAssignment_4");
					put(grammarAccess.getFinallyBlockAccess().getExprAssignment_1(), "rule__FinallyBlock__ExprAssignment_1");
					put(grammarAccess.getSwitchExpressionAccess().getSwitchExprAssignment_1(), "rule__SwitchExpression__SwitchExprAssignment_1");
					put(grammarAccess.getSwitchExpressionAccess().getCaseAssignment_2(), "rule__SwitchExpression__CaseAssignment_2");
					put(grammarAccess.getCaseAccess().getConditionAssignment_1(), "rule__Case__ConditionAssignment_1");
					put(grammarAccess.getCaseAccess().getExprAssignment_3(), "rule__Case__ExprAssignment_3");
					put(grammarAccess.getBlockExpressionAccess().getExprAssignment_2_0(), "rule__BlockExpression__ExprAssignment_2_0");
					put(grammarAccess.getIfExpressionAccess().getCondAssignment_2(), "rule__IfExpression__CondAssignment_2");
					put(grammarAccess.getIfExpressionAccess().getValueAssignment_4(), "rule__IfExpression__ValueAssignment_4");
					put(grammarAccess.getIfExpressionAccess().getTailAssignment_5(), "rule__IfExpression__TailAssignment_5");
					put(grammarAccess.getIfExpressionAccess().getTailAssignment_6(), "rule__IfExpression__TailAssignment_6");
					put(grammarAccess.getElseIfExpressionAccess().getConditionAssignment_2(), "rule__ElseIfExpression__ConditionAssignment_2");
					put(grammarAccess.getElseIfExpressionAccess().getValueAssignment_4(), "rule__ElseIfExpression__ValueAssignment_4");
					put(grammarAccess.getElseExpressionAccess().getValueAssignment_2(), "rule__ElseExpression__ValueAssignment_2");
					put(grammarAccess.getPropertyValueAccess().getNameAssignment_1(), "rule__PropertyValue__NameAssignment_1");
					put(grammarAccess.getVariableValueAccess().getNameAssignment_1(), "rule__VariableValue__NameAssignment_1");
					put(grammarAccess.getKeywordVariablesAccess().getNameAssignment_1(), "rule__KeywordVariables__NameAssignment_1");
					put(grammarAccess.getOperationCallAccess().getNameAssignment_0_0(), "rule__OperationCall__NameAssignment_0_0");
					put(grammarAccess.getOperationCallAccess().getParametersAssignment_0_2(), "rule__OperationCall__ParametersAssignment_0_2");
					put(grammarAccess.getOperationCallAccess().getTargetAssignment_1_0(), "rule__OperationCall__TargetAssignment_1_0");
					put(grammarAccess.getOperationCallAccess().getNameAssignment_1_2(), "rule__OperationCall__NameAssignment_1_2");
					put(grammarAccess.getOperationCallAccess().getParametersAssignment_1_4(), "rule__OperationCall__ParametersAssignment_1_4");
					put(grammarAccess.getConstructorCallExpressionAccess().getNameAssignment_1(), "rule__ConstructorCallExpression__NameAssignment_1");
					put(grammarAccess.getConstructorCallExpressionAccess().getTargetAssignment_2(), "rule__ConstructorCallExpression__TargetAssignment_2");
					put(grammarAccess.getConstructorCallExpressionAccess().getParametersAssignment_3_1(), "rule__ConstructorCallExpression__ParametersAssignment_3_1");
					put(grammarAccess.getConstructorCallExpressionAccess().getAliasAssignment_4_1(), "rule__ConstructorCallExpression__AliasAssignment_4_1");
					put(grammarAccess.getConstructorCallExpressionAccess().getContextBlockAssignment_5(), "rule__ConstructorCallExpression__ContextBlockAssignment_5");
					put(grammarAccess.getContextAccess().getSelectorAssignment_1(), "rule__Context__SelectorAssignment_1");
					put(grammarAccess.getContextAccess().getBlockAssignment_2(), "rule__Context__BlockAssignment_2");
					put(grammarAccess.getTypeRefSelectorAccess().getTypeAssignment(), "rule__TypeRefSelector__TypeAssignment");
					put(grammarAccess.getExpressionSelectorAccess().getExprAssignment(), "rule__ExpressionSelector__ExprAssignment");
					put(grammarAccess.getUnitSelectorAccess().getInterfaceAssignment_1(), "rule__UnitSelector__InterfaceAssignment_1");
					put(grammarAccess.getUnitSelectorAccess().getNameAssignment_2_1_0(), "rule__UnitSelector__NameAssignment_2_1_0");
					put(grammarAccess.getUnitSelectorAccess().getNamePatternAssignment_2_1_1(), "rule__UnitSelector__NamePatternAssignment_2_1_1");
					put(grammarAccess.getUnitSelectorAccess().getVersionRangeAssignment_2_2_1(), "rule__UnitSelector__VersionRangeAssignment_2_2_1");
					put(grammarAccess.getContextBlockAccess().getStatementsAssignment_1_0(), "rule__ContextBlock__StatementsAssignment_1_0");
					put(grammarAccess.getContextBlockAccess().getStatementsAssignment_1_1(), "rule__ContextBlock__StatementsAssignment_1_1");
					put(grammarAccess.getContextBlockAccess().getStatementsAssignment_1_2(), "rule__ContextBlock__StatementsAssignment_1_2");
					put(grammarAccess.getContextBlockAccess().getStatementsAssignment_1_3(), "rule__ContextBlock__StatementsAssignment_1_3");
					put(grammarAccess.getExpressionStatementAccess().getValAssignment_1(), "rule__ExpressionStatement__ValAssignment_1");
					put(grammarAccess.getPropertiesStatementAccess().getPropertiesAssignment_2(), "rule__PropertiesStatement__PropertiesAssignment_2");
					put(grammarAccess.getLiteralListAccess().getElementAssignment_0_2(), "rule__LiteralList__ElementAssignment_0_2");
					put(grammarAccess.getLiteralListAccess().getElementAssignment_0_3_1(), "rule__LiteralList__ElementAssignment_0_3_1");
					put(grammarAccess.getLiteralListAccess().getTypeAssignment_0_5_1(), "rule__LiteralList__TypeAssignment_0_5_1");
					put(grammarAccess.getLiteralListAccess().getTypeAssignment_1_4(), "rule__LiteralList__TypeAssignment_1_4");
					put(grammarAccess.getLiteralMapAccess().getFeaturesAssignment_0_2(), "rule__LiteralMap__FeaturesAssignment_0_2");
					put(grammarAccess.getLiteralMapAccess().getFeaturesAssignment_0_3_1(), "rule__LiteralMap__FeaturesAssignment_0_3_1");
					put(grammarAccess.getLiteralMapAccess().getKeyTypeAssignment_0_5_1(), "rule__LiteralMap__KeyTypeAssignment_0_5_1");
					put(grammarAccess.getLiteralMapAccess().getValTypeAssignment_0_5_3(), "rule__LiteralMap__ValTypeAssignment_0_5_3");
					put(grammarAccess.getLiteralMapAccess().getKeyTypeAssignment_1_4(), "rule__LiteralMap__KeyTypeAssignment_1_4");
					put(grammarAccess.getLiteralMapAccess().getValTypeAssignment_1_6(), "rule__LiteralMap__ValTypeAssignment_1_6");
					put(grammarAccess.getLiteralFunctionAccess().getClosureAssignment_2(), "rule__LiteralFunction__ClosureAssignment_2");
					put(grammarAccess.getClosureExpressionAccess().getParametersAssignment_0_0(), "rule__ClosureExpression__ParametersAssignment_0_0");
					put(grammarAccess.getClosureExpressionAccess().getParametersAssignment_0_1_1(), "rule__ClosureExpression__ParametersAssignment_0_1_1");
					put(grammarAccess.getClosureExpressionAccess().getExprAssignment_2(), "rule__ClosureExpression__ExprAssignment_2");
					put(grammarAccess.getFeatureAccess().getNameAssignment_1(), "rule__Feature__NameAssignment_1");
					put(grammarAccess.getFeatureAccess().getValueAssignment_3(), "rule__Feature__ValueAssignment_3");
					put(grammarAccess.getBooleanLiteralAccess().getValAssignment_1(), "rule__BooleanLiteral__ValAssignment_1");
					put(grammarAccess.getIntegerLiteralAccess().getValAssignment_1(), "rule__IntegerLiteral__ValAssignment_1");
					put(grammarAccess.getNullLiteralAccess().getValAssignment_1(), "rule__NullLiteral__ValAssignment_1");
					put(grammarAccess.getThisLiteralAccess().getValAssignment_1(), "rule__ThisLiteral__ValAssignment_1");
					put(grammarAccess.getSuperLiteralAccess().getValAssignment_1(), "rule__SuperLiteral__ValAssignment_1");
					put(grammarAccess.getUnitLiteralAccess().getValAssignment_1(), "rule__UnitLiteral__ValAssignment_1");
					put(grammarAccess.getStringLiteralAccess().getValAssignment_1(), "rule__StringLiteral__ValAssignment_1");
					put(grammarAccess.getRealLiteralAccess().getValAssignment_1(), "rule__RealLiteral__ValAssignment_1");
					put(grammarAccess.getRegexpLiteralAccess().getValAssignment_1(), "rule__RegexpLiteral__ValAssignment_1");
					put(grammarAccess.getQueryLiteralAccess().getValAssignment_1(), "rule__QueryLiteral__ValAssignment_1");
					put(grammarAccess.getVersionAccess().getVersionAssignment(), "rule__Version__VersionAssignment");
					put(grammarAccess.getVersionRangeAccess().getRangeAssignment(), "rule__VersionRange__RangeAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangParser typedParser = (org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangParser) parser;
			typedParser.entryRuleBeeModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] {  };
	}
	
	public BeeLangGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(BeeLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
