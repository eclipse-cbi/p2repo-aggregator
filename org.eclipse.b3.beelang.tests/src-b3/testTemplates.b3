use java.io.PrintStream;
use java.io.ByteArrayOutputStream;
use java.lang.System;

function main(List argv) {
	testHTMLTemplate();
	testHTMLTemplate2();
	testHTMLTemplate3();
}
function testHTMLTemplate() {
	val r = new ByteArrayOutputStream();
	var t = «<p>a paragraph of html text
	<ul>«{
		(0..3).collect(x| «<li>bullet #«{x}»</li>
	»)
	}»</ul>
</p>»;
	print(t, new PrintStream(r));
	val expected = "<p>a paragraph of html text\n\t<ul><li>bullet #0</li>\n\t<li>bullet #1</li>\n\t<li>bullet #2</li>\n\t<li>bullet #3</li>\n\t</ul>\n</p>";
	assertEquals("Template result is correct",expected, r.toString());
}
function testHTMLTemplate2() {
	val r = new ByteArrayOutputStream();
	Integer a = 1;
	var t = «<p>a paragraph of html text
	<ul>«{
		(0..3).collect(Integer x| «<li>bullet #«{a, a += x+a}»</li>
	»)
	}»</ul>
</p>»;
	print(t, new PrintStream(r));
	val expected = "<p>a paragraph of html text\n\t<ul><li>bullet #1</li>\n\t<li>bullet #2</li>\n\t<li>bullet #5</li>\n\t<li>bullet #12</li>\n\t</ul>\n</p>";
	assertEquals("Template result is correct",expected, r.toString());
	assertEquals("Modified variable check", 27, a);
}
function testHTMLTemplate3() {
	val r = new ByteArrayOutputStream();
	Integer a = 0;
	var t = «<p>a paragraph of html text«{,a=1}»
	<ul>«{
		(0..3).collect(Integer x| «<li>bullet #«{a, a += x+a}»</li>
	»)
	}»</ul>
</p>»;
	print(t, new PrintStream(r));
	val expected = "<p>a paragraph of html text\n\t<ul><li>bullet #1</li>\n\t<li>bullet #2</li>\n\t<li>bullet #5</li>\n\t<li>bullet #12</li>\n\t</ul>\n</p>";
	assertEquals("Template result is correct",expected, r.toString());
	assertEquals("Modified variable check", 27, a);
}