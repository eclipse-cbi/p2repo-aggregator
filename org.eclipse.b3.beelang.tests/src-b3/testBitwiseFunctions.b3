import java.lang.Object;
import java.util.List;
import java.lang.Number;

/** Assert function returns true */
function Object main(List argv) {
	testBitwiseFunctions();
}
function Object testBitwiseFunctions() {
	// bitwise operators deprecated in b3 language - use function form instead
	assertEquals("0x1 | 0x2 == 0x3", 0x3, 0x1.bitwiseOr(0x2));
	assertEquals("0x7 & 0x2 == 0x2", 0x2, 0x7.bitwiseAnd(0x2));
	assertEquals("0x2 ^ 0x1 == 0x3", 0x3, 0x2.bitwiseXor(0x1));
	assertEquals("0x4 >> 1 == 0x2", 0x2, 0x4.bitwiseRightShift(1));
	assertEquals("0x2 << 1 == 0x4", 0x4, 0x2.bitwiseLeftShift(1));
	assertEquals("0x4 >>> 1 == 0x2", 0x2, 0x4.bitwiseUnsignedRightShift(1));
	assertEquals("-0x4 >>> 1 == 2147483646", 2147483646, (-0x4).bitwiseUnsignedRightShift(1));
	assertEquals("-0x4 >>> 1 == 2147483646", 2147483646, bitwiseUnsignedRightShift(-0x4, 1));
	assertEquals("-0x4 >> 1 == -0x2", -0x2, -0x4.bitwiseRightShift(1));
	assertEquals("~0x2 == -0x3", -0x3, 0x2.bitwiseComplement());	
}