// TODO: Test new model::class (parameters?)
import java.util.List;
import java.lang.StringBuffer;
import java.util.HashMap;
import java.lang.Float;
import java.lang.Object;

function main(List argv) {
	testNew();
	testNewWithConstructorBlock();
}
function testNew() {
	var x = new StringBuffer();
	x.append("hello");
	assertEquals("string buffer and string compare", "hello", x);
	assertEquals("converting buffer to string & compare", "hello", x.toString());
	
	// no parenthesis needed if there are no parameters.
	var y = new StringBuffer;
	y.append("hello");
	assertEquals("string buffer and string compare", "hello", y);
	
	var z = new StringBuffer(10);
	z.append("hello");
	assertEquals("string buffer and string compare", "hello", z);
	
	var hm = new HashMap(10, new Float(2.floatValue()));
	assertType("A hashmap should have been created", HashMap, hm);
}
function testNewWithConstructorBlock() {
	var hm = new HashMap as theMap {
		assertTrue("access to instance context 'empty'", empty);
		// TODO: This stupid construction is required because the system context
		// only looks for the declared types in the method signature...
		// it should search for the best method !!
		// See: https://bugs.eclipse.org/bugs/show_bug.cgi?id=297661
		Object key = 'dear tester';
		Object value = 'have a cigarr';
		theMap.put(key, value);
		assertFalse("instance value 'empty' should be false", empty);
		};
}