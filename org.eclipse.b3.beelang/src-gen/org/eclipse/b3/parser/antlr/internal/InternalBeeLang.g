/*
* generated by Xtext
*/
grammar InternalBeeLang;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package org.eclipse.b3.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.b3.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.eclipse.b3.services.BeeLangGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private BeeLangGrammarAccess grammarAccess;
 	
    public InternalBeeLangParser(TokenStream input, IAstFactory factory, BeeLangGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/eclipse/b3/parser/antlr/internal/InternalBeeLang.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "BeeModel";	
   	}
   	
   	@Override
   	protected BeeLangGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleBeeModel
entryRuleBeeModel returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
	}
	:
	{ currentNode = createCompositeNode(grammarAccess.getBeeModelRule(), currentNode); }
	 iv_ruleBeeModel=ruleBeeModel 
	 { $current=$iv_ruleBeeModel.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BeeModel
ruleBeeModel returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBeeModelAccess().getBeeModelAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBeeModelAccess().getBeeModelAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBeeModelAccess().getImportsImportParserRuleCall_1_0(), currentNode); 
	    }
		lv_imports_1_0=ruleImport		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBeeModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"imports",
	        		lv_imports_1_0, 
	        		"Import", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBeeModelAccess().getFunctionsFunctionParserRuleCall_2_0_0(), currentNode); 
	    }
		lv_functions_2_0=ruleFunction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBeeModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"functions",
	        		lv_functions_2_0, 
	        		"Function", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBeeModelAccess().getConcernsConcern_NamedParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_concerns_3_0=ruleConcern_Named		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBeeModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"concerns",
	        		lv_concerns_3_0, 
	        		"Concern_Named", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBeeModelAccess().getPropertySetsPropertySet_NamedParserRuleCall_2_2_0(), currentNode); 
	    }
		lv_propertySets_4_0=rulePropertySet_Named		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBeeModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"propertySets",
	        		lv_propertySets_4_0, 
	        		"PropertySet_Named", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBeeModelAccess().getBuildUnitsBuildUnitParserRuleCall_2_3_0(), currentNode); 
	    }
		lv_buildUnits_5_0=ruleBuildUnit		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBeeModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"buildUnits",
	        		lv_buildUnits_5_0, 
	        		"BuildUnit", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBeeModelAccess().getProvidersTopLevelUnitProviderParserRuleCall_2_4_0(), currentNode); 
	    }
		lv_providers_6_0=ruleTopLevelUnitProvider		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBeeModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providers",
	        		lv_providers_6_0, 
	        		"TopLevelUnitProvider", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBeeModelAccess().getRepositoriesRepositoryParserRuleCall_2_5_0(), currentNode); 
	    }
		lv_repositories_7_0=ruleRepository		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBeeModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"repositories",
	        		lv_repositories_7_0, 
	        		"Repository", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBeeModelAccess().getDefaultPropertiesPropertySetDefaultParserRuleCall_2_6_0(), currentNode); 
	    }
		lv_defaultProperties_8_0=rulePropertySetDefault		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBeeModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"defaultProperties",
	        		lv_defaultProperties_8_0, 
	        		"PropertySetDefault", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getImportRule(), currentNode); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getImportAccess().getB3JavaImportAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getImportAccess().getB3JavaImportAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_reexport_1_0=	'reexport' 
    {
        createLeafNode(grammarAccess.getImportAccess().getReexportReexportKeyword_1_0(), "reexport"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImportRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "reexport", true, "reexport", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'import' 
    {
        createLeafNode(grammarAccess.getImportAccess().getImportKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImportAccess().getQualifiedNameQIDParserRuleCall_3_0(), currentNode); 
	    }
		lv_qualifiedName_3_0=ruleQID		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImportRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"qualifiedName",
	        		lv_qualifiedName_3_0, 
	        		"QID", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'as' 
    {
        createLeafNode(grammarAccess.getImportAccess().getAsKeyword_4_0(), null); 
    }
(
(
		lv_name_5_0=RULE_ID
		{
			createLeafNode(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_4_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImportRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_5_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	';' 
    {
        createLeafNode(grammarAccess.getImportAccess().getSemicolonKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleBuildUnit
entryRuleBuildUnit returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
	}
	:
	{ currentNode = createCompositeNode(grammarAccess.getBuildUnitRule(), currentNode); }
	 iv_ruleBuildUnit=ruleBuildUnit 
	 { $current=$iv_ruleBuildUnit.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BuildUnit
ruleBuildUnit returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBuildUnitAccess().getBuildUnitAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBuildUnitAccess().getBuildUnitAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_documentation_1_0=RULE_DOCUMENTATION
		{
			createLeafNode(grammarAccess.getBuildUnitAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"documentation",
	        		lv_documentation_1_0, 
	        		"DOCUMENTATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getExecutionModeExecutionModeEnumRuleCall_2_0(), currentNode); 
	    }
		lv_executionMode_2_0=ruleExecutionMode		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"executionMode",
	        		lv_executionMode_2_0, 
	        		"ExecutionMode", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'unit' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getUnitKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getNameUnitNameParserRuleCall_4_0(), currentNode); 
	    }
		lv_name_4_0=ruleUnitName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"UnitName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(	'version' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getVersionKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getVersionVersionLiteralParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_version_6_0=ruleVersionLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"version",
	        		lv_version_6_0, 
	        		"VersionLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'implements' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getImplementsKeyword_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getImplementsSimpleTypeRefParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_implements_8_0=ruleSimpleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"implements",
	        		lv_implements_8_0, 
	        		"SimpleTypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getCommaKeyword_6_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getImplementsSimpleTypeRefParserRuleCall_6_2_1_0(), currentNode); 
	    }
		lv_implements_10_0=ruleSimpleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"implements",
	        		lv_implements_10_0, 
	        		"SimpleTypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getLeftCurlyBracketKeyword_7(), null); 
    }
((	'source' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getSourceKeyword_8_0_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getColonKeyword_8_0_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getSourceLocationPathParserRuleCall_8_0_2_0(), currentNode); 
	    }
		lv_sourceLocation_14_0=rulePath		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"sourceLocation",
	        		lv_sourceLocation_14_0, 
	        		"Path", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getSemicolonKeyword_8_0_3(), null); 
    }
)
    |(	'output' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getOutputKeyword_8_1_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getColonKeyword_8_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getOutputLocationPathParserRuleCall_8_1_2_0(), currentNode); 
	    }
		lv_outputLocation_18_0=rulePath		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"outputLocation",
	        		lv_outputLocation_18_0, 
	        		"Path", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getSemicolonKeyword_8_1_3(), null); 
    }
)
    |(	'provides' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getProvidesKeyword_8_2_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getColonKeyword_8_2_1(), null); 
    }
((	'[' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getLeftSquareBracketKeyword_8_2_2_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_8_2_2_0_1_0(), currentNode); 
	    }
		lv_providedCapabilities_23_0=ruleProvidedCapability		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providedCapabilities",
	        		lv_providedCapabilities_23_0, 
	        		"ProvidedCapability", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getCommaKeyword_8_2_2_0_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_8_2_2_0_2_1_0(), currentNode); 
	    }
		lv_providedCapabilities_25_0=ruleProvidedCapability		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providedCapabilities",
	        		lv_providedCapabilities_25_0, 
	        		"ProvidedCapability", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getRightSquareBracketKeyword_8_2_2_0_3(), null); 
    }
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_8_2_2_1_0(), currentNode); 
	    }
		lv_providedCapabilities_27_0=ruleProvidedCapability		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providedCapabilities",
	        		lv_providedCapabilities_27_0, 
	        		"ProvidedCapability", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	';' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getSemicolonKeyword_8_2_3(), null); 
    }
)
    |(	'requires' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getRequiresKeyword_8_3_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getColonKeyword_8_3_1(), null); 
    }
((	'[' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getLeftSquareBracketKeyword_8_3_2_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_8_3_2_0_1_0(), currentNode); 
	    }
		lv_requiredCapabilities_32_0=ruleAliasedRequiredCapability		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"requiredCapabilities",
	        		lv_requiredCapabilities_32_0, 
	        		"AliasedRequiredCapability", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getCommaKeyword_8_3_2_0_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_8_3_2_0_2_1_0(), currentNode); 
	    }
		lv_requiredCapabilities_34_0=ruleAliasedRequiredCapability		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"requiredCapabilities",
	        		lv_requiredCapabilities_34_0, 
	        		"AliasedRequiredCapability", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getRightSquareBracketKeyword_8_3_2_0_3(), null); 
    }
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_8_3_2_1_0(), currentNode); 
	    }
		lv_requiredCapabilities_36_0=ruleAliasedRequiredCapability		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"requiredCapabilities",
	        		lv_requiredCapabilities_36_0, 
	        		"AliasedRequiredCapability", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	';' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getSemicolonKeyword_8_3_3(), null); 
    }
)
    |(	'requires' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getRequiresKeyword_8_4_0(), null); 
    }
	'env' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getEnvKeyword_8_4_1(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getColonKeyword_8_4_2(), null); 
    }
((	'[' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getLeftSquareBracketKeyword_8_4_3_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_8_4_3_0_1_0(), currentNode); 
	    }
		lv_metaRequiredCapabilities_42_0=ruleRequiredCapability		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"metaRequiredCapabilities",
	        		lv_metaRequiredCapabilities_42_0, 
	        		"RequiredCapability", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getCommaKeyword_8_4_3_0_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_8_4_3_0_2_1_0(), currentNode); 
	    }
		lv_metaRequiredCapabilities_44_0=ruleRequiredCapability		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"metaRequiredCapabilities",
	        		lv_metaRequiredCapabilities_44_0, 
	        		"RequiredCapability", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getRightSquareBracketKeyword_8_4_3_0_3(), null); 
    }
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_8_4_3_1_0(), currentNode); 
	    }
		lv_metaRequiredCapabilities_46_0=ruleRequiredCapability		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"metaRequiredCapabilities",
	        		lv_metaRequiredCapabilities_46_0, 
	        		"RequiredCapability", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	';' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getSemicolonKeyword_8_4_4(), null); 
    }
)
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getFunctionsBuilderParserRuleCall_8_5_0_0(), currentNode); 
	    }
		lv_functions_48_0=ruleBuilder		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"functions",
	        		lv_functions_48_0, 
	        		"Builder", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getFunctionsFunctionParserRuleCall_8_5_1_0(), currentNode); 
	    }
		lv_functions_49_0=ruleFunction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"functions",
	        		lv_functions_49_0, 
	        		"Function", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getProvidersTopLevelUnitProviderParserRuleCall_8_6_0(), currentNode); 
	    }
		lv_providers_50_0=ruleTopLevelUnitProvider		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providers",
	        		lv_providers_50_0, 
	        		"TopLevelUnitProvider", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getConcernsConcern_NamedParserRuleCall_8_7_0(), currentNode); 
	    }
		lv_concerns_51_0=ruleConcern_Named		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"concerns",
	        		lv_concerns_51_0, 
	        		"Concern_Named", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getPropertySetsPropertySet_NamedParserRuleCall_8_8_0(), currentNode); 
	    }
		lv_propertySets_52_0=rulePropertySet_Named		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"propertySets",
	        		lv_propertySets_52_0, 
	        		"PropertySet_Named", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getContainersContainerConfigurationParserRuleCall_8_9_0_0(), currentNode); 
	    }
		lv_containers_53_0=ruleContainerConfiguration		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"containers",
	        		lv_containers_53_0, 
	        		"ContainerConfiguration", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getSemicolonKeyword_8_9_1(), null); 
    }
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getSynchronizationsSynchronizationParserRuleCall_8_10_0(), currentNode); 
	    }
		lv_synchronizations_55_0=ruleSynchronization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"synchronizations",
	        		lv_synchronizations_55_0, 
	        		"Synchronization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getRepositoriesRepositoryParserRuleCall_8_11_0(), currentNode); 
	    }
		lv_repositories_56_0=ruleRepository		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"repositories",
	        		lv_repositories_56_0, 
	        		"Repository", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuildUnitAccess().getDefaultPropertiesPropertySetDefaultParserRuleCall_8_12_0(), currentNode); 
	    }
		lv_defaultProperties_57_0=rulePropertySetDefault		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuildUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"defaultProperties",
	        		lv_defaultProperties_57_0, 
	        		"PropertySetDefault", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getBuildUnitAccess().getRightCurlyBracketKeyword_9(), null); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleProvidedCapability
entryRuleProvidedCapability returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getProvidedCapabilityRule(), currentNode); }
	 iv_ruleProvidedCapability=ruleProvidedCapability 
	 { $current=$iv_ruleProvidedCapability.current; } 
	 EOF 
;

// Rule ProvidedCapability
ruleProvidedCapability returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getProvidedCapabilityAccess().getVersionedCapabilityAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getVersionedCapabilityAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'unit' 
    {
        createLeafNode(grammarAccess.getProvidedCapabilityAccess().getUnitKeyword_1_0(), null); 
    }

    |	'capability' 
    {
        createLeafNode(grammarAccess.getProvidedCapabilityAccess().getCapabilityKeyword_1_1(), null); 
    }
)(	'{' 
    {
        createLeafNode(grammarAccess.getProvidedCapabilityAccess().getLeftCurlyBracketKeyword_2_0(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0);
	 				}
					(	'when' 
    {
        createLeafNode(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_2_1_0_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_0_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getCondExprExpressionParserRuleCall_2_1_0_2_0(), currentNode); 
	    }
		lv_condExpr_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"condExpr",
	        		lv_condExpr_7_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_0_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1);
	 				}
					(	'name' 
    {
        createLeafNode(grammarAccess.getProvidedCapabilityAccess().getNameKeyword_2_1_1_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_1_1(), null); 
    }
(
(
		lv_name_11_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getProvidedCapabilityAccess().getNameSTRINGTerminalRuleCall_2_1_1_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_11_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_1_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2);
	 				}
					(	'name-space' 
    {
        createLeafNode(grammarAccess.getProvidedCapabilityAccess().getNameSpaceKeyword_2_1_2_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_2_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getNameSpaceCapabilityInterfaceParserRuleCall_2_1_2_2_0(), currentNode); 
	    }
		lv_nameSpace_15_0=ruleCapabilityInterface		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"nameSpace",
	        		lv_nameSpace_15_0, 
	        		"CapabilityInterface", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_2_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 3);
	 				}
					(	'version' 
    {
        createLeafNode(grammarAccess.getProvidedCapabilityAccess().getVersionKeyword_2_1_3_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_3_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getVersionVersionLiteralParserRuleCall_2_1_3_2_0(), currentNode); 
	    }
		lv_version_19_0=ruleVersionLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"version",
	        		lv_version_19_0, 
	        		"VersionLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_3_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getProvidedCapabilityAccess().getRightCurlyBracketKeyword_2_2(), null); 
    }
))
;





// Entry rule entryRuleAliasedRequiredCapability
entryRuleAliasedRequiredCapability returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAliasedRequiredCapabilityRule(), currentNode); }
	 iv_ruleAliasedRequiredCapability=ruleAliasedRequiredCapability 
	 { $current=$iv_ruleAliasedRequiredCapability.current; } 
	 EOF 
;

// Rule AliasedRequiredCapability
ruleAliasedRequiredCapability returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasedRequiredCapabilityAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasedRequiredCapabilityAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'unit' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getUnitKeyword_1_0(), null); 
    }

    |	'capability' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getCapabilityKeyword_1_1(), null); 
    }
)(	'{' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getLeftCurlyBracketKeyword_2_0(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1(), 0);
	 				}
					(	'when' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getWhenKeyword_2_1_0_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_2_1_0_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_2_1_0_2_0(), currentNode); 
	    }
		lv_condExpr_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"condExpr",
	        		lv_condExpr_7_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_2_1_0_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1(), 1);
	 				}
					(	'name' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getNameKeyword_2_1_1_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_2_1_1_1(), null); 
    }
(
(
		lv_name_11_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSTRINGTerminalRuleCall_2_1_1_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_11_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_2_1_1_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1(), 2);
	 				}
					(	'name-space' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceKeyword_2_1_2_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_2_1_2_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceCapabilityInterfaceParserRuleCall_2_1_2_2_0(), currentNode); 
	    }
		lv_nameSpace_15_0=ruleCapabilityInterface		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"nameSpace",
	        		lv_nameSpace_15_0, 
	        		"CapabilityInterface", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_2_1_2_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1(), 3);
	 				}
					((
(
		lv_greedy_17_0=	'greedy' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_2_1_3_0_0(), "greedy"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "greedy", true, "greedy", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_2_1_3_1(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1(), 4);
	 				}
					(	'requires-min' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMinKeyword_2_1_4_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_2_1_4_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAliasedRequiredCapabilityAccess().getMinIntValueParserRuleCall_2_1_4_2_0(), currentNode); 
	    }
		lv_min_21_0=ruleIntValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"min",
	        		lv_min_21_0, 
	        		"IntValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_2_1_4_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1(), 5);
	 				}
					(	'requires-max' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMaxKeyword_2_1_5_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_2_1_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxIntValueParserRuleCall_2_1_5_2_0(), currentNode); 
	    }
		lv_max_25_0=ruleIntValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"max",
	        		lv_max_25_0, 
	        		"IntValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_2_1_5_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1(), 6);
	 				}
					(	'version' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionKeyword_2_1_6_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_2_1_6_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeVersionRangeLiteralParserRuleCall_2_1_6_2_0(), currentNode); 
	    }
		lv_versionRange_29_0=ruleVersionRangeLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"versionRange",
	        		lv_versionRange_29_0, 
	        		"VersionRangeLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_2_1_6_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_2_1());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getRightCurlyBracketKeyword_2_2(), null); 
    }
)(	'as' 
    {
        createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getAsKeyword_3_0(), null); 
    }
(
(
		lv_alias_33_0=RULE_ID
		{
			createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasIDTerminalRuleCall_3_1_0(), "alias"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"alias",
	        		lv_alias_33_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?)
;





// Entry rule entryRuleRequiredCapability
entryRuleRequiredCapability returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRequiredCapabilityRule(), currentNode); }
	 iv_ruleRequiredCapability=ruleRequiredCapability 
	 { $current=$iv_ruleRequiredCapability.current; } 
	 EOF 
;

// Rule RequiredCapability
ruleRequiredCapability returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getRequiredCapabilityAccess().getRequiredCapabilityAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getRequiredCapabilityAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'unit' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getUnitKeyword_1_0(), null); 
    }

    |	'capability' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getCapabilityKeyword_1_1(), null); 
    }
)(	'{' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getLeftCurlyBracketKeyword_2_0(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1(), 0);
	 				}
					(	'when' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_2_1_0_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_2_1_0_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_2_1_0_2_0(), currentNode); 
	    }
		lv_condExpr_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"condExpr",
	        		lv_condExpr_7_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_2_1_0_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1(), 1);
	 				}
					(	'name' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getNameKeyword_2_1_1_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_2_1_1_1(), null); 
    }
(
(
		lv_name_11_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getRequiredCapabilityAccess().getNameSTRINGTerminalRuleCall_2_1_1_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_11_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_2_1_1_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1(), 2);
	 				}
					(	'name-space' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getNameSpaceKeyword_2_1_2_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_2_1_2_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getNameSpaceCapabilityInterfaceParserRuleCall_2_1_2_2_0(), currentNode); 
	    }
		lv_nameSpace_15_0=ruleCapabilityInterface		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"nameSpace",
	        		lv_nameSpace_15_0, 
	        		"CapabilityInterface", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_2_1_2_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1(), 3);
	 				}
					((
(
		lv_greedy_17_0=	'greedy' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_2_1_3_0_0(), "greedy"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "greedy", true, "greedy", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_2_1_3_1(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1(), 4);
	 				}
					(	'requires-min' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getRequiresMinKeyword_2_1_4_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_2_1_4_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getMinIntValueParserRuleCall_2_1_4_2_0(), currentNode); 
	    }
		lv_min_21_0=ruleIntValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"min",
	        		lv_min_21_0, 
	        		"IntValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_2_1_4_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1(), 5);
	 				}
					(	'requires-max' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getRequiresMaxKeyword_2_1_5_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_2_1_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getMaxIntValueParserRuleCall_2_1_5_2_0(), currentNode); 
	    }
		lv_max_25_0=ruleIntValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"max",
	        		lv_max_25_0, 
	        		"IntValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_2_1_5_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1(), 6);
	 				}
					(	'version' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getVersionKeyword_2_1_6_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_2_1_6_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getVersionRangeVersionRangeLiteralParserRuleCall_2_1_6_2_0(), currentNode); 
	    }
		lv_versionRange_29_0=ruleVersionRangeLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"versionRange",
	        		lv_versionRange_29_0, 
	        		"VersionRangeLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_2_1_6_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_2_1());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getRequiredCapabilityAccess().getRightCurlyBracketKeyword_2_2(), null); 
    }
))
;





// Entry rule entryRuleRequiredCapability_Unfiltered
entryRuleRequiredCapability_Unfiltered returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRequiredCapability_UnfilteredRule(), currentNode); }
	 iv_ruleRequiredCapability_Unfiltered=ruleRequiredCapability_Unfiltered 
	 { $current=$iv_ruleRequiredCapability_Unfiltered.current; } 
	 EOF 
;

// Rule RequiredCapability_Unfiltered
ruleRequiredCapability_Unfiltered returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getRequiredCapability_UnfilteredAccess().getRequiredCapabilityAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getRequiredCapabilityAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'unit' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnitKeyword_1_0(), null); 
    }

    |	'capability' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getCapabilityKeyword_1_1(), null); 
    }
)(	'{' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getLeftCurlyBracketKeyword_2_0(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1(), 0);
	 				}
					((
(
		lv_greedy_5_0=	'greedy' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getGreedyGreedyKeyword_2_1_0_0_0(), "greedy"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequiredCapability_UnfilteredRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "greedy", true, "greedy", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getSemicolonKeyword_2_1_0_1(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1(), 1);
	 				}
					(	'name' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getNameKeyword_2_1_1_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getColonKeyword_2_1_1_1(), null); 
    }
(
(
		lv_name_9_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getNameSTRINGTerminalRuleCall_2_1_1_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequiredCapability_UnfilteredRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_9_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getSemicolonKeyword_2_1_1_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1(), 2);
	 				}
					(	'name-space' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getNameSpaceKeyword_2_1_2_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getColonKeyword_2_1_2_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getNameSpaceCapabilityInterfaceParserRuleCall_2_1_2_2_0(), currentNode); 
	    }
		lv_nameSpace_13_0=ruleCapabilityInterface		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequiredCapability_UnfilteredRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"nameSpace",
	        		lv_nameSpace_13_0, 
	        		"CapabilityInterface", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getSemicolonKeyword_2_1_2_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1(), 3);
	 				}
					(	'requires-min' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getRequiresMinKeyword_2_1_3_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getColonKeyword_2_1_3_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getMinIntValueParserRuleCall_2_1_3_2_0(), currentNode); 
	    }
		lv_min_17_0=ruleIntValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequiredCapability_UnfilteredRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"min",
	        		lv_min_17_0, 
	        		"IntValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getSemicolonKeyword_2_1_3_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1(), 4);
	 				}
					(	'requires-max' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getRequiresMaxKeyword_2_1_4_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getColonKeyword_2_1_4_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getMaxIntValueParserRuleCall_2_1_4_2_0(), currentNode); 
	    }
		lv_max_21_0=ruleIntValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequiredCapability_UnfilteredRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"max",
	        		lv_max_21_0, 
	        		"IntValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getSemicolonKeyword_2_1_4_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1(), 5);
	 				}
					(	'version' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getVersionKeyword_2_1_5_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getColonKeyword_2_1_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getVersionRangeVersionRangeLiteralParserRuleCall_2_1_5_2_0(), currentNode); 
	    }
		lv_versionRange_25_0=ruleVersionRangeLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequiredCapability_UnfilteredRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"versionRange",
	        		lv_versionRange_25_0, 
	        		"VersionRangeLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getSemicolonKeyword_2_1_5_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getRequiredCapability_UnfilteredAccess().getUnorderedGroup_2_1());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getRequiredCapability_UnfilteredAccess().getRightCurlyBracketKeyword_2_2(), null); 
    }
))
;





// Entry rule entryRulePropertySet_Named
entryRulePropertySet_Named returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPropertySet_NamedRule(), currentNode); }
	 iv_rulePropertySet_Named=rulePropertySet_Named 
	 { $current=$iv_rulePropertySet_Named.current; } 
	 EOF 
;

// Rule PropertySet_Named
rulePropertySet_Named returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getPropertySet_NamedAccess().getBPropertySetAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPropertySet_NamedAccess().getBPropertySetAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'properties' 
    {
        createLeafNode(grammarAccess.getPropertySet_NamedAccess().getPropertiesKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getPropertySet_NamedAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertySet_NamedRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'extends' 
    {
        createLeafNode(grammarAccess.getPropertySet_NamedAccess().getExtendsKeyword_3_0(), null); 
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertySet_NamedRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertySet_NamedAccess().getExtendsBPropertySetCrossReference_3_1_0(), currentNode); 
	    }
		ruleQIDREF		{ 
	        currentNode = currentNode.getParent();
	    }

)
))?((	'{' 
    {
        createLeafNode(grammarAccess.getPropertySet_NamedAccess().getLeftCurlyBracketKeyword_4_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertySet_NamedAccess().getOperationsPropertyOperationParserRuleCall_4_0_1_0(), currentNode); 
	    }
		lv_operations_6_0=rulePropertyOperation		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertySet_NamedRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"operations",
	        		lv_operations_6_0, 
	        		"PropertyOperation", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getPropertySet_NamedAccess().getRightCurlyBracketKeyword_4_0_2(), null); 
    }
)
    |(	':' 
    {
        createLeafNode(grammarAccess.getPropertySet_NamedAccess().getColonKeyword_4_1_0(), null); 
    }
	'load-from' 
    {
        createLeafNode(grammarAccess.getPropertySet_NamedAccess().getLoadFromKeyword_4_1_1(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getPropertySet_NamedAccess().getColonKeyword_4_1_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertySet_NamedAccess().getPropertiesFileURIParserRuleCall_4_1_3_0(), currentNode); 
	    }
		lv_propertiesFile_11_0=ruleURI		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertySet_NamedRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"propertiesFile",
	        		lv_propertiesFile_11_0, 
	        		"URI", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getPropertySet_NamedAccess().getSemicolonKeyword_4_1_4(), null); 
    }
)))
;





// Entry rule entryRulePropertySet
entryRulePropertySet returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPropertySetRule(), currentNode); }
	 iv_rulePropertySet=rulePropertySet 
	 { $current=$iv_rulePropertySet.current; } 
	 EOF 
;

// Rule PropertySet
rulePropertySet returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getPropertySetAccess().getBPropertySetAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPropertySetAccess().getBPropertySetAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'properties' 
    {
        createLeafNode(grammarAccess.getPropertySetAccess().getPropertiesKeyword_1(), null); 
    }
(	'extends' 
    {
        createLeafNode(grammarAccess.getPropertySetAccess().getExtendsKeyword_2_0(), null); 
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertySetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertySetAccess().getExtendsBPropertySetCrossReference_2_1_0(), currentNode); 
	    }
		ruleQIDREF		{ 
	        currentNode = currentNode.getParent();
	    }

)
))?((	'{' 
    {
        createLeafNode(grammarAccess.getPropertySetAccess().getLeftCurlyBracketKeyword_3_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertySetAccess().getOperationsPropertyOperationParserRuleCall_3_0_1_0(), currentNode); 
	    }
		lv_operations_5_0=rulePropertyOperation		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertySetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"operations",
	        		lv_operations_5_0, 
	        		"PropertyOperation", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getPropertySetAccess().getRightCurlyBracketKeyword_3_0_2(), null); 
    }
)
    |(	':' 
    {
        createLeafNode(grammarAccess.getPropertySetAccess().getColonKeyword_3_1_0(), null); 
    }
	'load-from' 
    {
        createLeafNode(grammarAccess.getPropertySetAccess().getLoadFromKeyword_3_1_1(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getPropertySetAccess().getColonKeyword_3_1_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertySetAccess().getPropertiesFileURIParserRuleCall_3_1_3_0(), currentNode); 
	    }
		lv_propertiesFile_10_0=ruleURI		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertySetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"propertiesFile",
	        		lv_propertiesFile_10_0, 
	        		"URI", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getPropertySetAccess().getSemicolonKeyword_3_1_4(), null); 
    }
)))
;





// Entry rule entryRuleAnnotationSet
entryRuleAnnotationSet returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAnnotationSetRule(), currentNode); }
	 iv_ruleAnnotationSet=ruleAnnotationSet 
	 { $current=$iv_ruleAnnotationSet.current; } 
	 EOF 
;

// Rule AnnotationSet
ruleAnnotationSet returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getAnnotationSetAccess().getPropertySet_noKwParserRuleCall(), currentNode); 
    }
    this_PropertySet_noKw_0=rulePropertySet_noKw
    { 
        $current = $this_PropertySet_noKw_0.current; 
        currentNode = currentNode.getParent();
    }

;





// Entry rule entryRulePropertySet_noKw
entryRulePropertySet_noKw returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPropertySet_noKwRule(), currentNode); }
	 iv_rulePropertySet_noKw=rulePropertySet_noKw 
	 { $current=$iv_rulePropertySet_noKw.current; } 
	 EOF 
;

// Rule PropertySet_noKw
rulePropertySet_noKw returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getPropertySet_noKwAccess().getBPropertySetAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPropertySet_noKwAccess().getBPropertySetAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'extends' 
    {
        createLeafNode(grammarAccess.getPropertySet_noKwAccess().getExtendsKeyword_1_0(), null); 
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertySet_noKwRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertySet_noKwAccess().getExtendsBPropertySetCrossReference_1_1_0(), currentNode); 
	    }
		ruleQIDREF		{ 
	        currentNode = currentNode.getParent();
	    }

)
))?((	'{' 
    {
        createLeafNode(grammarAccess.getPropertySet_noKwAccess().getLeftCurlyBracketKeyword_2_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertySet_noKwAccess().getOperationsPropertyOperationParserRuleCall_2_0_1_0(), currentNode); 
	    }
		lv_operations_4_0=rulePropertyOperation		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertySet_noKwRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"operations",
	        		lv_operations_4_0, 
	        		"PropertyOperation", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getPropertySet_noKwAccess().getRightCurlyBracketKeyword_2_0_2(), null); 
    }
)
    |(	':' 
    {
        createLeafNode(grammarAccess.getPropertySet_noKwAccess().getColonKeyword_2_1_0(), null); 
    }
	'load-from' 
    {
        createLeafNode(grammarAccess.getPropertySet_noKwAccess().getLoadFromKeyword_2_1_1(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getPropertySet_noKwAccess().getColonKeyword_2_1_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertySet_noKwAccess().getPropertiesFileURIParserRuleCall_2_1_3_0(), currentNode); 
	    }
		lv_propertiesFile_9_0=ruleURI		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertySet_noKwRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"propertiesFile",
	        		lv_propertiesFile_9_0, 
	        		"URI", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getPropertySet_noKwAccess().getSemicolonKeyword_2_1_4(), null); 
    }
)))
;





// Entry rule entryRulePropertySetDefault
entryRulePropertySetDefault returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPropertySetDefaultRule(), currentNode); }
	 iv_rulePropertySetDefault=rulePropertySetDefault 
	 { $current=$iv_rulePropertySetDefault.current; } 
	 EOF 
;

// Rule PropertySetDefault
rulePropertySetDefault returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getPropertySetDefaultAccess().getBDefaultPropertySetAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPropertySetDefaultAccess().getBDefaultPropertySetAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'default-properties' 
    {
        createLeafNode(grammarAccess.getPropertySetDefaultAccess().getDefaultPropertiesKeyword_1(), null); 
    }
(	'extends' 
    {
        createLeafNode(grammarAccess.getPropertySetDefaultAccess().getExtendsKeyword_2_0(), null); 
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertySetDefaultRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertySetDefaultAccess().getExtendsBPropertySetCrossReference_2_1_0(), currentNode); 
	    }
		ruleQIDREF		{ 
	        currentNode = currentNode.getParent();
	    }

)
))?	'{' 
    {
        createLeafNode(grammarAccess.getPropertySetDefaultAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertySetDefaultAccess().getOperationsPropertyOperationDefaultParserRuleCall_4_0(), currentNode); 
	    }
		lv_operations_5_0=rulePropertyOperationDefault		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertySetDefaultRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"operations",
	        		lv_operations_5_0, 
	        		"PropertyOperationDefault", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getPropertySetDefaultAccess().getRightCurlyBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRulePropertySetDefault_noKw
entryRulePropertySetDefault_noKw returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPropertySetDefault_noKwRule(), currentNode); }
	 iv_rulePropertySetDefault_noKw=rulePropertySetDefault_noKw 
	 { $current=$iv_rulePropertySetDefault_noKw.current; } 
	 EOF 
;

// Rule PropertySetDefault_noKw
rulePropertySetDefault_noKw returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getPropertySetDefault_noKwAccess().getBPropertySetAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPropertySetDefault_noKwAccess().getBPropertySetAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'extends' 
    {
        createLeafNode(grammarAccess.getPropertySetDefault_noKwAccess().getExtendsKeyword_1_0(), null); 
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertySetDefault_noKwRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertySetDefault_noKwAccess().getExtendsBPropertySetCrossReference_1_1_0(), currentNode); 
	    }
		ruleQIDREF		{ 
	        currentNode = currentNode.getParent();
	    }

)
))?	'{' 
    {
        createLeafNode(grammarAccess.getPropertySetDefault_noKwAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertySetDefault_noKwAccess().getOperationsPropertyOperationParserRuleCall_3_0(), currentNode); 
	    }
		lv_operations_4_0=rulePropertyOperation		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertySetDefault_noKwRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"operations",
	        		lv_operations_4_0, 
	        		"PropertyOperation", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getPropertySetDefault_noKwAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRulePropertyOperationDefault
entryRulePropertyOperationDefault returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPropertyOperationDefaultRule(), currentNode); }
	 iv_rulePropertyOperationDefault=rulePropertyOperationDefault 
	 { $current=$iv_rulePropertyOperationDefault.current; } 
	 EOF 
;

// Rule PropertyOperationDefault
rulePropertyOperationDefault returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPropertyOperationDefaultAccess().getPropertyDefinitionOperationParserRuleCall_0(), currentNode); 
    }
    this_PropertyDefinitionOperation_0=rulePropertyDefinitionOperation
    { 
        $current = $this_PropertyDefinitionOperation_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPropertyOperationDefaultAccess().getPropertySetOperationDefaultParserRuleCall_1(), currentNode); 
    }
    this_PropertySetOperationDefault_1=rulePropertySetOperationDefault
    { 
        $current = $this_PropertySetOperationDefault_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRulePropertyOperation
entryRulePropertyOperation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPropertyOperationRule(), currentNode); }
	 iv_rulePropertyOperation=rulePropertyOperation 
	 { $current=$iv_rulePropertyOperation.current; } 
	 EOF 
;

// Rule PropertyOperation
rulePropertyOperation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPropertyOperationAccess().getConditionalPropertyOperationParserRuleCall_0(), currentNode); 
    }
    this_ConditionalPropertyOperation_0=ruleConditionalPropertyOperation
    { 
        $current = $this_ConditionalPropertyOperation_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPropertyOperationAccess().getPropertyDefinitionOperationParserRuleCall_1(), currentNode); 
    }
    this_PropertyDefinitionOperation_1=rulePropertyDefinitionOperation
    { 
        $current = $this_PropertyDefinitionOperation_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPropertyOperationAccess().getPropertySetOperationParserRuleCall_2(), currentNode); 
    }
    this_PropertySetOperation_2=rulePropertySetOperation
    { 
        $current = $this_PropertySetOperation_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleConditionalPropertyOperation
entryRuleConditionalPropertyOperation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getConditionalPropertyOperationRule(), currentNode); }
	 iv_ruleConditionalPropertyOperation=ruleConditionalPropertyOperation 
	 { $current=$iv_ruleConditionalPropertyOperation.current; } 
	 EOF 
;

// Rule ConditionalPropertyOperation
ruleConditionalPropertyOperation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getConditionalPropertyOperationAccess().getBConditionalPropertyOperationAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getConditionalPropertyOperationAccess().getBConditionalPropertyOperationAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'when' 
    {
        createLeafNode(grammarAccess.getConditionalPropertyOperationAccess().getWhenKeyword_1(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getConditionalPropertyOperationAccess().getLeftParenthesisKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConditionalPropertyOperationAccess().getCondExprExpressionParserRuleCall_3_0(), currentNode); 
	    }
		lv_condExpr_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConditionalPropertyOperationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"condExpr",
	        		lv_condExpr_3_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getConditionalPropertyOperationAccess().getRightParenthesisKeyword_4(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConditionalPropertyOperationAccess().getBodyPropertyDefinitionOperationParserRuleCall_5_0_0(), currentNode); 
	    }
		lv_body_5_0=rulePropertyDefinitionOperation		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConditionalPropertyOperationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"body",
	        		lv_body_5_0, 
	        		"PropertyDefinitionOperation", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConditionalPropertyOperationAccess().getBodyPropertySetOperationParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_body_6_0=rulePropertySetOperation		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConditionalPropertyOperationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"body",
	        		lv_body_6_0, 
	        		"PropertySetOperation", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))
;





// Entry rule entryRulePropertyDefinitionOperation
entryRulePropertyDefinitionOperation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPropertyDefinitionOperationRule(), currentNode); }
	 iv_rulePropertyDefinitionOperation=rulePropertyDefinitionOperation 
	 { $current=$iv_rulePropertyDefinitionOperation.current; } 
	 EOF 
;

// Rule PropertyDefinitionOperation
rulePropertyDefinitionOperation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getPropertyDefinitionOperationAccess().getBPropertyDefinitionOperationAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPropertyDefinitionOperationAccess().getBPropertyDefinitionOperationAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertyDefinitionOperationAccess().getDefinitionPropertyValDeclarationParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_definition_1_0=rulePropertyValDeclaration		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyDefinitionOperationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"definition",
	        		lv_definition_1_0, 
	        		"PropertyValDeclaration", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertyDefinitionOperationAccess().getDefinitionPropertyVarDeclarationParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_definition_2_0=rulePropertyVarDeclaration		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyDefinitionOperationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"definition",
	        		lv_definition_2_0, 
	        		"PropertyVarDeclaration", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))
;





// Entry rule entryRulePropertyValDeclaration
entryRulePropertyValDeclaration returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPropertyValDeclarationRule(), currentNode); }
	 iv_rulePropertyValDeclaration=rulePropertyValDeclaration 
	 { $current=$iv_rulePropertyValDeclaration.current; } 
	 EOF 
;

// Rule PropertyValDeclaration
rulePropertyValDeclaration returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getPropertyValDeclarationAccess().getBDefPropertyAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPropertyValDeclarationAccess().getBDefPropertyAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_final_1_0=	'final' 
    {
        createLeafNode(grammarAccess.getPropertyValDeclarationAccess().getFinalFinalKeyword_1_0(), "final"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyValDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "final", true, "final", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertyValDeclarationAccess().getTypeTypeRefParserRuleCall_2_0(), currentNode); 
	    }
		lv_type_2_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyValDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_2_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		lv_name_3_0=RULE_PID
		{
			createLeafNode(grammarAccess.getPropertyValDeclarationAccess().getNamePIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyValDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"PID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getPropertyValDeclarationAccess().getEqualsSignKeyword_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertyValDeclarationAccess().getValueExprExpressionParserRuleCall_5_0(), currentNode); 
	    }
		lv_valueExpr_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyValDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"valueExpr",
	        		lv_valueExpr_5_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getPropertyValDeclarationAccess().getSemicolonKeyword_6(), null); 
    }
)
;





// Entry rule entryRulePropertyVarDeclaration
entryRulePropertyVarDeclaration returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPropertyVarDeclarationRule(), currentNode); }
	 iv_rulePropertyVarDeclaration=rulePropertyVarDeclaration 
	 { $current=$iv_rulePropertyVarDeclaration.current; } 
	 EOF 
;

// Rule PropertyVarDeclaration
rulePropertyVarDeclaration returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getPropertyVarDeclarationAccess().getBDefPropertyAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPropertyVarDeclarationAccess().getBDefPropertyAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_final_1_0=	'final' 
    {
        createLeafNode(grammarAccess.getPropertyVarDeclarationAccess().getFinalFinalKeyword_1_0(), "final"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyVarDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "final", true, "final", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_mutable_2_0=	'mutable' 
    {
        createLeafNode(grammarAccess.getPropertyVarDeclarationAccess().getMutableMutableKeyword_2_0(), "mutable"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyVarDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "mutable", true, "mutable", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertyVarDeclarationAccess().getTypeTypeRefParserRuleCall_3_0(), currentNode); 
	    }
		lv_type_3_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyVarDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_3_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		lv_name_4_0=RULE_PID
		{
			createLeafNode(grammarAccess.getPropertyVarDeclarationAccess().getNamePIDTerminalRuleCall_4_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyVarDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"PID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'=' 
    {
        createLeafNode(grammarAccess.getPropertyVarDeclarationAccess().getEqualsSignKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertyVarDeclarationAccess().getValueExprExpressionParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_valueExpr_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyVarDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"valueExpr",
	        		lv_valueExpr_6_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	';' 
    {
        createLeafNode(grammarAccess.getPropertyVarDeclarationAccess().getSemicolonKeyword_6(), null); 
    }
)
;





// Entry rule entryRulePropertySetOperation
entryRulePropertySetOperation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPropertySetOperationRule(), currentNode); }
	 iv_rulePropertySetOperation=rulePropertySetOperation 
	 { $current=$iv_rulePropertySetOperation.current; } 
	 EOF 
;

// Rule PropertySetOperation
rulePropertySetOperation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getPropertySetOperationAccess().getBPropertySetOperationAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPropertySetOperationAccess().getBPropertySetOperationAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertySetOperationAccess().getPropertySetPropertySet_noKwParserRuleCall_1_0(), currentNode); 
	    }
		lv_propertySet_1_0=rulePropertySet_noKw		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertySetOperationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"propertySet",
	        		lv_propertySet_1_0, 
	        		"PropertySet_noKw", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRulePropertySetOperationDefault
entryRulePropertySetOperationDefault returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPropertySetOperationDefaultRule(), currentNode); }
	 iv_rulePropertySetOperationDefault=rulePropertySetOperationDefault 
	 { $current=$iv_rulePropertySetOperationDefault.current; } 
	 EOF 
;

// Rule PropertySetOperationDefault
rulePropertySetOperationDefault returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getPropertySetOperationDefaultAccess().getBPropertySetOperationAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPropertySetOperationDefaultAccess().getBPropertySetOperationAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertySetOperationDefaultAccess().getPropertySetPropertySetDefault_noKwParserRuleCall_1_0(), currentNode); 
	    }
		lv_propertySet_1_0=rulePropertySetDefault_noKw		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertySetOperationDefaultRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"propertySet",
	        		lv_propertySet_1_0, 
	        		"PropertySetDefault_noKw", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleSynchronization
entryRuleSynchronization returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSynchronizationRule(), currentNode); }
	 iv_ruleSynchronization=ruleSynchronization 
	 { $current=$iv_ruleSynchronization.current; } 
	 EOF 
;

// Rule Synchronization
ruleSynchronization returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getSynchronizationAccess().getSynchronizationAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSynchronizationAccess().getSynchronizationAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'sequential' 
    {
        createLeafNode(grammarAccess.getSynchronizationAccess().getSequentialKeyword_1(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getSynchronizationAccess().getColonKeyword_2(), null); 
    }
	'[' 
    {
        createLeafNode(grammarAccess.getSynchronizationAccess().getLeftSquareBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSynchronizationAccess().getBuilderQueriesBuilderQueryParserRuleCall_4_0(), currentNode); 
	    }
		lv_builderQueries_4_0=ruleBuilderQuery		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSynchronizationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"builderQueries",
	        		lv_builderQueries_4_0, 
	        		"BuilderQuery", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getSynchronizationAccess().getCommaKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSynchronizationAccess().getBuilderQueriesBuilderQueryParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_builderQueries_6_0=ruleBuilderQuery		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSynchronizationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"builderQueries",
	        		lv_builderQueries_6_0, 
	        		"BuilderQuery", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getSynchronizationAccess().getRightSquareBracketKeyword_6(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getSynchronizationAccess().getSemicolonKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleBuilderQuery
entryRuleBuilderQuery returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBuilderQueryRule(), currentNode); }
	 iv_ruleBuilderQuery=ruleBuilderQuery 
	 { $current=$iv_ruleBuilderQuery.current; } 
	 EOF 
;

// Rule BuilderQuery
ruleBuilderQuery returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBuilderQueryAccess().getBuilderQueryAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBuilderQueryAccess().getBuilderQueryAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'unit' 
    {
        createLeafNode(grammarAccess.getBuilderQueryAccess().getUnitKeyword_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderQueryAccess().getUnitQueryUnitOrExpressionParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_unitQuery_2_0=ruleUnitOrExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderQueryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"unitQuery",
	        		lv_unitQuery_2_0, 
	        		"UnitOrExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'builder' 
    {
        createLeafNode(grammarAccess.getBuilderQueryAccess().getBuilderKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderQueryAccess().getBuilderQueriesBuilderOrExpressionParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_builderQueries_4_0=ruleBuilderOrExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderQueryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"builderQueries",
	        		lv_builderQueries_4_0, 
	        		"BuilderOrExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(	',' 
    {
        createLeafNode(grammarAccess.getBuilderQueryAccess().getCommaKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderQueryAccess().getBuilderQueriesBuilderOrExpressionParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_builderQueries_6_0=ruleBuilderOrExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderQueryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"builderQueries",
	        		lv_builderQueries_6_0, 
	        		"BuilderOrExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRulePathGroup
entryRulePathGroup returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPathGroupRule(), currentNode); }
	 iv_rulePathGroup=rulePathGroup 
	 { $current=$iv_rulePathGroup.current; } 
	 EOF 
;

// Rule PathGroup
rulePathGroup returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getPathGroupAccess().getPathGroupAction_0_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPathGroupAccess().getPathGroupAction_0_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'[' 
    {
        createLeafNode(grammarAccess.getPathGroupAccess().getLeftSquareBracketKeyword_0_1_0(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getPathVectorsConditionalPathVectorParserRuleCall_0_1_1_0_0(), currentNode); 
	    }
		lv_pathVectors_2_0=ruleConditionalPathVector		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"pathVectors",
	        		lv_pathVectors_2_0, 
	        		"ConditionalPathVector", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getPathGroupAccess().getCommaKeyword_0_1_1_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getPathVectorsConditionalPathVectorParserRuleCall_0_1_1_1_1_0(), currentNode); 
	    }
		lv_pathVectors_4_0=ruleConditionalPathVector		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"pathVectors",
	        		lv_pathVectors_4_0, 
	        		"ConditionalPathVector", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?(	'annotations' 
    {
        createLeafNode(grammarAccess.getPathGroupAccess().getAnnotationsKeyword_0_1_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getAnnotationsAnnotationSetParserRuleCall_0_1_2_1_0(), currentNode); 
	    }
		lv_annotations_6_0=ruleAnnotationSet		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"annotations",
	        		lv_annotations_6_0, 
	        		"AnnotationSet", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	']' 
    {
        createLeafNode(grammarAccess.getPathGroupAccess().getRightSquareBracketKeyword_0_1_3(), null); 
    }
))
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getPathVectorsConditionalPathVectorParserRuleCall_1_0(), currentNode); 
	    }
		lv_pathVectors_8_0=ruleConditionalPathVector		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"pathVectors",
	        		lv_pathVectors_8_0, 
	        		"ConditionalPathVector", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRulePathVector
entryRulePathVector returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPathVectorRule(), currentNode); }
	 iv_rulePathVector=rulePathVector 
	 { $current=$iv_rulePathVector.current; } 
	 EOF 
;

// Rule PathVector
rulePathVector returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPathVectorAccess().getBasePathVectorParserRuleCall_0(), currentNode); 
    }
    this_BasePathVector_0=ruleBasePathVector
    { 
        $current = $this_BasePathVector_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPathVectorAccess().getUnbasedPathVectorParserRuleCall_1(), currentNode); 
    }
    this_UnbasedPathVector_1=ruleUnbasedPathVector
    { 
        $current = $this_UnbasedPathVector_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleBasePathVector
entryRuleBasePathVector returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBasePathVectorRule(), currentNode); }
	 iv_ruleBasePathVector=ruleBasePathVector 
	 { $current=$iv_ruleBasePathVector.current; } 
	 EOF 
;

// Rule BasePathVector
ruleBasePathVector returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBasePathVectorAccess().getPathVectorAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBasePathVectorAccess().getPathVectorAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBasePathVectorAccess().getBasePathPathParserRuleCall_1_0(), currentNode); 
	    }
		lv_basePath_1_0=rulePath		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBasePathVectorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"basePath",
	        		lv_basePath_1_0, 
	        		"Path", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'[' 
    {
        createLeafNode(grammarAccess.getBasePathVectorAccess().getLeftSquareBracketKeyword_2(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBasePathVectorAccess().getPathsPathParserRuleCall_3_0_0(), currentNode); 
	    }
		lv_paths_3_0=rulePath		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBasePathVectorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"paths",
	        		lv_paths_3_0, 
	        		"Path", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getBasePathVectorAccess().getCommaKeyword_3_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBasePathVectorAccess().getPathsPathParserRuleCall_3_1_1_0(), currentNode); 
	    }
		lv_paths_5_0=rulePath		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBasePathVectorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"paths",
	        		lv_paths_5_0, 
	        		"Path", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	']' 
    {
        createLeafNode(grammarAccess.getBasePathVectorAccess().getRightSquareBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleUnbasedPathVector
entryRuleUnbasedPathVector returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnbasedPathVectorRule(), currentNode); }
	 iv_ruleUnbasedPathVector=ruleUnbasedPathVector 
	 { $current=$iv_ruleUnbasedPathVector.current; } 
	 EOF 
;

// Rule UnbasedPathVector
ruleUnbasedPathVector returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getUnbasedPathVectorAccess().getPathVectorAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getUnbasedPathVectorAccess().getPathVectorAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnbasedPathVectorAccess().getPathsPathParserRuleCall_1_0(), currentNode); 
	    }
		lv_paths_1_0=rulePath		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnbasedPathVectorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"paths",
	        		lv_paths_1_0, 
	        		"Path", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleConditionalPathVector
entryRuleConditionalPathVector returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getConditionalPathVectorRule(), currentNode); }
	 iv_ruleConditionalPathVector=ruleConditionalPathVector 
	 { $current=$iv_ruleConditionalPathVector.current; } 
	 EOF 
;

// Rule ConditionalPathVector
ruleConditionalPathVector returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getConditionalPathVectorAccess().getConditionalPathVectorAction_0_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getConditionalPathVectorAccess().getConditionalPathVectorAction_0_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'when' 
    {
        createLeafNode(grammarAccess.getConditionalPathVectorAccess().getWhenKeyword_0_1_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getConditionalPathVectorAccess().getLeftParenthesisKeyword_0_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConditionalPathVectorAccess().getCondExprExpressionParserRuleCall_0_1_2_0(), currentNode); 
	    }
		lv_condExpr_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConditionalPathVectorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"condExpr",
	        		lv_condExpr_3_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getConditionalPathVectorAccess().getRightParenthesisKeyword_0_1_3(), null); 
    }
	'[' 
    {
        createLeafNode(grammarAccess.getConditionalPathVectorAccess().getLeftSquareBracketKeyword_0_1_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConditionalPathVectorAccess().getPathVectorsPathVectorParserRuleCall_0_1_5_0(), currentNode); 
	    }
		lv_pathVectors_6_0=rulePathVector		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConditionalPathVectorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"pathVectors",
	        		lv_pathVectors_6_0, 
	        		"PathVector", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getConditionalPathVectorAccess().getCommaKeyword_0_1_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConditionalPathVectorAccess().getPathVectorsPathVectorParserRuleCall_0_1_6_1_0(), currentNode); 
	    }
		lv_pathVectors_8_0=rulePathVector		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConditionalPathVectorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"pathVectors",
	        		lv_pathVectors_8_0, 
	        		"PathVector", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getConditionalPathVectorAccess().getRightSquareBracketKeyword_0_1_7(), null); 
    }
))
    |((	'when' 
    {
        createLeafNode(grammarAccess.getConditionalPathVectorAccess().getWhenKeyword_1_0_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getConditionalPathVectorAccess().getLeftParenthesisKeyword_1_0_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConditionalPathVectorAccess().getCondExprExpressionParserRuleCall_1_0_2_0(), currentNode); 
	    }
		lv_condExpr_12_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConditionalPathVectorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"condExpr",
	        		lv_condExpr_12_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getConditionalPathVectorAccess().getRightParenthesisKeyword_1_0_3(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConditionalPathVectorAccess().getPathVectorsPathVectorParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_pathVectors_14_0=rulePathVector		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConditionalPathVectorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"pathVectors",
	        		lv_pathVectors_14_0, 
	        		"PathVector", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))
;





// Entry rule entryRulePath
entryRulePath returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ currentNode = createCompositeNode(grammarAccess.getPathRule(), currentNode); } 
	 iv_rulePath=rulePath 
	 { $current=$iv_rulePath.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Path
rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    createLeafNode(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0(), null); 
    }

    |((
	kw='/' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_0(), null); 
    }
)?
    { 
        currentNode=createCompositeNode(grammarAccess.getPathAccess().getQIDParserRuleCall_1_1(), currentNode); 
    }
    this_QID_2=ruleQID    {
		$current.merge(this_QID_2);
    }

    { 
        currentNode = currentNode.getParent();
    }
(
	kw='/' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getPathAccess().getQIDParserRuleCall_1_2_1(), currentNode); 
    }
    this_QID_4=ruleQID    {
		$current.merge(this_QID_4);
    }

    { 
        currentNode = currentNode.getParent();
    }
)*(
	kw='/' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_3(), null); 
    }
)?))
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePrerequisite
entryRulePrerequisite returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPrerequisiteRule(), currentNode); }
	 iv_rulePrerequisite=rulePrerequisite 
	 { $current=$iv_rulePrerequisite.current; } 
	 EOF 
;

// Rule Prerequisite
rulePrerequisite returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getPrerequisiteAccess().getPrerequisiteAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPrerequisiteAccess().getPrerequisiteAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'when' 
    {
        createLeafNode(grammarAccess.getPrerequisiteAccess().getWhenKeyword_1_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getPrerequisiteAccess().getLeftParenthesisKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrerequisiteAccess().getCondExprExpressionParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_condExpr_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"condExpr",
	        		lv_condExpr_3_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getPrerequisiteAccess().getRightParenthesisKeyword_1_3(), null); 
    }
)?((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrerequisiteAccess().getWithExprWithClauseParserRuleCall_2_0_0(), currentNode); 
	    }
		lv_withExpr_5_0=ruleWithClause		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"withExpr",
	        		lv_withExpr_5_0, 
	        		"WithClause", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getPrerequisiteAccess().getColonKeyword_2_1(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrerequisiteAccess().getBuildResultBuildResultReferenceParserRuleCall_3_0(), currentNode); 
	    }
		lv_buildResult_7_0=ruleBuildResultReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"buildResult",
	        		lv_buildResult_7_0, 
	        		"BuildResultReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'as' 
    {
        createLeafNode(grammarAccess.getPrerequisiteAccess().getAsKeyword_4_0(), null); 
    }
(
(
		lv_alias_9_0=RULE_ID
		{
			createLeafNode(grammarAccess.getPrerequisiteAccess().getAliasIDTerminalRuleCall_4_1_0(), "alias"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"alias",
	        		lv_alias_9_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?)
;





// Entry rule entryRuleWithClause
entryRuleWithClause returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWithClauseRule(), currentNode); }
	 iv_ruleWithClause=ruleWithClause 
	 { $current=$iv_ruleWithClause.current; } 
	 EOF 
;

// Rule WithClause
ruleWithClause returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getWithClauseAccess().getBWithExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getWithClauseAccess().getBWithExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'with' 
    {
        createLeafNode(grammarAccess.getWithClauseAccess().getWithKeyword_1(), null); 
    }
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getWithClauseRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getWithClauseAccess().getReferencedAdviceBAdviceCrossReference_2_0_0(), "referencedAdvice"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getWithClauseAccess().getCommaKeyword_2_1_0(), null); 
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getWithClauseRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getWithClauseAccess().getReferencedAdviceBAdviceCrossReference_2_1_1_0(), "referencedAdvice"); 
	}

)
))*)?((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWithClauseAccess().getPropertySetsPropertySetParserRuleCall_3_0_0(), currentNode); 
	    }
		lv_propertySets_5_0=rulePropertySet		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWithClauseRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"propertySets",
	        		lv_propertySets_5_0, 
	        		"PropertySet", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWithClauseAccess().getPropertySetsPropertySetDefaultParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_propertySets_6_0=rulePropertySetDefault		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWithClauseRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"propertySets",
	        		lv_propertySets_6_0, 
	        		"PropertySetDefault", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(	'concern' 
    {
        createLeafNode(grammarAccess.getWithClauseAccess().getConcernKeyword_3_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWithClauseAccess().getConcernsConcern_AnonymousParserRuleCall_3_2_1_0(), currentNode); 
	    }
		lv_concerns_8_0=ruleConcern_Anonymous		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWithClauseRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"concerns",
	        		lv_concerns_8_0, 
	        		"Concern_Anonymous", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))*)
;





// Entry rule entryRuleBuildResultReference
entryRuleBuildResultReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBuildResultReferenceRule(), currentNode); }
	 iv_ruleBuildResultReference=ruleBuildResultReference 
	 { $current=$iv_ruleBuildResultReference.current; } 
	 EOF 
;

// Rule BuildResultReference
ruleBuildResultReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getBuildResultReferenceAccess().getUnitBuildResultReferenceParserRuleCall_0(), currentNode); 
    }
    this_UnitBuildResultReference_0=ruleUnitBuildResultReference
    { 
        $current = $this_UnitBuildResultReference_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getBuildResultReferenceAccess().getCapabilityBuildResultReferenceParserRuleCall_1(), currentNode); 
    }
    this_CapabilityBuildResultReference_1=ruleCapabilityBuildResultReference
    { 
        $current = $this_CapabilityBuildResultReference_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getBuildResultReferenceAccess().getIndirectCapabilityBuildResultReferenceParserRuleCall_2(), currentNode); 
    }
    this_IndirectCapabilityBuildResultReference_2=ruleIndirectCapabilityBuildResultReference
    { 
        $current = $this_IndirectCapabilityBuildResultReference_2.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getBuildResultReferenceAccess().getCompoundBuildResultReferenceParserRuleCall_3(), currentNode); 
    }
    this_CompoundBuildResultReference_3=ruleCompoundBuildResultReference
    { 
        $current = $this_CompoundBuildResultReference_3.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleUnitBuildResultReference
entryRuleUnitBuildResultReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnitBuildResultReferenceRule(), currentNode); }
	 iv_ruleUnitBuildResultReference=ruleUnitBuildResultReference 
	 { $current=$iv_ruleUnitBuildResultReference.current; } 
	 EOF 
;

// Rule UnitBuildResultReference
ruleUnitBuildResultReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getUnitBuildResultReferenceAccess().getBuilderReferenceAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getUnitBuildResultReferenceAccess().getBuilderReferenceAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'unit' 
    {
        createLeafNode(grammarAccess.getUnitBuildResultReferenceAccess().getUnitKeyword_1(), null); 
    }
	'.' 
    {
        createLeafNode(grammarAccess.getUnitBuildResultReferenceAccess().getFullStopKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitBuildResultReferenceAccess().getBuilderNameBuilderNameParserRuleCall_3_0(), currentNode); 
	    }
		lv_builderName_3_0=ruleBuilderName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitBuildResultReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"builderName",
	        		lv_builderName_3_0, 
	        		"BuilderName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'(' 
    {
        createLeafNode(grammarAccess.getUnitBuildResultReferenceAccess().getLeftParenthesisKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitBuildResultReferenceAccess().getParametersParameterListParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_parameters_5_0=ruleParameterList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitBuildResultReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameters",
	        		lv_parameters_5_0, 
	        		"ParameterList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	')' 
    {
        createLeafNode(grammarAccess.getUnitBuildResultReferenceAccess().getRightParenthesisKeyword_4_2(), null); 
    }
))
;





// Entry rule entryRuleCapabilityBuildResultReference
entryRuleCapabilityBuildResultReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCapabilityBuildResultReferenceRule(), currentNode); }
	 iv_ruleCapabilityBuildResultReference=ruleCapabilityBuildResultReference 
	 { $current=$iv_ruleCapabilityBuildResultReference.current; } 
	 EOF 
;

// Rule CapabilityBuildResultReference
ruleCapabilityBuildResultReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getCapabilityBuildResultReferenceAccess().getBuilderReferenceAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getCapabilityBuildResultReferenceAccess().getBuilderReferenceAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCapabilityBuildResultReferenceAccess().getRequiredCapabilityRequiredCapability_UnfilteredParserRuleCall_1_0(), currentNode); 
	    }
		lv_requiredCapability_1_0=ruleRequiredCapability_Unfiltered		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCapabilityBuildResultReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"requiredCapability",
	        		lv_requiredCapability_1_0, 
	        		"RequiredCapability_Unfiltered", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'.' 
    {
        createLeafNode(grammarAccess.getCapabilityBuildResultReferenceAccess().getFullStopKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCapabilityBuildResultReferenceAccess().getBuilderNameBuilderNameParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_builderName_3_0=ruleBuilderName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCapabilityBuildResultReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"builderName",
	        		lv_builderName_3_0, 
	        		"BuilderName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'(' 
    {
        createLeafNode(grammarAccess.getCapabilityBuildResultReferenceAccess().getLeftParenthesisKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCapabilityBuildResultReferenceAccess().getParametersParameterListParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_parameters_5_0=ruleParameterList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCapabilityBuildResultReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameters",
	        		lv_parameters_5_0, 
	        		"ParameterList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	')' 
    {
        createLeafNode(grammarAccess.getCapabilityBuildResultReferenceAccess().getRightParenthesisKeyword_3_2(), null); 
    }
))
;





// Entry rule entryRuleIndirectCapabilityBuildResultReference
entryRuleIndirectCapabilityBuildResultReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getIndirectCapabilityBuildResultReferenceRule(), currentNode); }
	 iv_ruleIndirectCapabilityBuildResultReference=ruleIndirectCapabilityBuildResultReference 
	 { $current=$iv_ruleIndirectCapabilityBuildResultReference.current; } 
	 EOF 
;

// Rule IndirectCapabilityBuildResultReference
ruleIndirectCapabilityBuildResultReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getIndirectCapabilityBuildResultReferenceAccess().getBuilderReferenceAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getIndirectCapabilityBuildResultReferenceAccess().getBuilderReferenceAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getIndirectCapabilityBuildResultReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getIndirectCapabilityBuildResultReferenceAccess().getRequiredCapabilityReferenceAliasedRequiredCapabilityCrossReference_1_0(), "requiredCapabilityReference"); 
	}

)
)(	'.' 
    {
        createLeafNode(grammarAccess.getIndirectCapabilityBuildResultReferenceAccess().getFullStopKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getIndirectCapabilityBuildResultReferenceAccess().getBuilderNameBuilderNameParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_builderName_3_0=ruleBuilderName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getIndirectCapabilityBuildResultReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"builderName",
	        		lv_builderName_3_0, 
	        		"BuilderName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'(' 
    {
        createLeafNode(grammarAccess.getIndirectCapabilityBuildResultReferenceAccess().getLeftParenthesisKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getIndirectCapabilityBuildResultReferenceAccess().getParametersParameterListParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_parameters_5_0=ruleParameterList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getIndirectCapabilityBuildResultReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameters",
	        		lv_parameters_5_0, 
	        		"ParameterList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	')' 
    {
        createLeafNode(grammarAccess.getIndirectCapabilityBuildResultReferenceAccess().getRightParenthesisKeyword_3_2(), null); 
    }
))
;





// Entry rule entryRuleCompoundBuildResultReference
entryRuleCompoundBuildResultReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCompoundBuildResultReferenceRule(), currentNode); }
	 iv_ruleCompoundBuildResultReference=ruleCompoundBuildResultReference 
	 { $current=$iv_ruleCompoundBuildResultReference.current; } 
	 EOF 
;

// Rule CompoundBuildResultReference
ruleCompoundBuildResultReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getCompoundBuildResultReferenceAccess().getCompoundBuildResultReferenceAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getCompoundBuildResultReferenceAccess().getCompoundBuildResultReferenceAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'[' 
    {
        createLeafNode(grammarAccess.getCompoundBuildResultReferenceAccess().getLeftSquareBracketKeyword_1(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompoundBuildResultReferenceAccess().getPrerequisitesPrerequisiteParserRuleCall_2_0_0(), currentNode); 
	    }
		lv_prerequisites_2_0=rulePrerequisite		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompoundBuildResultReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"prerequisites",
	        		lv_prerequisites_2_0, 
	        		"Prerequisite", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getCompoundBuildResultReferenceAccess().getCommaKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompoundBuildResultReferenceAccess().getPrerequisitesPrerequisiteParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_prerequisites_4_0=rulePrerequisite		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompoundBuildResultReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"prerequisites",
	        		lv_prerequisites_4_0, 
	        		"Prerequisite", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	']' 
    {
        createLeafNode(grammarAccess.getCompoundBuildResultReferenceAccess().getRightSquareBracketKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleBuilder
entryRuleBuilder returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBuilderRule(), currentNode); }
	 iv_ruleBuilder=ruleBuilder 
	 { $current=$iv_ruleBuilder.current; } 
	 EOF 
;

// Rule Builder
ruleBuilder returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBuilderAccess().getBuilderAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBuilderAccess().getBuilderAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_documentation_1_0=RULE_DOCUMENTATION
		{
			createLeafNode(grammarAccess.getBuilderAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"documentation",
	        		lv_documentation_1_0, 
	        		"DOCUMENTATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getVisibilityVisibilityEnumRuleCall_2_0(), currentNode); 
	    }
		lv_visibility_2_0=ruleVisibility		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_2_0, 
	        		"Visibility", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getExecutionModeExecutionModeEnumRuleCall_3_0(), currentNode); 
	    }
		lv_executionMode_3_0=ruleExecutionMode		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"executionMode",
	        		lv_executionMode_3_0, 
	        		"ExecutionMode", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		lv_final_4_0=	'final' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getFinalFinalKeyword_4_0(), "final"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "final", true, "final", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'builder' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getBuilderKeyword_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getNameBuilderNameParserRuleCall_6_0(), currentNode); 
	    }
		lv_name_6_0=ruleBuilderName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_6_0, 
	        		"BuilderName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'(' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getLeftParenthesisKeyword_7_0(), null); 
    }
(((((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getExplicitUnitTypeTypeRefParserRuleCall_7_1_0_0_0_0_0(), currentNode); 
	    }
		lv_explicitUnitType_8_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"explicitUnitType",
	        		lv_explicitUnitType_8_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'unit' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getUnitKeyword_7_1_0_0_0_1(), null); 
    }
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getParametersParameterDeclarationParserRuleCall_7_1_0_0_1_0(), currentNode); 
	    }
		lv_parameters_10_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_10_0, 
	        		"ParameterDeclaration", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(	',' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getCommaKeyword_7_1_0_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getParametersParameterDeclarationParserRuleCall_7_1_0_1_1_0(), currentNode); 
	    }
		lv_parameters_12_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_12_0, 
	        		"ParameterDeclaration", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(	',' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getCommaKeyword_7_1_0_2_0(), null); 
    }
(
(
		lv_varArgs_14_0=	'...' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getVarArgsFullStopFullStopFullStopKeyword_7_1_0_2_1_0(), "varArgs"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "varArgs", true, "...", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getParametersParameterDeclarationParserRuleCall_7_1_0_2_2_0(), currentNode); 
	    }
		lv_parameters_15_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_15_0, 
	        		"ParameterDeclaration", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
    |((
(
		lv_varArgs_16_0=	'...' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getVarArgsFullStopFullStopFullStopKeyword_7_1_1_0_0(), "varArgs"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "varArgs", true, "...", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getParametersParameterDeclarationParserRuleCall_7_1_1_1_0(), currentNode); 
	    }
		lv_parameters_17_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_17_0, 
	        		"ParameterDeclaration", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))?	')' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getRightParenthesisKeyword_7_2(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getGuardGuardExpressionParserRuleCall_8_0(), currentNode); 
	    }
		lv_guard_19_0=ruleGuardExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"guard",
	        		lv_guard_19_0, 
	        		"GuardExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getPrecondExprPreConditionParserRuleCall_9_0(), currentNode); 
	    }
		lv_precondExpr_20_0=rulePreCondition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"precondExpr",
	        		lv_precondExpr_20_0, 
	        		"PreCondition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getPostcondExprPostConditionParserRuleCall_10_0(), currentNode); 
	    }
		lv_postcondExpr_21_0=rulePostCondition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"postcondExpr",
	        		lv_postcondExpr_21_0, 
	        		"PostCondition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'{' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getLeftCurlyBracketKeyword_11(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getBuilderAccess().getUnorderedGroup_12());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBuilderAccess().getUnorderedGroup_12(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBuilderAccess().getUnorderedGroup_12(), 0);
	 				}
					(	'provides' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getProvidesKeyword_12_0_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getColonKeyword_12_0_1(), null); 
    }
((	'[' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getLeftSquareBracketKeyword_12_0_2_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_12_0_2_0_1_0(), currentNode); 
	    }
		lv_providedCapabilities_27_0=ruleProvidedCapability		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providedCapabilities",
	        		lv_providedCapabilities_27_0, 
	        		"ProvidedCapability", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getCommaKeyword_12_0_2_0_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_12_0_2_0_2_1_0(), currentNode); 
	    }
		lv_providedCapabilities_29_0=ruleProvidedCapability		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providedCapabilities",
	        		lv_providedCapabilities_29_0, 
	        		"ProvidedCapability", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getRightSquareBracketKeyword_12_0_2_0_3(), null); 
    }
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_12_0_2_1_0(), currentNode); 
	    }
		lv_providedCapabilities_31_0=ruleProvidedCapability		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providedCapabilities",
	        		lv_providedCapabilities_31_0, 
	        		"ProvidedCapability", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	';' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getSemicolonKeyword_12_0_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBuilderAccess().getUnorderedGroup_12());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBuilderAccess().getUnorderedGroup_12(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBuilderAccess().getUnorderedGroup_12(), 1);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getDefaultPropertiesPropertySetDefaultParserRuleCall_12_1_0(), currentNode); 
	    }
		lv_defaultProperties_33_0=rulePropertySetDefault		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"defaultProperties",
	        		lv_defaultProperties_33_0, 
	        		"PropertySetDefault", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBuilderAccess().getUnorderedGroup_12());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getBuilderAccess().getUnorderedGroup_12());
	}

)?(	'input' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getInputKeyword_13_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getColonKeyword_13_1(), null); 
    }
	'[' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getLeftSquareBracketKeyword_13_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getInputBuilderInputParserRuleCall_13_3_0(), currentNode); 
	    }
		lv_input_37_0=ruleBuilderInput		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"input",
	        		lv_input_37_0, 
	        		"BuilderInput", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	']' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getRightSquareBracketKeyword_13_4(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getSemicolonKeyword_13_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getPostinputcondExprPostInputConditionParserRuleCall_13_6_0(), currentNode); 
	    }
		lv_postinputcondExpr_40_0=rulePostInputCondition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"postinputcondExpr",
	        		lv_postinputcondExpr_40_0, 
	        		"PostInputCondition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)?(	'source' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getSourceKeyword_14_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getColonKeyword_14_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getSourcePathGroupParserRuleCall_14_2_0(), currentNode); 
	    }
		lv_source_43_0=rulePathGroup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"source",
	        		lv_source_43_0, 
	        		"PathGroup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getSemicolonKeyword_14_3(), null); 
    }
)?(	'output' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getOutputKeyword_15_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getColonKeyword_15_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getOutputPathGroupParserRuleCall_15_2_0(), currentNode); 
	    }
		lv_output_47_0=rulePathGroup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"output",
	        		lv_output_47_0, 
	        		"PathGroup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getSemicolonKeyword_15_3(), null); 
    }
)?(	'result' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getResultKeyword_16_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getColonKeyword_16_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAccess().getFuncExprExpressionParserRuleCall_16_2_0(), currentNode); 
	    }
		lv_funcExpr_51_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"funcExpr",
	        		lv_funcExpr_51_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getSemicolonKeyword_16_3(), null); 
    }
)?	'}' 
    {
        createLeafNode(grammarAccess.getBuilderAccess().getRightCurlyBracketKeyword_17(), null); 
    }
)
;





// Entry rule entryRulePreCondition
entryRulePreCondition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPreConditionRule(), currentNode); }
	 iv_rulePreCondition=rulePreCondition 
	 { $current=$iv_rulePreCondition.current; } 
	 EOF 
;

// Rule PreCondition
rulePreCondition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'@precondition' 
    {
        createLeafNode(grammarAccess.getPreConditionAccess().getPreconditionKeyword_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getPreConditionAccess().getColonKeyword_1(), null); 
    }

	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPreConditionAccess().getExpressionParserRuleCall_2(), currentNode); 
    }
    this_Expression_2=ruleExpression
    { 
        $current = $this_Expression_2.current; 
        currentNode = currentNode.getParent();
    }
	';' 
    {
        createLeafNode(grammarAccess.getPreConditionAccess().getSemicolonKeyword_3(), null); 
    }
)
;





// Entry rule entryRulePostCondition
entryRulePostCondition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPostConditionRule(), currentNode); }
	 iv_rulePostCondition=rulePostCondition 
	 { $current=$iv_rulePostCondition.current; } 
	 EOF 
;

// Rule PostCondition
rulePostCondition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'@postcondition' 
    {
        createLeafNode(grammarAccess.getPostConditionAccess().getPostconditionKeyword_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getPostConditionAccess().getColonKeyword_1(), null); 
    }

	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPostConditionAccess().getExpressionParserRuleCall_2(), currentNode); 
    }
    this_Expression_2=ruleExpression
    { 
        $current = $this_Expression_2.current; 
        currentNode = currentNode.getParent();
    }
	';' 
    {
        createLeafNode(grammarAccess.getPostConditionAccess().getSemicolonKeyword_3(), null); 
    }
)
;





// Entry rule entryRulePostInputCondition
entryRulePostInputCondition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPostInputConditionRule(), currentNode); }
	 iv_rulePostInputCondition=rulePostInputCondition 
	 { $current=$iv_rulePostInputCondition.current; } 
	 EOF 
;

// Rule PostInputCondition
rulePostInputCondition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'@postinputcondition' 
    {
        createLeafNode(grammarAccess.getPostInputConditionAccess().getPostinputconditionKeyword_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getPostInputConditionAccess().getColonKeyword_1(), null); 
    }

	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPostInputConditionAccess().getExpressionParserRuleCall_2(), currentNode); 
    }
    this_Expression_2=ruleExpression
    { 
        $current = $this_Expression_2.current; 
        currentNode = currentNode.getParent();
    }
	';' 
    {
        createLeafNode(grammarAccess.getPostInputConditionAccess().getSemicolonKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleParameterList
entryRuleParameterList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getParameterListRule(), currentNode); }
	 iv_ruleParameterList=ruleParameterList 
	 { $current=$iv_ruleParameterList.current; } 
	 EOF 
;

// Rule ParameterList
ruleParameterList returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getParameterListAccess().getBParameterListAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getParameterListAccess().getBParameterListAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParameterListAccess().getParametersParameterOrClosureParserRuleCall_1_0(), currentNode); 
	    }
		lv_parameters_1_0=ruleParameterOrClosure		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_1_0, 
	        		"ParameterOrClosure", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getParameterListAccess().getCommaKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParameterListAccess().getParametersParameterOrClosureParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_parameters_3_0=ruleParameterOrClosure		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_3_0, 
	        		"ParameterOrClosure", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleParameterOrClosure
entryRuleParameterOrClosure returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getParameterOrClosureRule(), currentNode); }
	 iv_ruleParameterOrClosure=ruleParameterOrClosure 
	 { $current=$iv_ruleParameterOrClosure.current; } 
	 EOF 
;

// Rule ParameterOrClosure
ruleParameterOrClosure returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getParameterOrClosureAccess().getClosureParameterParserRuleCall_0(), currentNode); 
    }
    this_ClosureParameter_0=ruleClosureParameter
    { 
        $current = $this_ClosureParameter_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getParameterOrClosureAccess().getParameterParserRuleCall_1(), currentNode); 
    }
    this_Parameter_1=ruleParameter
    { 
        $current = $this_Parameter_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getParameterRule(), currentNode); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getParameterAccess().getBParameterAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getParameterAccess().getBParameterAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParameterAccess().getExprExpressionParserRuleCall_1_0(), currentNode); 
	    }
		lv_expr_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_1_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleClosureParameter
entryRuleClosureParameter returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getClosureParameterRule(), currentNode); }
	 iv_ruleClosureParameter=ruleClosureParameter 
	 { $current=$iv_ruleClosureParameter.current; } 
	 EOF 
;

// Rule ClosureParameter
ruleClosureParameter returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getClosureParameterAccess().getBParameterAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getClosureParameterAccess().getBParameterAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getClosureParameterAccess().getExprClosureExpressionParserRuleCall_1_0(), currentNode); 
	    }
		lv_expr_1_0=ruleClosureExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getClosureParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_1_0, 
	        		"ClosureExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleParameterDeclaration
entryRuleParameterDeclaration returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getParameterDeclarationRule(), currentNode); }
	 iv_ruleParameterDeclaration=ruleParameterDeclaration 
	 { $current=$iv_ruleParameterDeclaration.current; } 
	 EOF 
;

// Rule ParameterDeclaration
ruleParameterDeclaration returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getParameterDeclarationAccess().getBParameterDeclarationAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getParameterDeclarationAccess().getBParameterDeclarationAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParameterDeclarationAccess().getTypeTypeRefParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_type_1_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_1_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParameterDeclarationAccess().getNameID_or_KWParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_name_2_0=ruleID_or_KW		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID_or_KW", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))
;





// Entry rule entryRuleBuilderInput
entryRuleBuilderInput returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBuilderInputRule(), currentNode); }
	 iv_ruleBuilderInput=ruleBuilderInput 
	 { $current=$iv_ruleBuilderInput.current; } 
	 EOF 
;

// Rule BuilderInput
ruleBuilderInput returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBuilderInputAccess().getBuilderInputAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBuilderInputAccess().getBuilderInputAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderInputAccess().getPrerequisitesPrerequisiteParserRuleCall_1_0(), currentNode); 
	    }
		lv_prerequisites_1_0=rulePrerequisite		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderInputRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"prerequisites",
	        		lv_prerequisites_1_0, 
	        		"Prerequisite", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getBuilderInputAccess().getCommaKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderInputAccess().getPrerequisitesPrerequisiteParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_prerequisites_3_0=rulePrerequisite		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderInputRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"prerequisites",
	        		lv_prerequisites_3_0, 
	        		"Prerequisite", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleRepository
entryRuleRepository returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRepositoryRule(), currentNode); }
	 iv_ruleRepository=ruleRepository 
	 { $current=$iv_ruleRepository.current; } 
	 EOF 
;

// Rule Repository
ruleRepository returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getRepositoryAccess().getRepositoryAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRepositoryAccess().getRepositoryAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_documentation_1_0=RULE_DOCUMENTATION
		{
			createLeafNode(grammarAccess.getRepositoryAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRepositoryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"documentation",
	        		lv_documentation_1_0, 
	        		"DOCUMENTATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'repository' 
    {
        createLeafNode(grammarAccess.getRepositoryAccess().getRepositoryKeyword_2(), null); 
    }
(
(
		lv_handlerType_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getRepositoryAccess().getHandlerTypeIDTerminalRuleCall_3_0(), "handlerType"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRepositoryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"handlerType",
	        		lv_handlerType_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getRepositoryAccess().getNameIDTerminalRuleCall_4_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRepositoryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)((	':' 
    {
        createLeafNode(grammarAccess.getRepositoryAccess().getColonKeyword_5_0_0(), null); 
    }
	'connection' 
    {
        createLeafNode(grammarAccess.getRepositoryAccess().getConnectionKeyword_5_0_1(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getRepositoryAccess().getColonKeyword_5_0_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRepositoryAccess().getAddressExpressionParserRuleCall_5_0_3_0(), currentNode); 
	    }
		lv_address_8_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRepositoryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"address",
	        		lv_address_8_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getRepositoryAccess().getSemicolonKeyword_5_0_4(), null); 
    }
)
    |(	'{' 
    {
        createLeafNode(grammarAccess.getRepositoryAccess().getLeftCurlyBracketKeyword_5_1_0(), null); 
    }
(	'connection' 
    {
        createLeafNode(grammarAccess.getRepositoryAccess().getConnectionKeyword_5_1_1_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getRepositoryAccess().getColonKeyword_5_1_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRepositoryAccess().getAddressExpressionParserRuleCall_5_1_1_2_0(), currentNode); 
	    }
		lv_address_13_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRepositoryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"address",
	        		lv_address_13_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getRepositoryAccess().getSemicolonKeyword_5_1_1_3(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRepositoryAccess().getOptionsRepoOptionParserRuleCall_5_1_2_0(), currentNode); 
	    }
		lv_options_15_0=ruleRepoOption		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRepositoryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"options",
	        		lv_options_15_0, 
	        		"RepoOption", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(	'branches' 
    {
        createLeafNode(grammarAccess.getRepositoryAccess().getBranchesKeyword_5_1_3_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getRepositoryAccess().getColonKeyword_5_1_3_1(), null); 
    }
	'[' 
    {
        createLeafNode(grammarAccess.getRepositoryAccess().getLeftSquareBracketKeyword_5_1_3_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRepositoryAccess().getBranchesBranchParserRuleCall_5_1_3_3_0(), currentNode); 
	    }
		lv_branches_19_0=ruleBranch		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRepositoryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"branches",
	        		lv_branches_19_0, 
	        		"Branch", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getRepositoryAccess().getCommaKeyword_5_1_3_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRepositoryAccess().getBranchesBranchParserRuleCall_5_1_3_4_1_0(), currentNode); 
	    }
		lv_branches_21_0=ruleBranch		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRepositoryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"branches",
	        		lv_branches_21_0, 
	        		"Branch", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getRepositoryAccess().getRightSquareBracketKeyword_5_1_3_5(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getRepositoryAccess().getSemicolonKeyword_5_1_3_6(), null); 
    }
)?	'}' 
    {
        createLeafNode(grammarAccess.getRepositoryAccess().getRightCurlyBracketKeyword_5_1_4(), null); 
    }
)))
;





// Entry rule entryRuleBranch
entryRuleBranch returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBranchRule(), currentNode); }
	 iv_ruleBranch=ruleBranch 
	 { $current=$iv_ruleBranch.current; } 
	 EOF 
;

// Rule Branch
ruleBranch returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBranchAccess().getBranchAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBranchAccess().getBranchAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_documentation_1_0=RULE_DOCUMENTATION
		{
			createLeafNode(grammarAccess.getBranchAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBranchRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"documentation",
	        		lv_documentation_1_0, 
	        		"DOCUMENTATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'branch' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getBranchKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBranchAccess().getNameEscapedQualifiedNameParserRuleCall_3_0(), currentNode); 
	    }
		lv_name_3_0=ruleEscapedQualifiedName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBranchRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"EscapedQualifiedName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getBranchAccess().getUnorderedGroup_5());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBranchAccess().getUnorderedGroup_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBranchAccess().getUnorderedGroup_5(), 0);
	 				}
					(((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBranchAccess().getBranchPointTypeBranchPointTypeLatestEnumRuleCall_5_0_0_0_0(), currentNode); 
	    }
		lv_branchPointType_6_0=ruleBranchPointTypeLatest		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBranchRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"branchPointType",
	        		lv_branchPointType_6_0, 
	        		"BranchPointTypeLatest", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getSemicolonKeyword_5_0_0_1(), null); 
    }
)
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBranchAccess().getBranchPointTypeBranchPointTypeOtherEnumRuleCall_5_0_1_0_0(), currentNode); 
	    }
		lv_branchPointType_8_0=ruleBranchPointTypeOther		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBranchRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"branchPointType",
	        		lv_branchPointType_8_0, 
	        		"BranchPointTypeOther", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getColonKeyword_5_0_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBranchAccess().getBranchPointExpressionParserRuleCall_5_0_1_2_0(), currentNode); 
	    }
		lv_branchPoint_10_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBranchRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"branchPoint",
	        		lv_branchPoint_10_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getSemicolonKeyword_5_0_1_3(), null); 
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBranchAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBranchAccess().getUnorderedGroup_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBranchAccess().getUnorderedGroup_5(), 1);
	 				}
					(	'update-policy' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getUpdatePolicyKeyword_5_1_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getColonKeyword_5_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBranchAccess().getUpdateStrategyUpdateStrategyEnumRuleCall_5_1_2_0(), currentNode); 
	    }
		lv_updateStrategy_14_0=ruleUpdateStrategy		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBranchRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"updateStrategy",
	        		lv_updateStrategy_14_0, 
	        		"UpdateStrategy", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getSemicolonKeyword_5_1_3(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBranchAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBranchAccess().getUnorderedGroup_5(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBranchAccess().getUnorderedGroup_5(), 2);
	 				}
					(	'exclude' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getExcludeKeyword_5_2_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getColonKeyword_5_2_1(), null); 
    }
	'[' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getLeftSquareBracketKeyword_5_2_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBranchAccess().getExcludeNamePredicateParserRuleCall_5_2_3_0(), currentNode); 
	    }
		lv_exclude_19_0=ruleNamePredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBranchRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"exclude",
	        		lv_exclude_19_0, 
	        		"NamePredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getCommaKeyword_5_2_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBranchAccess().getExcludeNamePredicateParserRuleCall_5_2_4_1_0(), currentNode); 
	    }
		lv_exclude_21_0=ruleNamePredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBranchRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"exclude",
	        		lv_exclude_21_0, 
	        		"NamePredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getRightSquareBracketKeyword_5_2_5(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getSemicolonKeyword_5_2_6(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBranchAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBranchAccess().getUnorderedGroup_5(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBranchAccess().getUnorderedGroup_5(), 3);
	 				}
					(	'include' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getIncludeKeyword_5_3_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getColonKeyword_5_3_1(), null); 
    }
	'[' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getLeftSquareBracketKeyword_5_3_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBranchAccess().getIncludeNamePredicateParserRuleCall_5_3_3_0(), currentNode); 
	    }
		lv_include_27_0=ruleNamePredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBranchRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"include",
	        		lv_include_27_0, 
	        		"NamePredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getCommaKeyword_5_3_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBranchAccess().getIncludeNamePredicateParserRuleCall_5_3_4_1_0(), currentNode); 
	    }
		lv_include_29_0=ruleNamePredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBranchRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"include",
	        		lv_include_29_0, 
	        		"NamePredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getRightSquareBracketKeyword_5_3_5(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getSemicolonKeyword_5_3_6(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBranchAccess().getUnorderedGroup_5());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getBranchAccess().getUnorderedGroup_5());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getBranchAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;







// Entry rule entryRuleUnitProvider
entryRuleUnitProvider returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnitProviderRule(), currentNode); }
	 iv_ruleUnitProvider=ruleUnitProvider 
	 { $current=$iv_ruleUnitProvider.current; } 
	 EOF 
;

// Rule UnitProvider
ruleUnitProvider returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getUnitProviderAccess().getFirstFoundUnitProviderParserRuleCall_0(), currentNode); 
    }
    this_FirstFoundUnitProvider_0=ruleFirstFoundUnitProvider
    { 
        $current = $this_FirstFoundUnitProvider_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getUnitProviderAccess().getBestFoundUnitProviderParserRuleCall_1(), currentNode); 
    }
    this_BestFoundUnitProvider_1=ruleBestFoundUnitProvider
    { 
        $current = $this_BestFoundUnitProvider_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getUnitProviderAccess().getSwitchUnitProviderParserRuleCall_2(), currentNode); 
    }
    this_SwitchUnitProvider_2=ruleSwitchUnitProvider
    { 
        $current = $this_SwitchUnitProvider_2.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getUnitProviderAccess().getRepositoryUnitProviderParserRuleCall_3(), currentNode); 
    }
    this_RepositoryUnitProvider_3=ruleRepositoryUnitProvider
    { 
        $current = $this_RepositoryUnitProvider_3.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleRepositoryUnitProvider
entryRuleRepositoryUnitProvider returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRepositoryUnitProviderRule(), currentNode); }
	 iv_ruleRepositoryUnitProvider=ruleRepositoryUnitProvider 
	 { $current=$iv_ruleRepositoryUnitProvider.current; } 
	 EOF 
;

// Rule RepositoryUnitProvider
ruleRepositoryUnitProvider returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getRepositoryUnitProviderAccess().getRepositoryUnitProviderAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRepositoryUnitProviderAccess().getRepositoryUnitProviderAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_documentation_1_0=RULE_DOCUMENTATION
		{
			createLeafNode(grammarAccess.getRepositoryUnitProviderAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRepositoryUnitProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"documentation",
	        		lv_documentation_1_0, 
	        		"DOCUMENTATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'repository' 
    {
        createLeafNode(grammarAccess.getRepositoryUnitProviderAccess().getRepositoryKeyword_2(), null); 
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRepositoryUnitProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getRepositoryUnitProviderAccess().getRepositoryRepositoryCrossReference_3_0(), "repository"); 
	}

)
)(	'{' 
    {
        createLeafNode(grammarAccess.getRepositoryUnitProviderAccess().getLeftCurlyBracketKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRepositoryUnitProviderAccess().getOptionsRepoOptionParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_options_5_0=ruleRepoOption		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRepositoryUnitProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"options",
	        		lv_options_5_0, 
	        		"RepoOption", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getRepositoryUnitProviderAccess().getRightCurlyBracketKeyword_4_2(), null); 
    }
)?)
;





// Entry rule entryRuleRepoOption
entryRuleRepoOption returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRepoOptionRule(), currentNode); }
	 iv_ruleRepoOption=ruleRepoOption 
	 { $current=$iv_ruleRepoOption.current; } 
	 EOF 
;

// Rule RepoOption
ruleRepoOption returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getRepoOptionAccess().getRepoOptionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRepoOptionAccess().getRepoOptionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getRepoOptionAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRepoOptionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getRepoOptionAccess().getColonKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRepoOptionAccess().getExprExpressionParserRuleCall_3_0(), currentNode); 
	    }
		lv_expr_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRepoOptionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_3_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getRepoOptionAccess().getSemicolonKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleTopLevelUnitProvider
entryRuleTopLevelUnitProvider returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTopLevelUnitProviderRule(), currentNode); }
	 iv_ruleTopLevelUnitProvider=ruleTopLevelUnitProvider 
	 { $current=$iv_ruleTopLevelUnitProvider.current; } 
	 EOF 
;

// Rule TopLevelUnitProvider
ruleTopLevelUnitProvider returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getTopLevelUnitProviderAccess().getFirstFoundUnitProviderAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getTopLevelUnitProviderAccess().getFirstFoundUnitProviderAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_documentation_1_0=RULE_DOCUMENTATION
		{
			createLeafNode(grammarAccess.getTopLevelUnitProviderAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTopLevelUnitProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"documentation",
	        		lv_documentation_1_0, 
	        		"DOCUMENTATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'resolution' 
    {
        createLeafNode(grammarAccess.getTopLevelUnitProviderAccess().getResolutionKeyword_2(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getTopLevelUnitProviderAccess().getColonKeyword_3(), null); 
    }
	'[' 
    {
        createLeafNode(grammarAccess.getTopLevelUnitProviderAccess().getLeftSquareBracketKeyword_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTopLevelUnitProviderAccess().getProvidersUnitProviderParserRuleCall_5_0(), currentNode); 
	    }
		lv_providers_5_0=ruleUnitProvider		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTopLevelUnitProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providers",
	        		lv_providers_5_0, 
	        		"UnitProvider", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getTopLevelUnitProviderAccess().getCommaKeyword_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTopLevelUnitProviderAccess().getProvidersUnitProviderParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_providers_7_0=ruleUnitProvider		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTopLevelUnitProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providers",
	        		lv_providers_7_0, 
	        		"UnitProvider", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getTopLevelUnitProviderAccess().getRightSquareBracketKeyword_7(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getTopLevelUnitProviderAccess().getSemicolonKeyword_8(), null); 
    }
)
;





// Entry rule entryRuleFirstFoundUnitProvider
entryRuleFirstFoundUnitProvider returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFirstFoundUnitProviderRule(), currentNode); }
	 iv_ruleFirstFoundUnitProvider=ruleFirstFoundUnitProvider 
	 { $current=$iv_ruleFirstFoundUnitProvider.current; } 
	 EOF 
;

// Rule FirstFoundUnitProvider
ruleFirstFoundUnitProvider returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getFirstFoundUnitProviderAccess().getFirstFoundUnitProviderAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getFirstFoundUnitProviderAccess().getFirstFoundUnitProviderAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_documentation_1_0=RULE_DOCUMENTATION
		{
			createLeafNode(grammarAccess.getFirstFoundUnitProviderAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFirstFoundUnitProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"documentation",
	        		lv_documentation_1_0, 
	        		"DOCUMENTATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'select-first' 
    {
        createLeafNode(grammarAccess.getFirstFoundUnitProviderAccess().getSelectFirstKeyword_2(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getFirstFoundUnitProviderAccess().getColonKeyword_3(), null); 
    }
	'[' 
    {
        createLeafNode(grammarAccess.getFirstFoundUnitProviderAccess().getLeftSquareBracketKeyword_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFirstFoundUnitProviderAccess().getProvidersUnitProviderParserRuleCall_5_0(), currentNode); 
	    }
		lv_providers_5_0=ruleUnitProvider		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFirstFoundUnitProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providers",
	        		lv_providers_5_0, 
	        		"UnitProvider", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getFirstFoundUnitProviderAccess().getCommaKeyword_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFirstFoundUnitProviderAccess().getProvidersUnitProviderParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_providers_7_0=ruleUnitProvider		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFirstFoundUnitProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providers",
	        		lv_providers_7_0, 
	        		"UnitProvider", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getFirstFoundUnitProviderAccess().getRightSquareBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleBestFoundUnitProvider
entryRuleBestFoundUnitProvider returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBestFoundUnitProviderRule(), currentNode); }
	 iv_ruleBestFoundUnitProvider=ruleBestFoundUnitProvider 
	 { $current=$iv_ruleBestFoundUnitProvider.current; } 
	 EOF 
;

// Rule BestFoundUnitProvider
ruleBestFoundUnitProvider returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBestFoundUnitProviderAccess().getBestFoundUnitProviderAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBestFoundUnitProviderAccess().getBestFoundUnitProviderAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_documentation_1_0=RULE_DOCUMENTATION
		{
			createLeafNode(grammarAccess.getBestFoundUnitProviderAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBestFoundUnitProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"documentation",
	        		lv_documentation_1_0, 
	        		"DOCUMENTATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'select-best' 
    {
        createLeafNode(grammarAccess.getBestFoundUnitProviderAccess().getSelectBestKeyword_2(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBestFoundUnitProviderAccess().getColonKeyword_3(), null); 
    }
	'[' 
    {
        createLeafNode(grammarAccess.getBestFoundUnitProviderAccess().getLeftSquareBracketKeyword_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBestFoundUnitProviderAccess().getProvidersUnitProviderParserRuleCall_5_0(), currentNode); 
	    }
		lv_providers_5_0=ruleUnitProvider		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBestFoundUnitProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providers",
	        		lv_providers_5_0, 
	        		"UnitProvider", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getBestFoundUnitProviderAccess().getCommaKeyword_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBestFoundUnitProviderAccess().getProvidersUnitProviderParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_providers_7_0=ruleUnitProvider		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBestFoundUnitProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providers",
	        		lv_providers_7_0, 
	        		"UnitProvider", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getBestFoundUnitProviderAccess().getRightSquareBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleSwitchUnitProvider
entryRuleSwitchUnitProvider returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSwitchUnitProviderRule(), currentNode); }
	 iv_ruleSwitchUnitProvider=ruleSwitchUnitProvider 
	 { $current=$iv_ruleSwitchUnitProvider.current; } 
	 EOF 
;

// Rule SwitchUnitProvider
ruleSwitchUnitProvider returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getSwitchUnitProviderAccess().getSwitchUnitProviderAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSwitchUnitProviderAccess().getSwitchUnitProviderAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_documentation_1_0=RULE_DOCUMENTATION
		{
			createLeafNode(grammarAccess.getSwitchUnitProviderAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSwitchUnitProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"documentation",
	        		lv_documentation_1_0, 
	        		"DOCUMENTATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'select-switch' 
    {
        createLeafNode(grammarAccess.getSwitchUnitProviderAccess().getSelectSwitchKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSwitchUnitProviderAccess().getRepoSwitchSelectSwitchExpressionParserRuleCall_3_0(), currentNode); 
	    }
		lv_repoSwitch_3_0=ruleSelectSwitchExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSwitchUnitProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"repoSwitch",
	        		lv_repoSwitch_3_0, 
	        		"SelectSwitchExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleSelectSwitchExpression
entryRuleSelectSwitchExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectSwitchExpressionRule(), currentNode); }
	 iv_ruleSelectSwitchExpression=ruleSelectSwitchExpression 
	 { $current=$iv_ruleSelectSwitchExpression.current; } 
	 EOF 
;

// Rule SelectSwitchExpression
ruleSelectSwitchExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getSelectSwitchExpressionAccess().getBSwitchExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSelectSwitchExpressionAccess().getBSwitchExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectSwitchExpressionAccess().getSwitchExpressionExpressionParserRuleCall_1_0(), currentNode); 
	    }
		lv_switchExpression_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectSwitchExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"switchExpression",
	        		lv_switchExpression_1_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectSwitchExpressionAccess().getCaseListRepositorySelectCaseParserRuleCall_2_0(), currentNode); 
	    }
		lv_caseList_2_0=ruleRepositorySelectCase		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectSwitchExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"caseList",
	        		lv_caseList_2_0, 
	        		"RepositorySelectCase", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)+	'endswitch' 
    {
        createLeafNode(grammarAccess.getSelectSwitchExpressionAccess().getEndswitchKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleRepositorySelectCase
entryRuleRepositorySelectCase returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRepositorySelectCaseRule(), currentNode); }
	 iv_ruleRepositorySelectCase=ruleRepositorySelectCase 
	 { $current=$iv_ruleRepositorySelectCase.current; } 
	 EOF 
;

// Rule RepositorySelectCase
ruleRepositorySelectCase returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getRepositorySelectCaseAccess().getBCaseAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRepositorySelectCaseAccess().getBCaseAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)((	'case' 
    {
        createLeafNode(grammarAccess.getRepositorySelectCaseAccess().getCaseKeyword_1_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRepositorySelectCaseAccess().getConditionExprExpressionParserRuleCall_1_0_1_0(), currentNode); 
	    }
		lv_conditionExpr_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRepositorySelectCaseRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"conditionExpr",
	        		lv_conditionExpr_2_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |	'default' 
    {
        createLeafNode(grammarAccess.getRepositorySelectCaseAccess().getDefaultKeyword_1_1(), null); 
    }
)	':' 
    {
        createLeafNode(grammarAccess.getRepositorySelectCaseAccess().getColonKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRepositorySelectCaseAccess().getThenExprUnitProviderParserRuleCall_3_0(), currentNode); 
	    }
		lv_thenExpr_5_0=ruleUnitProvider		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRepositorySelectCaseRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"thenExpr",
	        		lv_thenExpr_5_0, 
	        		"UnitProvider", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleContainerConfiguration
entryRuleContainerConfiguration returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getContainerConfigurationRule(), currentNode); }
	 iv_ruleContainerConfiguration=ruleContainerConfiguration 
	 { $current=$iv_ruleContainerConfiguration.current; } 
	 EOF 
;

// Rule ContainerConfiguration
ruleContainerConfiguration returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getContainerConfigurationAccess().getContainerConfigurationAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getContainerConfigurationAccess().getContainerConfigurationAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_documentation_1_0=RULE_DOCUMENTATION
		{
			createLeafNode(grammarAccess.getContainerConfigurationAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContainerConfigurationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"documentation",
	        		lv_documentation_1_0, 
	        		"DOCUMENTATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'container' 
    {
        createLeafNode(grammarAccess.getContainerConfigurationAccess().getContainerKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContainerConfigurationAccess().getAgentTypeTypeRefParserRuleCall_3_0(), currentNode); 
	    }
		lv_agentType_3_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContainerConfigurationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"agentType",
	        		lv_agentType_3_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getContainerConfigurationAccess().getNameIDTerminalRuleCall_4_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContainerConfigurationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContainerConfigurationAccess().getContextBlockBlockExpressionParserRuleCall_5_0_0(), currentNode); 
	    }
		lv_contextBlock_5_0=ruleBlockExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContainerConfigurationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"contextBlock",
	        		lv_contextBlock_5_0, 
	        		"BlockExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |	';' 
    {
        createLeafNode(grammarAccess.getContainerConfigurationAccess().getSemicolonKeyword_5_1(), null); 
    }
))
;





// Entry rule entryRuleURI
entryRuleURI returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getURIRule(), currentNode); } 
	 iv_ruleURI=ruleURI 
	 { $current=$iv_ruleURI.current.getText(); }  
	 EOF 
;

// Rule URI
ruleURI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    createLeafNode(grammarAccess.getURIAccess().getSTRINGTerminalRuleCall(), null); 
    }

    ;





// Entry rule entryRuleConcern_Named
entryRuleConcern_Named returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getConcern_NamedRule(), currentNode); }
	 iv_ruleConcern_Named=ruleConcern_Named 
	 { $current=$iv_ruleConcern_Named.current; } 
	 EOF 
;

// Rule Concern_Named
ruleConcern_Named returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getConcern_NamedAccess().getBConcernAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getConcern_NamedAccess().getBConcernAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_documentation_1_0=RULE_DOCUMENTATION
		{
			createLeafNode(grammarAccess.getConcern_NamedAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConcern_NamedRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"documentation",
	        		lv_documentation_1_0, 
	        		"DOCUMENTATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'concern' 
    {
        createLeafNode(grammarAccess.getConcern_NamedAccess().getConcernKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getConcern_NamedAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConcern_NamedRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'extends' 
    {
        createLeafNode(grammarAccess.getConcern_NamedAccess().getExtendsKeyword_4_0(), null); 
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getConcern_NamedRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getConcern_NamedAccess().getSuperConcernsBConcernCrossReference_4_1_0(), "superConcerns"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getConcern_NamedAccess().getCommaKeyword_4_2_0(), null); 
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getConcern_NamedRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getConcern_NamedAccess().getSuperConcernsBConcernCrossReference_4_2_1_0(), "superConcerns"); 
	}

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getConcern_NamedAccess().getLeftCurlyBracketKeyword_5(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConcern_NamedAccess().getPropertySetsPropertySetParserRuleCall_6_0_0(), currentNode); 
	    }
		lv_propertySets_9_0=rulePropertySet		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConcern_NamedRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"propertySets",
	        		lv_propertySets_9_0, 
	        		"PropertySet", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConcern_NamedAccess().getPropertySetsPropertySetDefaultParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_propertySets_10_0=rulePropertySetDefault		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConcern_NamedRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"propertySets",
	        		lv_propertySets_10_0, 
	        		"PropertySetDefault", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConcern_NamedAccess().getFunctionsFunctionParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_functions_11_0=ruleFunction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConcern_NamedRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"functions",
	        		lv_functions_11_0, 
	        		"Function", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConcern_NamedAccess().getFunctionsBuilderParserRuleCall_6_3_0(), currentNode); 
	    }
		lv_functions_12_0=ruleBuilder		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConcern_NamedRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"functions",
	        		lv_functions_12_0, 
	        		"Builder", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConcern_NamedAccess().getContextsBuildConcernContextParserRuleCall_6_4_0(), currentNode); 
	    }
		lv_contexts_13_0=ruleBuildConcernContext		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConcern_NamedRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contexts",
	        		lv_contexts_13_0, 
	        		"BuildConcernContext", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getConcern_NamedAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleConcern_Anonymous
entryRuleConcern_Anonymous returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getConcern_AnonymousRule(), currentNode); }
	 iv_ruleConcern_Anonymous=ruleConcern_Anonymous 
	 { $current=$iv_ruleConcern_Anonymous.current; } 
	 EOF 
;

// Rule Concern_Anonymous
ruleConcern_Anonymous returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getConcern_AnonymousAccess().getBConcernAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getConcern_AnonymousAccess().getBConcernAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'extends' 
    {
        createLeafNode(grammarAccess.getConcern_AnonymousAccess().getExtendsKeyword_1_0(), null); 
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getConcern_AnonymousRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getConcern_AnonymousAccess().getSuperConcernsBConcernCrossReference_1_1_0(), "superConcerns"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getConcern_AnonymousAccess().getCommaKeyword_1_2_0(), null); 
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getConcern_AnonymousRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getConcern_AnonymousAccess().getSuperConcernsBConcernCrossReference_1_2_1_0(), "superConcerns"); 
	}

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getConcern_AnonymousAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConcern_AnonymousAccess().getPropertySetsPropertySetParserRuleCall_3_0_0(), currentNode); 
	    }
		lv_propertySets_6_0=rulePropertySet		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConcern_AnonymousRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"propertySets",
	        		lv_propertySets_6_0, 
	        		"PropertySet", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConcern_AnonymousAccess().getPropertySetsPropertySetDefaultParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_propertySets_7_0=rulePropertySetDefault		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConcern_AnonymousRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"propertySets",
	        		lv_propertySets_7_0, 
	        		"PropertySetDefault", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConcern_AnonymousAccess().getFunctionsFunctionParserRuleCall_3_2_0(), currentNode); 
	    }
		lv_functions_8_0=ruleFunction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConcern_AnonymousRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"functions",
	        		lv_functions_8_0, 
	        		"Function", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConcern_AnonymousAccess().getFunctionsBuilderParserRuleCall_3_3_0(), currentNode); 
	    }
		lv_functions_9_0=ruleBuilder		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConcern_AnonymousRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"functions",
	        		lv_functions_9_0, 
	        		"Builder", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConcern_AnonymousAccess().getContextsBuildConcernContextParserRuleCall_3_4_0(), currentNode); 
	    }
		lv_contexts_10_0=ruleBuildConcernContext		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConcern_AnonymousRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contexts",
	        		lv_contexts_10_0, 
	        		"BuildConcernContext", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getConcern_AnonymousAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFunctionRule(), currentNode); }
	 iv_ruleFunction=ruleFunction 
	 { $current=$iv_ruleFunction.current; } 
	 EOF 
;

// Rule Function
ruleFunction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getFunctionAccess().getB3FunctionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getFunctionAccess().getB3FunctionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_documentation_1_0=RULE_DOCUMENTATION
		{
			createLeafNode(grammarAccess.getFunctionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"documentation",
	        		lv_documentation_1_0, 
	        		"DOCUMENTATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getVisibilityVisibilityEnumRuleCall_2_0(), currentNode); 
	    }
		lv_visibility_2_0=ruleVisibility		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_2_0, 
	        		"Visibility", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		lv_final_3_0=	'final' 
    {
        createLeafNode(grammarAccess.getFunctionAccess().getFinalFinalKeyword_3_0(), "final"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "final", true, "final", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'function' 
    {
        createLeafNode(grammarAccess.getFunctionAccess().getFunctionKeyword_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getReturnTypeTypeRefParserRuleCall_5_0(), currentNode); 
	    }
		lv_returnType_5_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"returnType",
	        		lv_returnType_5_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		lv_name_6_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_6_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_6_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'(' 
    {
        createLeafNode(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_7_0(), null); 
    }
(((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_7_1_0_0_0(), currentNode); 
	    }
		lv_parameters_8_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_8_0, 
	        		"ParameterDeclaration", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getFunctionAccess().getCommaKeyword_7_1_0_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_7_1_0_1_1_0(), currentNode); 
	    }
		lv_parameters_10_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_10_0, 
	        		"ParameterDeclaration", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(	',' 
    {
        createLeafNode(grammarAccess.getFunctionAccess().getCommaKeyword_7_1_0_2_0(), null); 
    }
(
(
		lv_varArgs_12_0=	'...' 
    {
        createLeafNode(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_7_1_0_2_1_0(), "varArgs"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "varArgs", true, "...", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_7_1_0_2_2_0(), currentNode); 
	    }
		lv_parameters_13_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_13_0, 
	        		"ParameterDeclaration", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
    |((
(
		lv_varArgs_14_0=	'...' 
    {
        createLeafNode(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_7_1_1_0_0(), "varArgs"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "varArgs", true, "...", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_7_1_1_1_0(), currentNode); 
	    }
		lv_parameters_15_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_15_0, 
	        		"ParameterDeclaration", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))?	')' 
    {
        createLeafNode(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_7_2(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getGuardGuardExpressionParserRuleCall_8_0(), currentNode); 
	    }
		lv_guard_17_0=ruleGuardExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"guard",
	        		lv_guard_17_0, 
	        		"GuardExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?((	':' 
    {
        createLeafNode(grammarAccess.getFunctionAccess().getColonKeyword_9_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getFuncExprExpressionParserRuleCall_9_0_1_0(), currentNode); 
	    }
		lv_funcExpr_19_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"funcExpr",
	        		lv_funcExpr_19_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getFunctionAccess().getSemicolonKeyword_9_0_2(), null); 
    }
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getFuncExprBlockExpressionParserRuleCall_9_1_0(), currentNode); 
	    }
		lv_funcExpr_21_0=ruleBlockExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"funcExpr",
	        		lv_funcExpr_21_0, 
	        		"BlockExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))
;





// Entry rule entryRuleGuardExpression
entryRuleGuardExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getGuardExpressionRule(), currentNode); }
	 iv_ruleGuardExpression=ruleGuardExpression 
	 { $current=$iv_ruleGuardExpression.current; } 
	 EOF 
;

// Rule GuardExpression
ruleGuardExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getGuardExpressionAccess().getBGuardExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getGuardExpressionAccess().getBGuardExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'@callguard' 
    {
        createLeafNode(grammarAccess.getGuardExpressionAccess().getCallguardKeyword_1(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getGuardExpressionAccess().getColonKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGuardExpressionAccess().getGuardExprExpressionParserRuleCall_3_0(), currentNode); 
	    }
		lv_guardExpr_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGuardExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"guardExpr",
	        		lv_guardExpr_3_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getGuardExpressionAccess().getSemicolonKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleAssignmentOperator
entryRuleAssignmentOperator returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAssignmentOperatorRule(), currentNode); } 
	 iv_ruleAssignmentOperator=ruleAssignmentOperator 
	 { $current=$iv_ruleAssignmentOperator.current.getText(); }  
	 EOF 
;

// Rule AssignmentOperator
ruleAssignmentOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='=' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0(), null); 
    }

    |
	kw='+=' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1(), null); 
    }

    |
	kw='-=' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2(), null); 
    }

    |
	kw='*=' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_3(), null); 
    }

    |
	kw='/=' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_4(), null); 
    }

    |
	kw='%=' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_5(), null); 
    }
)
    ;





// Entry rule entryRuleRelationalOperator
entryRuleRelationalOperator returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRelationalOperatorRule(), currentNode); } 
	 iv_ruleRelationalOperator=ruleRelationalOperator 
	 { $current=$iv_ruleRelationalOperator.current.getText(); }  
	 EOF 
;

// Rule RelationalOperator
ruleRelationalOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='~=' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getRelationalOperatorAccess().getTildeEqualsSignKeyword_0(), null); 
    }

    |
	kw='==' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignKeyword_1(), null); 
    }

    |
	kw='===' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignEqualsSignKeyword_2(), null); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignKeyword_3(), null); 
    }

    |
	kw='!==' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignEqualsSignKeyword_4(), null); 
    }

    |
	kw='>=' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_5(), null); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_6(), null); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_7(), null); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_8(), null); 
    }
)
    ;





// Entry rule entryRuleTopLevelExpression
entryRuleTopLevelExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTopLevelExpressionRule(), currentNode); }
	 iv_ruleTopLevelExpression=ruleTopLevelExpression 
	 { $current=$iv_ruleTopLevelExpression.current; } 
	 EOF 
;

// Rule TopLevelExpression
ruleTopLevelExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0(), currentNode); 
    }
    this_VarDeclaration_0=ruleVarDeclaration
    { 
        $current = $this_VarDeclaration_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getTopLevelExpressionAccess().getValDeclarationParserRuleCall_1(), currentNode); 
    }
    this_ValDeclaration_1=ruleValDeclaration
    { 
        $current = $this_ValDeclaration_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getTopLevelExpressionAccess().getAssignmentExpressionParserRuleCall_2(), currentNode); 
    }
    this_AssignmentExpression_2=ruleAssignmentExpression
    { 
        $current = $this_AssignmentExpression_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getExpressionRule(), currentNode); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall(), currentNode); 
    }
    this_AssignmentExpression_0=ruleAssignmentExpression
    { 
        $current = $this_AssignmentExpression_0.current; 
        currentNode = currentNode.getParent();
    }

;





// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAssignmentExpressionRule(), currentNode); }
	 iv_ruleAssignmentExpression=ruleAssignmentExpression 
	 { $current=$iv_ruleAssignmentExpression.current; } 
	 EOF 
;

// Rule AssignmentExpression
ruleAssignmentExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getCachedExpressionParserRuleCall_0(), currentNode); 
    }
    this_CachedExpression_0=ruleCachedExpression
    { 
        $current = $this_CachedExpression_0.current; 
        currentNode = currentNode.getParent();
    }
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getAssignmentExpressionAccess().getBAssignmentExpressionLeftExprAction_1_0().getType().getClassifier());
        try {
        	factory.set(temp, "leftExpr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getBAssignmentExpressionLeftExprAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignmentOperatorParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_functionName_2_0=ruleAssignmentOperator		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAssignmentExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"functionName",
	        		lv_functionName_2_0, 
	        		"AssignmentOperator", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignmentExpressionParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_rightExpr_3_0=ruleAssignmentExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAssignmentExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"rightExpr",
	        		lv_rightExpr_3_0, 
	        		"AssignmentExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
;





// Entry rule entryRuleVarDeclaration
entryRuleVarDeclaration returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getVarDeclarationRule(), currentNode); }
	 iv_ruleVarDeclaration=ruleVarDeclaration 
	 { $current=$iv_ruleVarDeclaration.current; } 
	 EOF 
;

// Rule VarDeclaration
ruleVarDeclaration returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getVarDeclarationAccess().getBDefValueAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getVarDeclarationAccess().getBDefValueAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_final_1_0=	'final' 
    {
        createLeafNode(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0(), "final"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "final", true, "final", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?((	'var' 
    {
        createLeafNode(grammarAccess.getVarDeclarationAccess().getVarKeyword_2_0_0(), null); 
    }

    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarDeclarationAccess().getTypeTypeRefParserRuleCall_2_0_1_0(), currentNode); 
	    }
		lv_type_3_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_3_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_2_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))(	'=' 
    {
        createLeafNode(grammarAccess.getVarDeclarationAccess().getEqualsSignKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarDeclarationAccess().getValueExprExpressionParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_valueExpr_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"valueExpr",
	        		lv_valueExpr_6_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
;





// Entry rule entryRuleValDeclaration
entryRuleValDeclaration returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getValDeclarationRule(), currentNode); }
	 iv_ruleValDeclaration=ruleValDeclaration 
	 { $current=$iv_ruleValDeclaration.current; } 
	 EOF 
;

// Rule ValDeclaration
ruleValDeclaration returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getValDeclarationAccess().getBDefValueAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getValDeclarationAccess().getBDefValueAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_final_1_0=	'final' 
    {
        createLeafNode(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0(), "final"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "final", true, "final", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_immutable_2_0=	'val' 
    {
        createLeafNode(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0(), "immutable"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "immutable", true, "val", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getValDeclarationAccess().getTypeTypeRefParserRuleCall_3_0(), currentNode); 
	    }
		lv_type_3_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_3_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getValDeclarationAccess().getNameIDTerminalRuleCall_4_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getValDeclarationAccess().getEqualsSignKeyword_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getValDeclarationAccess().getValueExprExpressionParserRuleCall_6_0(), currentNode); 
	    }
		lv_valueExpr_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"valueExpr",
	        		lv_valueExpr_6_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleTypeRef
entryRuleTypeRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypeRefRule(), currentNode); }
	 iv_ruleTypeRef=ruleTypeRef 
	 { $current=$iv_ruleTypeRef.current; } 
	 EOF 
;

// Rule TypeRef
ruleTypeRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeRefAccess().getClosureTypeRefParserRuleCall_0(), currentNode); 
    }
    this_ClosureTypeRef_0=ruleClosureTypeRef
    { 
        $current = $this_ClosureTypeRef_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeRefAccess().getSimpleTypeRefParserRuleCall_1(), currentNode); 
    }
    this_SimpleTypeRef_1=ruleSimpleTypeRef
    { 
        $current = $this_SimpleTypeRef_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleSimpleTypeRef
entryRuleSimpleTypeRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSimpleTypeRefRule(), currentNode); }
	 iv_ruleSimpleTypeRef=ruleSimpleTypeRef 
	 { $current=$iv_ruleSimpleTypeRef.current; } 
	 EOF 
;

// Rule SimpleTypeRef
ruleSimpleTypeRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getSimpleTypeRefAccess().getB3ParameterizedTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSimpleTypeRefAccess().getB3ParameterizedTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleTypeRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getSimpleTypeRefAccess().getRawTypeB3JavaImportCrossReference_1_0(), "rawType"); 
	}

)
)(	'<' 
    {
        createLeafNode(grammarAccess.getSimpleTypeRefAccess().getLessThanSignKeyword_2_0(), null); 
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleTypeRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListB3JavaImportCrossReference_2_1_0(), "actualArgumentsList"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getSimpleTypeRefAccess().getCommaKeyword_2_2_0(), null); 
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleTypeRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListB3JavaImportCrossReference_2_2_1_0(), "actualArgumentsList"); 
	}

)
))*	'>' 
    {
        createLeafNode(grammarAccess.getSimpleTypeRefAccess().getGreaterThanSignKeyword_2_3(), null); 
    }
)?)
;





// Entry rule entryRuleClosureTypeRef
entryRuleClosureTypeRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getClosureTypeRefRule(), currentNode); }
	 iv_ruleClosureTypeRef=ruleClosureTypeRef 
	 { $current=$iv_ruleClosureTypeRef.current; } 
	 EOF 
;

// Rule ClosureTypeRef
ruleClosureTypeRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getClosureTypeRefAccess().getB3FunctionTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getClosureTypeRefAccess().getB3FunctionTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'(' 
    {
        createLeafNode(grammarAccess.getClosureTypeRefAccess().getLeftParenthesisKeyword_1_0(), null); 
    }
(((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getClosureTypeRefAccess().getParameterTypesB3JavaImportCrossReference_1_1_0_0_0(), "parameterTypes"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_1_0_1_0(), null); 
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getClosureTypeRefAccess().getParameterTypesB3JavaImportCrossReference_1_1_0_1_1_0(), "parameterTypes"); 
	}

)
))*(	',' 
    {
        createLeafNode(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_1_0_2_0(), null); 
    }
(
(
		lv_varArgs_6_0=	'...' 
    {
        createLeafNode(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_2_1_0(), "varArgs"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "varArgs", true, "...", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getClosureTypeRefAccess().getParameterTypesB3JavaImportCrossReference_1_1_0_2_2_0(), "parameterTypes"); 
	}

)
))?)
    |((
(
		lv_varArgs_8_0=	'...' 
    {
        createLeafNode(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_1_0_0(), "varArgs"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "varArgs", true, "...", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getClosureTypeRefAccess().getParameterTypesB3JavaImportCrossReference_1_1_1_1_0(), "parameterTypes"); 
	}

)
)))?	')' 
    {
        createLeafNode(grammarAccess.getClosureTypeRefAccess().getRightParenthesisKeyword_1_2(), null); 
    }
	'=>' 
    {
        createLeafNode(grammarAccess.getClosureTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1_3(), null); 
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getClosureTypeRefAccess().getReturnTypeB3JavaImportCrossReference_1_4_0(), "returnType"); 
	}

)
)))
;







// Entry rule entryRuleTypeRefParam
entryRuleTypeRefParam returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypeRefParamRule(), currentNode); }
	 iv_ruleTypeRefParam=ruleTypeRefParam 
	 { $current=$iv_ruleTypeRefParam.current; } 
	 EOF 
;

// Rule TypeRefParam
ruleTypeRefParam returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeRefParamAccess().getTypeRefParserRuleCall(), currentNode); 
    }
    this_TypeRef_0=ruleTypeRef
    { 
        $current = $this_TypeRef_0.current; 
        currentNode = currentNode.getParent();
    }

;





// Entry rule entryRuleWildcardRefParam
entryRuleWildcardRefParam returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWildcardRefParamRule(), currentNode); }
	 iv_ruleWildcardRefParam=ruleWildcardRefParam 
	 { $current=$iv_ruleWildcardRefParam.current; } 
	 EOF 
;

// Rule WildcardRefParam
ruleWildcardRefParam returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getWildcardRefParamAccess().getB3WildcardTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getWildcardRefParamAccess().getB3WildcardTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'?' 
    {
        createLeafNode(grammarAccess.getWildcardRefParamAccess().getQuestionMarkKeyword_1(), null); 
    }
((	'extends' 
    {
        createLeafNode(grammarAccess.getWildcardRefParamAccess().getExtendsKeyword_2_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWildcardRefParamAccess().getUpperBoundsListTypeRefParserRuleCall_2_0_1_0(), currentNode); 
	    }
		lv_upperBoundsList_3_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWildcardRefParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"upperBoundsList",
	        		lv_upperBoundsList_3_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getWildcardRefParamAccess().getCommaKeyword_2_0_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWildcardRefParamAccess().getUpperBoundsListTypeRefParserRuleCall_2_0_2_1_0(), currentNode); 
	    }
		lv_upperBoundsList_5_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWildcardRefParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"upperBoundsList",
	        		lv_upperBoundsList_5_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
    |(	'super' 
    {
        createLeafNode(grammarAccess.getWildcardRefParamAccess().getSuperKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWildcardRefParamAccess().getLowerBoundsListTypeRefParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_lowerBoundsList_7_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWildcardRefParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"lowerBoundsList",
	        		lv_lowerBoundsList_7_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))?)
;





// Entry rule entryRuleCachedExpression
entryRuleCachedExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCachedExpressionRule(), currentNode); }
	 iv_ruleCachedExpression=ruleCachedExpression 
	 { $current=$iv_ruleCachedExpression.current; } 
	 EOF 
;

// Rule CachedExpression
ruleCachedExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getCachedExpressionAccess().getBCachedExpressionAction_0_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getCachedExpressionAccess().getBCachedExpressionAction_0_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'cached' 
    {
        createLeafNode(grammarAccess.getCachedExpressionAccess().getCachedKeyword_0_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCachedExpressionAccess().getExprOrExpressionParserRuleCall_0_2_0(), currentNode); 
	    }
		lv_expr_2_0=ruleOrExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCachedExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_2_0, 
	        		"OrExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getCachedExpressionAccess().getOrExpressionParserRuleCall_1(), currentNode); 
    }
    this_OrExpression_3=ruleOrExpression
    { 
        $current = $this_OrExpression_3.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleOrExpression
entryRuleOrExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getOrExpressionRule(), currentNode); }
	 iv_ruleOrExpression=ruleOrExpression 
	 { $current=$iv_ruleOrExpression.current; } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0(), currentNode); 
    }
    this_AndExpression_0=ruleAndExpression
    { 
        $current = $this_AndExpression_0.current; 
        currentNode = currentNode.getParent();
    }
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getOrExpressionAccess().getBOrExpressionLeftExprAction_1_0().getType().getClassifier());
        try {
        	factory.set(temp, "leftExpr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getOrExpressionAccess().getBOrExpressionLeftExprAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'||' 
    {
        createLeafNode(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOrExpressionAccess().getRightExprAndExpressionParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_rightExpr_3_0=ruleAndExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOrExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"rightExpr",
	        		lv_rightExpr_3_0, 
	        		"AndExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAndExpressionRule(), currentNode); }
	 iv_ruleAndExpression=ruleAndExpression 
	 { $current=$iv_ruleAndExpression.current; } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0(), currentNode); 
    }
    this_RelationalExpression_0=ruleRelationalExpression
    { 
        $current = $this_RelationalExpression_0.current; 
        currentNode = currentNode.getParent();
    }
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getAndExpressionAccess().getBAndExpressionLeftExprAction_1_0().getType().getClassifier());
        try {
        	factory.set(temp, "leftExpr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getAndExpressionAccess().getBAndExpressionLeftExprAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'&&' 
    {
        createLeafNode(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAndExpressionAccess().getRightExprRelationalExpressionParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_rightExpr_3_0=ruleRelationalExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAndExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"rightExpr",
	        		lv_rightExpr_3_0, 
	        		"RelationalExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRelationalExpressionRule(), currentNode); }
	 iv_ruleRelationalExpression=ruleRelationalExpression 
	 { $current=$iv_ruleRelationalExpression.current; } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getInstanceOfExpressionParserRuleCall_0(), currentNode); 
    }
    this_InstanceOfExpression_0=ruleInstanceOfExpression
    { 
        $current = $this_InstanceOfExpression_0.current; 
        currentNode = currentNode.getParent();
    }
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getRelationalExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0().getType().getClassifier());
        try {
        	factory.set(temp, "leftExpr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRelationalExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getFunctionNameRelationalOperatorParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_functionName_2_0=ruleRelationalOperator		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRelationalExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"functionName",
	        		lv_functionName_2_0, 
	        		"RelationalOperator", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightExprInstanceOfExpressionParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_rightExpr_3_0=ruleInstanceOfExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRelationalExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"rightExpr",
	        		lv_rightExpr_3_0, 
	        		"InstanceOfExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleInstanceOfExpression
entryRuleInstanceOfExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInstanceOfExpressionRule(), currentNode); }
	 iv_ruleInstanceOfExpression=ruleInstanceOfExpression 
	 { $current=$iv_ruleInstanceOfExpression.current; } 
	 EOF 
;

// Rule InstanceOfExpression
ruleInstanceOfExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getInstanceOfExpressionAccess().getAdditiveExpressionParserRuleCall_0(), currentNode); 
    }
    this_AdditiveExpression_0=ruleAdditiveExpression
    { 
        $current = $this_AdditiveExpression_0.current; 
        currentNode = currentNode.getParent();
    }
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getInstanceOfExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0().getType().getClassifier());
        try {
        	factory.set(temp, "leftExpr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getInstanceOfExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_functionName_2_0=	'instanceof' 
    {
        createLeafNode(grammarAccess.getInstanceOfExpressionAccess().getFunctionNameInstanceofKeyword_1_1_0(), "functionName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanceOfExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "functionName", lv_functionName_2_0, "instanceof", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInstanceOfExpressionAccess().getRightExprLiteralTypeParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_rightExpr_3_0=ruleLiteralType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanceOfExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"rightExpr",
	        		lv_rightExpr_3_0, 
	        		"LiteralType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAdditiveExpressionRule(), currentNode); }
	 iv_ruleAdditiveExpression=ruleAdditiveExpression 
	 { $current=$iv_ruleAdditiveExpression.current; } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0(), currentNode); 
    }
    this_MultiplicativeExpression_0=ruleMultiplicativeExpression
    { 
        $current = $this_MultiplicativeExpression_0.current; 
        currentNode = currentNode.getParent();
    }
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getAdditiveExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0().getType().getClassifier());
        try {
        	factory.set(temp, "leftExpr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
(
		lv_functionName_2_1=	'+' 
    {
        createLeafNode(grammarAccess.getAdditiveExpressionAccess().getFunctionNamePlusSignKeyword_1_1_0_0(), "functionName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "functionName", lv_functionName_2_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_functionName_2_2=	'-' 
    {
        createLeafNode(grammarAccess.getAdditiveExpressionAccess().getFunctionNameHyphenMinusKeyword_1_1_0_1(), "functionName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "functionName", lv_functionName_2_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightExprMultiplicativeExpressionParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_rightExpr_3_0=ruleMultiplicativeExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"rightExpr",
	        		lv_rightExpr_3_0, 
	        		"MultiplicativeExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMultiplicativeExpressionRule(), currentNode); }
	 iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression 
	 { $current=$iv_ruleMultiplicativeExpression.current; } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getSetExpressionParserRuleCall_0(), currentNode); 
    }
    this_SetExpression_0=ruleSetExpression
    { 
        $current = $this_SetExpression_0.current; 
        currentNode = currentNode.getParent();
    }
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getMultiplicativeExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0().getType().getClassifier());
        try {
        	factory.set(temp, "leftExpr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
(
		lv_functionName_2_1=	'*' 
    {
        createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAsteriskKeyword_1_1_0_0(), "functionName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "functionName", lv_functionName_2_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_functionName_2_2=	'/' 
    {
        createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameSolidusKeyword_1_1_0_1(), "functionName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "functionName", lv_functionName_2_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_functionName_2_3=	'%' 
    {
        createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNamePercentSignKeyword_1_1_0_2(), "functionName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "functionName", lv_functionName_2_3, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightExprSetExpressionParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_rightExpr_3_0=ruleSetExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"rightExpr",
	        		lv_rightExpr_3_0, 
	        		"SetExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleSetExpression
entryRuleSetExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSetExpressionRule(), currentNode); }
	 iv_ruleSetExpression=ruleSetExpression 
	 { $current=$iv_ruleSetExpression.current; } 
	 EOF 
;

// Rule SetExpression
ruleSetExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getSetExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0(), currentNode); 
    }
    this_UnaryOrInfixExpression_0=ruleUnaryOrInfixExpression
    { 
        $current = $this_UnaryOrInfixExpression_0.current; 
        currentNode = currentNode.getParent();
    }
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getSetExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0().getType().getClassifier());
        try {
        	factory.set(temp, "leftExpr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSetExpressionAccess().getBBinaryOpExpressionLeftExprAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_functionName_2_0=	'..' 
    {
        createLeafNode(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0(), "functionName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSetExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "functionName", lv_functionName_2_0, "..", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSetExpressionAccess().getRightExprUnaryOrInfixExpressionParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_rightExpr_3_0=ruleUnaryOrInfixExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSetExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"rightExpr",
	        		lv_rightExpr_3_0, 
	        		"UnaryOrInfixExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleUnaryOrInfixExpression
entryRuleUnaryOrInfixExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnaryOrInfixExpressionRule(), currentNode); }
	 iv_ruleUnaryOrInfixExpression=ruleUnaryOrInfixExpression 
	 { $current=$iv_ruleUnaryOrInfixExpression.current; } 
	 EOF 
;

// Rule UnaryOrInfixExpression
ruleUnaryOrInfixExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_0(), currentNode); 
    }
    this_PostopExpression_0=rulePostopExpression
    { 
        $current = $this_PostopExpression_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_1(), currentNode); 
    }
    this_UnaryExpression_1=ruleUnaryExpression
    { 
        $current = $this_UnaryExpression_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getPreopExpressionParserRuleCall_2(), currentNode); 
    }
    this_PreopExpression_2=rulePreopExpression
    { 
        $current = $this_PreopExpression_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnaryExpressionRule(), currentNode); }
	 iv_ruleUnaryExpression=ruleUnaryExpression 
	 { $current=$iv_ruleUnaryExpression.current; } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getUnaryExpressionAccess().getBUnaryOpExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getUnaryExpressionAccess().getBUnaryOpExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
(
		lv_functionName_1_1=	'!' 
    {
        createLeafNode(grammarAccess.getUnaryExpressionAccess().getFunctionNameExclamationMarkKeyword_1_0_0(), "functionName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "functionName", lv_functionName_1_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_functionName_1_2=	'-' 
    {
        createLeafNode(grammarAccess.getUnaryExpressionAccess().getFunctionNameHyphenMinusKeyword_1_0_1(), "functionName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "functionName", lv_functionName_1_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprInfixExpressionParserRuleCall_2_0(), currentNode); 
	    }
		lv_expr_2_0=ruleInfixExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_2_0, 
	        		"InfixExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRulePreopExpression
entryRulePreopExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPreopExpressionRule(), currentNode); }
	 iv_rulePreopExpression=rulePreopExpression 
	 { $current=$iv_rulePreopExpression.current; } 
	 EOF 
;

// Rule PreopExpression
rulePreopExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getPreopExpressionAccess().getBUnaryPreOpExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPreopExpressionAccess().getBUnaryPreOpExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
(
		lv_functionName_1_1=	'++' 
    {
        createLeafNode(grammarAccess.getPreopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_0_0(), "functionName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPreopExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "functionName", lv_functionName_1_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_functionName_1_2=	'--' 
    {
        createLeafNode(grammarAccess.getPreopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_0_1(), "functionName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPreopExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "functionName", lv_functionName_1_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPreopExpressionAccess().getExprInfixExpressionParserRuleCall_2_0(), currentNode); 
	    }
		lv_expr_2_0=ruleInfixExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPreopExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_2_0, 
	        		"InfixExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRulePostopExpression
entryRulePostopExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPostopExpressionRule(), currentNode); }
	 iv_rulePostopExpression=rulePostopExpression 
	 { $current=$iv_rulePostopExpression.current; } 
	 EOF 
;

// Rule PostopExpression
rulePostopExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0(), currentNode); 
    }
    this_InfixExpression_0=ruleInfixExpression
    { 
        $current = $this_InfixExpression_0.current; 
        currentNode = currentNode.getParent();
    }
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getPostopExpressionAccess().getBUnaryPostOpExpressionExprAction_1_0().getType().getClassifier());
        try {
        	factory.set(temp, "expr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPostopExpressionAccess().getBUnaryPostOpExpressionExprAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
(
		lv_functionName_2_1=	'--' 
    {
        createLeafNode(grammarAccess.getPostopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_1_0_0(), "functionName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPostopExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "functionName", lv_functionName_2_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_functionName_2_2=	'++' 
    {
        createLeafNode(grammarAccess.getPostopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_1_0_1(), "functionName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPostopExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "functionName", lv_functionName_2_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
))?)
;





// Entry rule entryRuleInfixExpression
entryRuleInfixExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInfixExpressionRule(), currentNode); }
	 iv_ruleInfixExpression=ruleInfixExpression 
	 { $current=$iv_ruleInfixExpression.current; } 
	 EOF 
;

// Rule InfixExpression
ruleInfixExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getCallExpressionParserRuleCall_0(), currentNode); 
    }
    this_CallExpression_0=ruleCallExpression
    { 
        $current = $this_CallExpression_0.current; 
        currentNode = currentNode.getParent();
    }
(((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getInfixExpressionAccess().getBCallFeatureFuncExprAction_1_0_0().getType().getClassifier());
        try {
        	factory.set(temp, "funcExpr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getBCallFeatureFuncExprAction_1_0_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'.' 
    {
        createLeafNode(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getNameID_or_KWParserRuleCall_1_0_2_0(), currentNode); 
	    }
		lv_name_3_0=ruleID_or_KW		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID_or_KW", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'(' 
    {
        createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParameterListParameterListParserRuleCall_1_0_4_0(), currentNode); 
	    }
		lv_parameterList_5_0=ruleParameterList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameterList",
	        		lv_parameterList_5_0, 
	        		"ParameterList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	')' 
    {
        createLeafNode(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5(), null); 
    }
)
    |((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getInfixExpressionAccess().getBAtExpressionObjExprAction_1_1_0().getType().getClassifier());
        try {
        	factory.set(temp, "objExpr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getBAtExpressionObjExprAction_1_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'[' 
    {
        createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getIndexExprExpressionParserRuleCall_1_1_2_0(), currentNode); 
	    }
		lv_indexExpr_9_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"indexExpr",
	        		lv_indexExpr_9_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3(), null); 
    }
)
    |((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getInfixExpressionAccess().getBFeatureExpressionObjExprAction_1_2_0().getType().getClassifier());
        try {
        	factory.set(temp, "objExpr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getBFeatureExpressionObjExprAction_1_2_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'.' 
    {
        createLeafNode(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getFeatureNameID_or_KWParserRuleCall_1_2_2_0(), currentNode); 
	    }
		lv_featureName_13_0=ruleID_or_KW		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"featureName",
	        		lv_featureName_13_0, 
	        		"ID_or_KW", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))*)
;





// Entry rule entryRuleCallExpression
entryRuleCallExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCallExpressionRule(), currentNode); }
	 iv_ruleCallExpression=ruleCallExpression 
	 { $current=$iv_ruleCallExpression.current; } 
	 EOF 
;

// Rule CallExpression
ruleCallExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getPrimaryExpressionParserRuleCall_0(), currentNode); 
    }
    this_PrimaryExpression_0=rulePrimaryExpression
    { 
        $current = $this_PrimaryExpression_0.current; 
        currentNode = currentNode.getParent();
    }
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getCallExpressionAccess().getBCallFunctionFuncExprAction_1_0().getType().getClassifier());
        try {
        	factory.set(temp, "funcExpr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getCallExpressionAccess().getBCallFunctionFuncExprAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'(' 
    {
        createLeafNode(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getParameterListParameterListParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_parameterList_3_0=ruleParameterList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCallExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameterList",
	        		lv_parameterList_3_0, 
	        		"ParameterList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	')' 
    {
        createLeafNode(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_1_3(), null); 
    }
)*)
;





// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPrimaryExpressionRule(), currentNode); }
	 iv_rulePrimaryExpression=rulePrimaryExpression 
	 { $current=$iv_rulePrimaryExpression.current; } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0(), currentNode); 
    }
    this_FeatureCall_0=ruleFeatureCall
    { 
        $current = $this_FeatureCall_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_1(), currentNode); 
    }
    this_ConstructorCallExpression_1=ruleConstructorCallExpression
    { 
        $current = $this_ConstructorCallExpression_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getVariableValueParserRuleCall_2(), currentNode); 
    }
    this_VariableValue_2=ruleVariableValue
    { 
        $current = $this_VariableValue_2.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3(), currentNode); 
    }
    this_Literal_3=ruleLiteral
    { 
        $current = $this_Literal_3.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getPropertyValueParserRuleCall_4(), currentNode); 
    }
    this_PropertyValue_4=rulePropertyValue
    { 
        $current = $this_PropertyValue_4.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_5(), currentNode); 
    }
    this_ParanthesizedExpression_5=ruleParanthesizedExpression
    { 
        $current = $this_ParanthesizedExpression_5.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getIfExpressionParserRuleCall_6(), currentNode); 
    }
    this_IfExpression_6=ruleIfExpression
    { 
        $current = $this_IfExpression_6.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_7(), currentNode); 
    }
    this_BlockExpression_7=ruleBlockExpression
    { 
        $current = $this_BlockExpression_7.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSwitchExpressionParserRuleCall_8(), currentNode); 
    }
    this_SwitchExpression_8=ruleSwitchExpression
    { 
        $current = $this_SwitchExpression_8.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getThrowExpressionParserRuleCall_9(), currentNode); 
    }
    this_ThrowExpression_9=ruleThrowExpression
    { 
        $current = $this_ThrowExpression_9.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTryCatchExpressionParserRuleCall_10(), currentNode); 
    }
    this_TryCatchExpression_10=ruleTryCatchExpression
    { 
        $current = $this_TryCatchExpression_10.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getProceedExpressionParserRuleCall_11(), currentNode); 
    }
    this_ProceedExpression_11=ruleProceedExpression
    { 
        $current = $this_ProceedExpression_11.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getWithExpressionParserRuleCall_12(), currentNode); 
    }
    this_WithExpression_12=ruleWithExpression
    { 
        $current = $this_WithExpression_12.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getWithContextExpressionParserRuleCall_13(), currentNode); 
    }
    this_WithContextExpression_13=ruleWithContextExpression
    { 
        $current = $this_WithContextExpression_13.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleWithExpression
entryRuleWithExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWithExpressionRule(), currentNode); }
	 iv_ruleWithExpression=ruleWithExpression 
	 { $current=$iv_ruleWithExpression.current; } 
	 EOF 
;

// Rule WithExpression
ruleWithExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getWithExpressionAccess().getBWithExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getWithExpressionAccess().getBWithExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'with' 
    {
        createLeafNode(grammarAccess.getWithExpressionAccess().getWithKeyword_1(), null); 
    }
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getWithExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getWithExpressionAccess().getReferencedAdviceBAdviceCrossReference_2_0_0(), "referencedAdvice"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getWithExpressionAccess().getCommaKeyword_2_1_0(), null); 
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getWithExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getWithExpressionAccess().getReferencedAdviceBAdviceCrossReference_2_1_1_0(), "referencedAdvice"); 
	}

)
))*)?((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWithExpressionAccess().getPropertySetsPropertySetParserRuleCall_3_0_0(), currentNode); 
	    }
		lv_propertySets_5_0=rulePropertySet		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWithExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"propertySets",
	        		lv_propertySets_5_0, 
	        		"PropertySet", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWithExpressionAccess().getPropertySetsPropertySetDefaultParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_propertySets_6_0=rulePropertySetDefault		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWithExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"propertySets",
	        		lv_propertySets_6_0, 
	        		"PropertySetDefault", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(	'concern' 
    {
        createLeafNode(grammarAccess.getWithExpressionAccess().getConcernKeyword_3_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWithExpressionAccess().getConcernsConcern_AnonymousParserRuleCall_3_2_1_0(), currentNode); 
	    }
		lv_concerns_8_0=ruleConcern_Anonymous		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWithExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"concerns",
	        		lv_concerns_8_0, 
	        		"Concern_Anonymous", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))*((	':' 
    {
        createLeafNode(grammarAccess.getWithExpressionAccess().getColonKeyword_4_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWithExpressionAccess().getFuncExprExpressionParserRuleCall_4_0_1_0(), currentNode); 
	    }
		lv_funcExpr_10_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWithExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"funcExpr",
	        		lv_funcExpr_10_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'{' 
    {
        createLeafNode(grammarAccess.getWithExpressionAccess().getLeftCurlyBracketKeyword_4_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWithExpressionAccess().getFuncExprBlockExpressionWithoutBracketsParserRuleCall_4_1_1_0(), currentNode); 
	    }
		lv_funcExpr_12_0=ruleBlockExpressionWithoutBrackets		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWithExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"funcExpr",
	        		lv_funcExpr_12_0, 
	        		"BlockExpressionWithoutBrackets", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getWithExpressionAccess().getRightCurlyBracketKeyword_4_1_2(), null); 
    }
)))
;





// Entry rule entryRuleWithContextExpression
entryRuleWithContextExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWithContextExpressionRule(), currentNode); }
	 iv_ruleWithContextExpression=ruleWithContextExpression 
	 { $current=$iv_ruleWithContextExpression.current; } 
	 EOF 
;

// Rule WithContextExpression
ruleWithContextExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getWithContextExpressionAccess().getBWithContextExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getWithContextExpressionAccess().getBWithContextExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'with' 
    {
        createLeafNode(grammarAccess.getWithContextExpressionAccess().getWithKeyword_1(), null); 
    }
	'context' 
    {
        createLeafNode(grammarAccess.getWithContextExpressionAccess().getContextKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWithContextExpressionAccess().getExprExpressionParserRuleCall_3_0(), currentNode); 
	    }
		lv_expr_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWithContextExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_3_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'as' 
    {
        createLeafNode(grammarAccess.getWithContextExpressionAccess().getAsKeyword_4_0(), null); 
    }
(
(
		lv_alias_5_0=RULE_ID
		{
			createLeafNode(grammarAccess.getWithContextExpressionAccess().getAliasIDTerminalRuleCall_4_1_0(), "alias"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWithContextExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"alias",
	        		lv_alias_5_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWithContextExpressionAccess().getContextBlockBlockExpressionParserRuleCall_5_0(), currentNode); 
	    }
		lv_contextBlock_6_0=ruleBlockExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWithContextExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"contextBlock",
	        		lv_contextBlock_6_0, 
	        		"BlockExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleProceedExpression
entryRuleProceedExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getProceedExpressionRule(), currentNode); }
	 iv_ruleProceedExpression=ruleProceedExpression 
	 { $current=$iv_ruleProceedExpression.current; } 
	 EOF 
;

// Rule ProceedExpression
ruleProceedExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getProceedExpressionAccess().getBProceedExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getProceedExpressionAccess().getBProceedExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'proceed' 
    {
        createLeafNode(grammarAccess.getProceedExpressionAccess().getProceedKeyword_1(), null); 
    }
)
;





// Entry rule entryRuleWildcardExpression
entryRuleWildcardExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWildcardExpressionRule(), currentNode); }
	 iv_ruleWildcardExpression=ruleWildcardExpression 
	 { $current=$iv_ruleWildcardExpression.current; } 
	 EOF 
;

// Rule WildcardExpression
ruleWildcardExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getWildcardExpressionAccess().getBLiteralAnyAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getWildcardExpressionAccess().getBLiteralAnyAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'_' 
    {
        createLeafNode(grammarAccess.getWildcardExpressionAccess().get_Keyword_1(), null); 
    }
)
;





// Entry rule entryRuleThrowExpression
entryRuleThrowExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getThrowExpressionRule(), currentNode); }
	 iv_ruleThrowExpression=ruleThrowExpression 
	 { $current=$iv_ruleThrowExpression.current; } 
	 EOF 
;

// Rule ThrowExpression
ruleThrowExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getThrowExpressionAccess().getBThrowExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getThrowExpressionAccess().getBThrowExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'throw' 
    {
        createLeafNode(grammarAccess.getThrowExpressionAccess().getThrowKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getThrowExpressionAccess().getExprExpressionParserRuleCall_2_0(), currentNode); 
	    }
		lv_expr_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getThrowExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_2_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleTryCatchExpression
entryRuleTryCatchExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTryCatchExpressionRule(), currentNode); }
	 iv_ruleTryCatchExpression=ruleTryCatchExpression 
	 { $current=$iv_ruleTryCatchExpression.current; } 
	 EOF 
;

// Rule TryCatchExpression
ruleTryCatchExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getTryCatchExpressionAccess().getBTryExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getTryCatchExpressionAccess().getBTryExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'try' 
    {
        createLeafNode(grammarAccess.getTryCatchExpressionAccess().getTryKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTryCatchExpressionAccess().getTryExprExpressionParserRuleCall_2_0(), currentNode); 
	    }
		lv_tryExpr_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTryCatchExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"tryExpr",
	        		lv_tryExpr_2_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTryCatchExpressionAccess().getCatchBlocksCatchBlockParserRuleCall_3_0(), currentNode); 
	    }
		lv_catchBlocks_3_0=ruleCatchBlock		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTryCatchExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"catchBlocks",
	        		lv_catchBlocks_3_0, 
	        		"CatchBlock", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(	'finally' 
    {
        createLeafNode(grammarAccess.getTryCatchExpressionAccess().getFinallyKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTryCatchExpressionAccess().getFinallyExprExpressionParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_finallyExpr_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTryCatchExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"finallyExpr",
	        		lv_finallyExpr_5_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'endtry' 
    {
        createLeafNode(grammarAccess.getTryCatchExpressionAccess().getEndtryKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleCatchBlock
entryRuleCatchBlock returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCatchBlockRule(), currentNode); }
	 iv_ruleCatchBlock=ruleCatchBlock 
	 { $current=$iv_ruleCatchBlock.current; } 
	 EOF 
;

// Rule CatchBlock
ruleCatchBlock returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getCatchBlockAccess().getBCatchAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getCatchBlockAccess().getBCatchAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'catch' 
    {
        createLeafNode(grammarAccess.getCatchBlockAccess().getCatchKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCatchBlockAccess().getTypeTypeRefParserRuleCall_2_0(), currentNode); 
	    }
		lv_type_2_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCatchBlockRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_2_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getCatchBlockAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCatchBlockRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getCatchBlockAccess().getColonKeyword_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCatchBlockAccess().getCatchExprExpressionParserRuleCall_5_0(), currentNode); 
	    }
		lv_catchExpr_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCatchBlockRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"catchExpr",
	        		lv_catchExpr_5_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleSwitchExpression
entryRuleSwitchExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSwitchExpressionRule(), currentNode); }
	 iv_ruleSwitchExpression=ruleSwitchExpression 
	 { $current=$iv_ruleSwitchExpression.current; } 
	 EOF 
;

// Rule SwitchExpression
ruleSwitchExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getSwitchExpressionAccess().getBSwitchExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSwitchExpressionAccess().getBSwitchExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'switch' 
    {
        createLeafNode(grammarAccess.getSwitchExpressionAccess().getSwitchKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionExpressionParserRuleCall_2_0(), currentNode); 
	    }
		lv_switchExpression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSwitchExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"switchExpression",
	        		lv_switchExpression_2_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSwitchExpressionAccess().getCaseListCaseParserRuleCall_3_0(), currentNode); 
	    }
		lv_caseList_3_0=ruleCase		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSwitchExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"caseList",
	        		lv_caseList_3_0, 
	        		"Case", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)+	'endswitch' 
    {
        createLeafNode(grammarAccess.getSwitchExpressionAccess().getEndswitchKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleCase
entryRuleCase returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCaseRule(), currentNode); }
	 iv_ruleCase=ruleCase 
	 { $current=$iv_ruleCase.current; } 
	 EOF 
;

// Rule Case
ruleCase returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getCaseAccess().getBCaseAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getCaseAccess().getBCaseAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)((	'case' 
    {
        createLeafNode(grammarAccess.getCaseAccess().getCaseKeyword_1_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCaseAccess().getConditionExprExpressionParserRuleCall_1_0_1_0(), currentNode); 
	    }
		lv_conditionExpr_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCaseRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"conditionExpr",
	        		lv_conditionExpr_2_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |	'default' 
    {
        createLeafNode(grammarAccess.getCaseAccess().getDefaultKeyword_1_1(), null); 
    }
)	':' 
    {
        createLeafNode(grammarAccess.getCaseAccess().getColonKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCaseAccess().getThenExprExpressionParserRuleCall_3_0(), currentNode); 
	    }
		lv_thenExpr_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCaseRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"thenExpr",
	        		lv_thenExpr_5_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleBlockExpression
entryRuleBlockExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBlockExpressionRule(), currentNode); }
	 iv_ruleBlockExpression=ruleBlockExpression 
	 { $current=$iv_ruleBlockExpression.current; } 
	 EOF 
;

// Rule BlockExpression
ruleBlockExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBlockExpressionAccess().getBChainedExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBlockExpressionAccess().getBChainedExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'{' 
    {
        createLeafNode(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBlockExpressionAccess().getExpressionsTopLevelExpressionParserRuleCall_2_0_0(), currentNode); 
	    }
		lv_expressions_2_0=ruleTopLevelExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBlockExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"expressions",
	        		lv_expressions_2_0, 
	        		"TopLevelExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_1(), null); 
    }
)*	'}' 
    {
        createLeafNode(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleIfExpression
entryRuleIfExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getIfExpressionRule(), currentNode); }
	 iv_ruleIfExpression=ruleIfExpression 
	 { $current=$iv_ruleIfExpression.current; } 
	 EOF 
;

// Rule IfExpression
ruleIfExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getIfExpressionAccess().getBIfExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getIfExpressionAccess().getBIfExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'if' 
    {
        createLeafNode(grammarAccess.getIfExpressionAccess().getIfKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getIfExpressionAccess().getConditionExprExpressionParserRuleCall_2_0(), currentNode); 
	    }
		lv_conditionExpr_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getIfExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"conditionExpr",
	        		lv_conditionExpr_2_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'then' 
    {
        createLeafNode(grammarAccess.getIfExpressionAccess().getThenKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getIfExpressionAccess().getThenExprExpressionParserRuleCall_4_0(), currentNode); 
	    }
		lv_thenExpr_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getIfExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"thenExpr",
	        		lv_thenExpr_4_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getIfExpressionAccess().getElseExprElseIfExpressionParserRuleCall_5_0_0(), currentNode); 
	    }
		lv_elseExpr_5_0=ruleElseIfExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getIfExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"elseExpr",
	        		lv_elseExpr_5_0, 
	        		"ElseIfExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(	'else' 
    {
        createLeafNode(grammarAccess.getIfExpressionAccess().getElseKeyword_5_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getIfExpressionAccess().getElseExprExpressionParserRuleCall_5_1_1_0(), currentNode); 
	    }
		lv_elseExpr_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getIfExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"elseExpr",
	        		lv_elseExpr_7_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))?	'endif' 
    {
        createLeafNode(grammarAccess.getIfExpressionAccess().getEndifKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleElseIfExpression
entryRuleElseIfExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getElseIfExpressionRule(), currentNode); }
	 iv_ruleElseIfExpression=ruleElseIfExpression 
	 { $current=$iv_ruleElseIfExpression.current; } 
	 EOF 
;

// Rule ElseIfExpression
ruleElseIfExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getElseIfExpressionAccess().getBIfExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getElseIfExpressionAccess().getBIfExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'elseif' 
    {
        createLeafNode(grammarAccess.getElseIfExpressionAccess().getElseifKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getElseIfExpressionAccess().getConditionExprExpressionParserRuleCall_2_0(), currentNode); 
	    }
		lv_conditionExpr_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElseIfExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"conditionExpr",
	        		lv_conditionExpr_2_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'then' 
    {
        createLeafNode(grammarAccess.getElseIfExpressionAccess().getThenKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getElseIfExpressionAccess().getThenExprExpressionParserRuleCall_4_0(), currentNode); 
	    }
		lv_thenExpr_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElseIfExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"thenExpr",
	        		lv_thenExpr_4_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getElseIfExpressionAccess().getElseExprElseIfExpressionParserRuleCall_5_0_0(), currentNode); 
	    }
		lv_elseExpr_5_0=ruleElseIfExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElseIfExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"elseExpr",
	        		lv_elseExpr_5_0, 
	        		"ElseIfExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(	'else' 
    {
        createLeafNode(grammarAccess.getElseIfExpressionAccess().getElseKeyword_5_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getElseIfExpressionAccess().getElseExprExpressionParserRuleCall_5_1_1_0(), currentNode); 
	    }
		lv_elseExpr_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElseIfExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"elseExpr",
	        		lv_elseExpr_7_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))?)
;





// Entry rule entryRulePropertyValue
entryRulePropertyValue returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPropertyValueRule(), currentNode); }
	 iv_rulePropertyValue=rulePropertyValue 
	 { $current=$iv_rulePropertyValue.current; } 
	 EOF 
;

// Rule PropertyValue
rulePropertyValue returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getPropertyValueAccess().getBVariableExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPropertyValueAccess().getBVariableExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_name_1_0=RULE_PID
		{
			createLeafNode(grammarAccess.getPropertyValueAccess().getNamePIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"PID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleVariableValue
entryRuleVariableValue returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getVariableValueRule(), currentNode); }
	 iv_ruleVariableValue=ruleVariableValue 
	 { $current=$iv_ruleVariableValue.current; } 
	 EOF 
;

// Rule VariableValue
ruleVariableValue returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getVariableValueAccess().getBVariableExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getVariableValueAccess().getBVariableExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVariableValueAccess().getNameID_or_KWParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleID_or_KW		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVariableValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID_or_KW", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleID_or_KW
entryRuleID_or_KW returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getID_or_KWRule(), currentNode); } 
	 iv_ruleID_or_KW=ruleID_or_KW 
	 { $current=$iv_ruleID_or_KW.current.getText(); }  
	 EOF 
;

// Rule ID_or_KW
ruleID_or_KW returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getID_or_KWAccess().getIDTerminalRuleCall_0(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getID_or_KWAccess().getKWParserRuleCall_1(), currentNode); 
    }
    this_KW_1=ruleKW    {
		$current.merge(this_KW_1);
    }

    { 
        currentNode = currentNode.getParent();
    }
)
    ;





// Entry rule entryRuleKW
entryRuleKW returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getKWRule(), currentNode); } 
	 iv_ruleKW=ruleKW 
	 { $current=$iv_ruleKW.current.getText(); }  
	 EOF 
;

// Rule KW
ruleKW returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='input' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getKWAccess().getInputKeyword_0(), null); 
    }

    |
	kw='output' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getKWAccess().getOutputKeyword_1(), null); 
    }

    |
	kw='source' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getKWAccess().getSourceKeyword_2(), null); 
    }

    |
	kw='result' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getKWAccess().getResultKeyword_3(), null); 
    }

    |
	kw='properties' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getKWAccess().getPropertiesKeyword_4(), null); 
    }

    |
	kw='builder' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getKWAccess().getBuilderKeyword_5(), null); 
    }

    |
	kw='unit' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getKWAccess().getUnitKeyword_6(), null); 
    }

    |
	kw='this' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getKWAccess().getThisKeyword_7(), null); 
    }

    |
	kw='name' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getKWAccess().getNameKeyword_8(), null); 
    }

    |
	kw='modify' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getKWAccess().getModifyKeyword_9(), null); 
    }

    |
	kw='greedy' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getKWAccess().getGreedyKeyword_10(), null); 
    }

    |
	kw='version' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getKWAccess().getVersionKeyword_11(), null); 
    }
)
    ;





// Entry rule entryRuleFeatureCall
entryRuleFeatureCall returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFeatureCallRule(), currentNode); }
	 iv_ruleFeatureCall=ruleFeatureCall 
	 { $current=$iv_ruleFeatureCall.current; } 
	 EOF 
;

// Rule FeatureCall
ruleFeatureCall returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall_0(), currentNode); 
    }
    this_OperationCall_0=ruleOperationCall
    { 
        $current = $this_OperationCall_0.current; 
        currentNode = currentNode.getParent();
    }

    |((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getFeatureCallAccess().getBCallFeatureAction_1_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getFeatureCallAccess().getBCallFeatureAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'.' 
    {
        createLeafNode(grammarAccess.getFeatureCallAccess().getFullStopKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFeatureCallAccess().getNameID_or_KWParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_name_3_0=ruleID_or_KW		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID_or_KW", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'(' 
    {
        createLeafNode(grammarAccess.getFeatureCallAccess().getLeftParenthesisKeyword_1_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFeatureCallAccess().getParameterListParameterListParserRuleCall_1_4_0(), currentNode); 
	    }
		lv_parameterList_5_0=ruleParameterList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameterList",
	        		lv_parameterList_5_0, 
	        		"ParameterList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	')' 
    {
        createLeafNode(grammarAccess.getFeatureCallAccess().getRightParenthesisKeyword_1_5(), null); 
    }
)
    |((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getFeatureCallAccess().getBFeatureExpressionAction_2_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getFeatureCallAccess().getBFeatureExpressionAction_2_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'.' 
    {
        createLeafNode(grammarAccess.getFeatureCallAccess().getFullStopKeyword_2_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFeatureCallAccess().getFeatureNameID_or_KWParserRuleCall_2_2_0(), currentNode); 
	    }
		lv_featureName_9_0=ruleID_or_KW		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"featureName",
	        		lv_featureName_9_0, 
	        		"ID_or_KW", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))
;





// Entry rule entryRuleOperationCall
entryRuleOperationCall returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getOperationCallRule(), currentNode); }
	 iv_ruleOperationCall=ruleOperationCall 
	 { $current=$iv_ruleOperationCall.current; } 
	 EOF 
;

// Rule OperationCall
ruleOperationCall returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getOperationCallAccess().getBCallNamedFunctionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getOperationCallAccess().getBCallNamedFunctionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
(
		lv_name_1_1=RULE_ID
		{
			createLeafNode(grammarAccess.getOperationCallAccess().getNameIDTerminalRuleCall_1_0_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOperationCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_1, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_name_1_2=RULE_PID
		{
			createLeafNode(grammarAccess.getOperationCallAccess().getNamePIDTerminalRuleCall_1_0_1(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOperationCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_2, 
	        		"PID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)	'(' 
    {
        createLeafNode(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOperationCallAccess().getParameterListParameterListParserRuleCall_3_0(), currentNode); 
	    }
		lv_parameterList_3_0=ruleParameterList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOperationCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameterList",
	        		lv_parameterList_3_0, 
	        		"ParameterList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	')' 
    {
        createLeafNode(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleConstructorCallExpression
entryRuleConstructorCallExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getConstructorCallExpressionRule(), currentNode); }
	 iv_ruleConstructorCallExpression=ruleConstructorCallExpression 
	 { $current=$iv_ruleConstructorCallExpression.current; } 
	 EOF 
;

// Rule ConstructorCallExpression
ruleConstructorCallExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getConstructorCallExpressionAccess().getBCreateExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getBCreateExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'new' 
    {
        createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getNewKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getTypeExprLiteralTypeParserRuleCall_2_0(), currentNode); 
	    }
		lv_typeExpr_2_0=ruleLiteralType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"typeExpr",
	        		lv_typeExpr_2_0, 
	        		"LiteralType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'(' 
    {
        createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getLeftParenthesisKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getParameterListParameterListParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_parameterList_4_0=ruleParameterList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameterList",
	        		lv_parameterList_4_0, 
	        		"ParameterList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	')' 
    {
        createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getRightParenthesisKeyword_3_2(), null); 
    }
)?(	'as' 
    {
        createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getAsKeyword_4_0(), null); 
    }
(
(
		lv_name_7_0=RULE_ID
		{
			createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getNameIDTerminalRuleCall_4_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_7_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getContextBlockInitializationBlockExpressionParserRuleCall_5_0(), currentNode); 
	    }
		lv_contextBlock_8_0=ruleInitializationBlockExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"contextBlock",
	        		lv_contextBlock_8_0, 
	        		"InitializationBlockExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)
;





// Entry rule entryRuleInitializationBlockExpression
entryRuleInitializationBlockExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInitializationBlockExpressionRule(), currentNode); }
	 iv_ruleInitializationBlockExpression=ruleInitializationBlockExpression 
	 { $current=$iv_ruleInitializationBlockExpression.current; } 
	 EOF 
;

// Rule InitializationBlockExpression
ruleInitializationBlockExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getInitializationBlockExpressionAccess().getBChainedExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getInitializationBlockExpressionAccess().getBChainedExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'{' 
    {
        createLeafNode(grammarAccess.getInitializationBlockExpressionAccess().getLeftCurlyBracketKeyword_1(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsInitializationExpressionParserRuleCall_2_0_0(), currentNode); 
	    }
		lv_expressions_2_0=ruleInitializationExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInitializationBlockExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"expressions",
	        		lv_expressions_2_0, 
	        		"InitializationExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getInitializationBlockExpressionAccess().getSemicolonKeyword_2_1(), null); 
    }
)*	'}' 
    {
        createLeafNode(grammarAccess.getInitializationBlockExpressionAccess().getRightCurlyBracketKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleInitializationExpression
entryRuleInitializationExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInitializationExpressionRule(), currentNode); }
	 iv_ruleInitializationExpression=ruleInitializationExpression 
	 { $current=$iv_ruleInitializationExpression.current; } 
	 EOF 
;

// Rule InitializationExpression
ruleInitializationExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getInitializationExpressionAccess().getBAssignmentExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getInitializationExpressionAccess().getBAssignmentExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInitializationExpressionAccess().getLeftExprFeatureOfThisParserRuleCall_1_0(), currentNode); 
	    }
		lv_leftExpr_1_0=ruleFeatureOfThis		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInitializationExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"leftExpr",
	        		lv_leftExpr_1_0, 
	        		"FeatureOfThis", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_functionName_2_0=	':' 
    {
        createLeafNode(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0(), "functionName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInitializationExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "functionName", lv_functionName_2_0, ":", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInitializationExpressionAccess().getRightExprExpressionParserRuleCall_3_0(), currentNode); 
	    }
		lv_rightExpr_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInitializationExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"rightExpr",
	        		lv_rightExpr_3_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleFeatureOfThis
entryRuleFeatureOfThis returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFeatureOfThisRule(), currentNode); }
	 iv_ruleFeatureOfThis=ruleFeatureOfThis 
	 { $current=$iv_ruleFeatureOfThis.current; } 
	 EOF 
;

// Rule FeatureOfThis
ruleFeatureOfThis returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getFeatureOfThisAccess().getBFeatureExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getFeatureOfThisAccess().getBFeatureExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFeatureOfThisAccess().getFeatureNameID_or_KWParserRuleCall_1_0(), currentNode); 
	    }
		lv_featureName_1_0=ruleID_or_KW		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureOfThisRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"featureName",
	        		lv_featureName_1_0, 
	        		"ID_or_KW", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleBuildConcernContext
entryRuleBuildConcernContext returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBuildConcernContextRule(), currentNode); }
	 iv_ruleBuildConcernContext=ruleBuildConcernContext 
	 { $current=$iv_ruleBuildConcernContext.current; } 
	 EOF 
;

// Rule BuildConcernContext
ruleBuildConcernContext returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getBuildConcernContextAccess().getUnitConcernContextParserRuleCall_0(), currentNode); 
    }
    this_UnitConcernContext_0=ruleUnitConcernContext
    { 
        $current = $this_UnitConcernContext_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getBuildConcernContextAccess().getBuilderConcernContextParserRuleCall_1(), currentNode); 
    }
    this_BuilderConcernContext_1=ruleBuilderConcernContext
    { 
        $current = $this_BuilderConcernContext_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getBuildConcernContextAccess().getFunctionConcernContextParserRuleCall_2(), currentNode); 
    }
    this_FunctionConcernContext_2=ruleFunctionConcernContext
    { 
        $current = $this_FunctionConcernContext_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleFunctionConcernContext
entryRuleFunctionConcernContext returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFunctionConcernContextRule(), currentNode); }
	 iv_ruleFunctionConcernContext=ruleFunctionConcernContext 
	 { $current=$iv_ruleFunctionConcernContext.current; } 
	 EOF 
;

// Rule FunctionConcernContext
ruleFunctionConcernContext returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getFunctionConcernContextAccess().getBFunctionConcernContextAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getFunctionConcernContextAccess().getBFunctionConcernContextAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_documentation_1_0=RULE_DOCUMENTATION
		{
			createLeafNode(grammarAccess.getFunctionConcernContextAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"documentation",
	        		lv_documentation_1_0, 
	        		"DOCUMENTATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'context' 
    {
        createLeafNode(grammarAccess.getFunctionConcernContextAccess().getContextKeyword_2(), null); 
    }
	'function' 
    {
        createLeafNode(grammarAccess.getFunctionConcernContextAccess().getFunctionKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionConcernContextAccess().getNamePredicateFunctionNamePredicateParserRuleCall_4_0(), currentNode); 
	    }
		lv_namePredicate_4_0=ruleFunctionNamePredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"namePredicate",
	        		lv_namePredicate_4_0, 
	        		"FunctionNamePredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'(' 
    {
        createLeafNode(grammarAccess.getFunctionConcernContextAccess().getLeftParenthesisKeyword_5_0(), null); 
    }
(((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionConcernContextAccess().getParametersParameterPredicateParserRuleCall_5_1_0_0_0(), currentNode); 
	    }
		lv_parameters_6_0=ruleParameterPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_6_0, 
	        		"ParameterPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getFunctionConcernContextAccess().getCommaKeyword_5_1_0_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionConcernContextAccess().getParametersParameterPredicateParserRuleCall_5_1_0_1_1_0(), currentNode); 
	    }
		lv_parameters_8_0=ruleParameterPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_8_0, 
	        		"ParameterPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(	',' 
    {
        createLeafNode(grammarAccess.getFunctionConcernContextAccess().getCommaKeyword_5_1_0_2_0(), null); 
    }
(
(
		lv_varArgs_10_0=	'...' 
    {
        createLeafNode(grammarAccess.getFunctionConcernContextAccess().getVarArgsFullStopFullStopFullStopKeyword_5_1_0_2_1_0(), "varArgs"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "varArgs", true, "...", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionConcernContextAccess().getParametersParameterVarargsPredicateParserRuleCall_5_1_0_2_2_0(), currentNode); 
	    }
		lv_parameters_11_0=ruleParameterVarargsPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_11_0, 
	        		"ParameterVarargsPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
    |((
(
		lv_varArgs_12_0=	'...' 
    {
        createLeafNode(grammarAccess.getFunctionConcernContextAccess().getVarArgsFullStopFullStopFullStopKeyword_5_1_1_0_0(), "varArgs"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "varArgs", true, "...", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionConcernContextAccess().getParametersParameterVarargsPredicateParserRuleCall_5_1_1_1_0(), currentNode); 
	    }
		lv_parameters_13_0=ruleParameterVarargsPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_13_0, 
	        		"ParameterVarargsPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))?(
(
		lv_matchParameters_14_0=	')' 
    {
        createLeafNode(grammarAccess.getFunctionConcernContextAccess().getMatchParametersRightParenthesisKeyword_5_2_0(), "matchParameters"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "matchParameters", true, ")", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionConcernContextAccess().getFuncExprBlockExpressionParserRuleCall_6_0(), currentNode); 
	    }
		lv_funcExpr_15_0=ruleBlockExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"funcExpr",
	        		lv_funcExpr_15_0, 
	        		"BlockExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleFunctionNamePredicate
entryRuleFunctionNamePredicate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFunctionNamePredicateRule(), currentNode); }
	 iv_ruleFunctionNamePredicate=ruleFunctionNamePredicate 
	 { $current=$iv_ruleFunctionNamePredicate.current; } 
	 EOF 
;

// Rule FunctionNamePredicate
ruleFunctionNamePredicate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getFunctionNamePredicateAccess().getBFunctionNamePredicateAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getFunctionNamePredicateAccess().getBFunctionNamePredicateAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFunctionNamePredicateAccess().getNamePredicateNamePredicateParserRuleCall_1_0(), currentNode); 
	    }
		lv_namePredicate_1_0=ruleNamePredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFunctionNamePredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"namePredicate",
	        		lv_namePredicate_1_0, 
	        		"NamePredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleParameterPredicate
entryRuleParameterPredicate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getParameterPredicateRule(), currentNode); }
	 iv_ruleParameterPredicate=ruleParameterPredicate 
	 { $current=$iv_ruleParameterPredicate.current; } 
	 EOF 
;

// Rule ParameterPredicate
ruleParameterPredicate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getParameterPredicateAccess().getBParameterPredicateAction_0_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getParameterPredicateAccess().getBParameterPredicateAction_0_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'_' 
    {
        createLeafNode(grammarAccess.getParameterPredicateAccess().get_Keyword_0_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParameterPredicateAccess().getTypePredicateOpTypePredicateOpParserRuleCall_0_1_1_0(), currentNode); 
	    }
		lv_typePredicateOp_2_0=ruleTypePredicateOp		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"typePredicateOp",
	        		lv_typePredicateOp_2_0, 
	        		"TypePredicateOp", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?))
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParameterPredicateAccess().getTypeTypeRefParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_type_3_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_3_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParameterPredicateAccess().getTypePredicateOpTypePredicateOpParserRuleCall_1_1_0_0(), currentNode); 
	    }
		lv_typePredicateOp_4_0=ruleTypePredicateOp		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"typePredicateOp",
	        		lv_typePredicateOp_4_0, 
	        		"TypePredicateOp", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		lv_name_5_0=RULE_ID
		{
			createLeafNode(grammarAccess.getParameterPredicateAccess().getNameIDTerminalRuleCall_1_1_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_5_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?))
;





// Entry rule entryRuleParameterVarargsPredicate
entryRuleParameterVarargsPredicate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getParameterVarargsPredicateRule(), currentNode); }
	 iv_ruleParameterVarargsPredicate=ruleParameterVarargsPredicate 
	 { $current=$iv_ruleParameterVarargsPredicate.current; } 
	 EOF 
;

// Rule ParameterVarargsPredicate
ruleParameterVarargsPredicate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getParameterVarargsPredicateAccess().getBParameterPredicateAction_0_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getParameterVarargsPredicateAccess().getBParameterPredicateAction_0_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'_' 
    {
        createLeafNode(grammarAccess.getParameterVarargsPredicateAccess().get_Keyword_0_1(), null); 
    }
)
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParameterVarargsPredicateAccess().getTypeTypeRefParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_type_2_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterVarargsPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_2_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getParameterVarargsPredicateAccess().getNameIDTerminalRuleCall_1_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterVarargsPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?))
;





// Entry rule entryRuleTypePredicateOp
entryRuleTypePredicateOp returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypePredicateOpRule(), currentNode); } 
	 iv_ruleTypePredicateOp=ruleTypePredicateOp 
	 { $current=$iv_ruleTypePredicateOp.current.getText(); }  
	 EOF 
;

// Rule TypePredicateOp
ruleTypePredicateOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='?' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getTypePredicateOpAccess().getQuestionMarkKeyword_0(), null); 
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getTypePredicateOpAccess().getAsteriskKeyword_1(), null); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getTypePredicateOpAccess().getPlusSignKeyword_2(), null); 
    }
)
    ;





// Entry rule entryRuleUnitConcernContext
entryRuleUnitConcernContext returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnitConcernContextRule(), currentNode); }
	 iv_ruleUnitConcernContext=ruleUnitConcernContext 
	 { $current=$iv_ruleUnitConcernContext.current; } 
	 EOF 
;

// Rule UnitConcernContext
ruleUnitConcernContext returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getUnitConcernContextAccess().getUnitConcernContextAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getUnitConcernContextAccess().getUnitConcernContextAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_documentation_1_0=RULE_DOCUMENTATION
		{
			createLeafNode(grammarAccess.getUnitConcernContextAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"documentation",
	        		lv_documentation_1_0, 
	        		"DOCUMENTATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'unit-context' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getUnitContextKeyword_2(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
	'select-units' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getSelectUnitsKeyword_4(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getColonKeyword_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitConcernContextAccess().getQueryUnitOrExpressionParserRuleCall_6_0(), currentNode); 
	    }
		lv_query_6_0=ruleUnitOrExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"query",
	        		lv_query_6_0, 
	        		"UnitOrExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getSemicolonKeyword_7(), null); 
    }
	'modify-selected' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getModifySelectedKeyword_8(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getColonKeyword_9(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getLeftCurlyBracketKeyword_10(), null); 
    }
(	'source' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getSourceKeyword_11_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getColonKeyword_11_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitConcernContextAccess().getSourceLocationURIParserRuleCall_11_2_0(), currentNode); 
	    }
		lv_sourceLocation_13_0=ruleURI		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"sourceLocation",
	        		lv_sourceLocation_13_0, 
	        		"URI", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getSemicolonKeyword_11_3(), null); 
    }
)?(	'output' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getOutputKeyword_12_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getColonKeyword_12_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitConcernContextAccess().getOutputLocationURIParserRuleCall_12_2_0(), currentNode); 
	    }
		lv_outputLocation_17_0=ruleURI		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"outputLocation",
	        		lv_outputLocation_17_0, 
	        		"URI", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getSemicolonKeyword_12_3(), null); 
    }
)?(	'provides' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getProvidesKeyword_13_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getColonKeyword_13_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getLeftCurlyBracketKeyword_13_2(), null); 
    }
((	'-' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getHyphenMinusKeyword_13_3_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitConcernContextAccess().getProvidesRemovalsProvidesPredicateParserRuleCall_13_3_0_1_0(), currentNode); 
	    }
		lv_providesRemovals_23_0=ruleProvidesPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providesRemovals",
	        		lv_providesRemovals_23_0, 
	        		"ProvidesPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getSemicolonKeyword_13_3_0_2(), null); 
    }
)
    |(	'+' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getPlusSignKeyword_13_3_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitConcernContextAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_13_3_1_1_0(), currentNode); 
	    }
		lv_providedCapabilities_26_0=ruleProvidedCapability		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providedCapabilities",
	        		lv_providedCapabilities_26_0, 
	        		"ProvidedCapability", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getSemicolonKeyword_13_3_1_2(), null); 
    }
))*	'}' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getRightCurlyBracketKeyword_13_4(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getSemicolonKeyword_13_5(), null); 
    }
)?(	'requires' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getRequiresKeyword_14_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getColonKeyword_14_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getLeftCurlyBracketKeyword_14_2(), null); 
    }
((	'-' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getHyphenMinusKeyword_14_3_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitConcernContextAccess().getRequiresRemovalsRequiresPredicateParserRuleCall_14_3_0_1_0(), currentNode); 
	    }
		lv_requiresRemovals_34_0=ruleRequiresPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"requiresRemovals",
	        		lv_requiresRemovals_34_0, 
	        		"RequiresPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getSemicolonKeyword_14_3_0_2(), null); 
    }
)
    |(	'+' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getPlusSignKeyword_14_3_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitConcernContextAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_14_3_1_1_0(), currentNode); 
	    }
		lv_requiredCapabilities_37_0=ruleAliasedRequiredCapability		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"requiredCapabilities",
	        		lv_requiredCapabilities_37_0, 
	        		"AliasedRequiredCapability", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getSemicolonKeyword_14_3_1_2(), null); 
    }
))*	'}' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getRightCurlyBracketKeyword_14_4(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getSemicolonKeyword_14_5(), null); 
    }
)?((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitConcernContextAccess().getFunctionsBuilderParserRuleCall_15_0_0(), currentNode); 
	    }
		lv_functions_41_0=ruleBuilder		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"functions",
	        		lv_functions_41_0, 
	        		"Builder", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitConcernContextAccess().getBuilderContextsBuilderConcernContextParserRuleCall_15_1_0(), currentNode); 
	    }
		lv_builderContexts_42_0=ruleBuilderConcernContext		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"builderContexts",
	        		lv_builderContexts_42_0, 
	        		"BuilderConcernContext", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(	'-' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getHyphenMinusKeyword_16_0(), null); 
    }
(
(
		lv_defaultPropertiesRemovals_44_0=RULE_PID
		{
			createLeafNode(grammarAccess.getUnitConcernContextAccess().getDefaultPropertiesRemovalsPIDTerminalRuleCall_16_1_0(), "defaultPropertiesRemovals"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"defaultPropertiesRemovals",
	        		lv_defaultPropertiesRemovals_44_0, 
	        		"PID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getCommaKeyword_16_2_0(), null); 
    }
(
(
		lv_defaultPropertiesRemovals_46_0=RULE_PID
		{
			createLeafNode(grammarAccess.getUnitConcernContextAccess().getDefaultPropertiesRemovalsPIDTerminalRuleCall_16_2_1_0(), "defaultPropertiesRemovals"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"defaultPropertiesRemovals",
	        		lv_defaultPropertiesRemovals_46_0, 
	        		"PID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))*	';' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getSemicolonKeyword_16_3(), null); 
    }
)?(	'+' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getPlusSignKeyword_17_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitConcernContextAccess().getDefaultPropertiesAdditionsPropertySetDefaultParserRuleCall_17_1_0(), currentNode); 
	    }
		lv_defaultPropertiesAdditions_49_0=rulePropertySetDefault		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"defaultPropertiesAdditions",
	        		lv_defaultPropertiesAdditions_49_0, 
	        		"PropertySetDefault", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getRightCurlyBracketKeyword_18(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getSemicolonKeyword_19(), null); 
    }
	'}' 
    {
        createLeafNode(grammarAccess.getUnitConcernContextAccess().getRightCurlyBracketKeyword_20(), null); 
    }
)
;





// Entry rule entryRuleBuilderConcernContext
entryRuleBuilderConcernContext returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBuilderConcernContextRule(), currentNode); }
	 iv_ruleBuilderConcernContext=ruleBuilderConcernContext 
	 { $current=$iv_ruleBuilderConcernContext.current; } 
	 EOF 
;

// Rule BuilderConcernContext
ruleBuilderConcernContext returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBuilderConcernContextAccess().getBuilderConcernContextAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getBuilderConcernContextAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_documentation_1_0=RULE_DOCUMENTATION
		{
			createLeafNode(grammarAccess.getBuilderConcernContextAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"documentation",
	        		lv_documentation_1_0, 
	        		"DOCUMENTATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'builder-context' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getBuilderContextKeyword_2(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
	'select-builders' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSelectBuildersKeyword_4(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getColonKeyword_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getQueryBuilderOrExpressionParserRuleCall_6_0(), currentNode); 
	    }
		lv_query_6_0=ruleBuilderOrExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"query",
	        		lv_query_6_0, 
	        		"BuilderOrExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_7(), null); 
    }
(	'having-parameters' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getHavingParametersKeyword_8_0(), null); 
    }
(
(
		lv_matchParameters_9_0=	':' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getMatchParametersColonKeyword_8_1_0(), "matchParameters"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "matchParameters", true, ":", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'(' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getLeftParenthesisKeyword_8_2(), null); 
    }
(((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getParametersParameterPredicateParserRuleCall_8_3_0_0_0(), currentNode); 
	    }
		lv_parameters_11_0=ruleParameterPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_11_0, 
	        		"ParameterPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getCommaKeyword_8_3_0_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getParametersParameterPredicateParserRuleCall_8_3_0_1_1_0(), currentNode); 
	    }
		lv_parameters_13_0=ruleParameterPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_13_0, 
	        		"ParameterPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(	',' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getCommaKeyword_8_3_0_2_0(), null); 
    }
(
(
		lv_varArgs_15_0=	'...' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getVarArgsFullStopFullStopFullStopKeyword_8_3_0_2_1_0(), "varArgs"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "varArgs", true, "...", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getParametersParameterVarargsPredicateParserRuleCall_8_3_0_2_2_0(), currentNode); 
	    }
		lv_parameters_16_0=ruleParameterVarargsPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_16_0, 
	        		"ParameterVarargsPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
    |((
(
		lv_varArgs_17_0=	'...' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getVarArgsFullStopFullStopFullStopKeyword_8_3_1_0_0(), "varArgs"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "varArgs", true, "...", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getParametersParameterVarargsPredicateParserRuleCall_8_3_1_1_0(), currentNode); 
	    }
		lv_parameters_18_0=ruleParameterVarargsPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_18_0, 
	        		"ParameterVarargsPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))?	')' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getRightParenthesisKeyword_8_4(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_8_5(), null); 
    }
)?	'modify-selected' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getModifySelectedKeyword_9(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getColonKeyword_10(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getLeftCurlyBracketKeyword_11(), null); 
    }
(	'conditions' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getConditionsKeyword_12_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getColonKeyword_12_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getLeftCurlyBracketKeyword_12_2(), null); 
    }
(	'-' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getHyphenMinusKeyword_12_3_0(), null); 
    }
(
(
		lv_removePreCondition_28_0=	'precondition' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getRemovePreConditionPreconditionKeyword_12_3_1_0(), "removePreCondition"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "removePreCondition", true, "precondition", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_12_3_2(), null); 
    }
)?(	'+' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getPlusSignKeyword_12_4_0(), null); 
    }
	'precondition' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getPreconditionKeyword_12_4_1(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getColonKeyword_12_4_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getPrecondExprExpressionParserRuleCall_12_4_3_0(), currentNode); 
	    }
		lv_precondExpr_33_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"precondExpr",
	        		lv_precondExpr_33_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_12_4_4(), null); 
    }
)?(	'-' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getHyphenMinusKeyword_12_5_0(), null); 
    }
(
(
		lv_removePostInputCondition_36_0=	'postinputcondition' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getRemovePostInputConditionPostinputconditionKeyword_12_5_1_0(), "removePostInputCondition"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "removePostInputCondition", true, "postinputcondition", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_12_5_2(), null); 
    }
)?(	'+' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getPlusSignKeyword_12_6_0(), null); 
    }
	'postinputcondition' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getPostinputconditionKeyword_12_6_1(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getColonKeyword_12_6_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getPostinputcondExprExpressionParserRuleCall_12_6_3_0(), currentNode); 
	    }
		lv_postinputcondExpr_41_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"postinputcondExpr",
	        		lv_postinputcondExpr_41_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_12_6_4(), null); 
    }
)?(	'-' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getHyphenMinusKeyword_12_7_0(), null); 
    }
(
(
		lv_removePostCondition_44_0=	'postcondition' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getRemovePostConditionPostconditionKeyword_12_7_1_0(), "removePostCondition"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "removePostCondition", true, "postcondition", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_12_7_2(), null); 
    }
)?(	'+' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getPlusSignKeyword_12_8_0(), null); 
    }
	'postcondition' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getPostconditionKeyword_12_8_1(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getColonKeyword_12_8_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getPostcondExprExpressionParserRuleCall_12_8_3_0(), currentNode); 
	    }
		lv_postcondExpr_49_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"postcondExpr",
	        		lv_postcondExpr_49_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_12_8_4(), null); 
    }
)?	'}' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getRightCurlyBracketKeyword_12_9(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_12_10(), null); 
    }
)?(	'provides' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getProvidesKeyword_13_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getColonKeyword_13_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getLeftCurlyBracketKeyword_13_2(), null); 
    }
((	'-' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getHyphenMinusKeyword_13_3_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getProvidesRemovalsProvidesPredicateParserRuleCall_13_3_0_1_0(), currentNode); 
	    }
		lv_providesRemovals_57_0=ruleProvidesPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providesRemovals",
	        		lv_providesRemovals_57_0, 
	        		"ProvidesPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_13_3_0_2(), null); 
    }
)
    |(	'+' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getPlusSignKeyword_13_3_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_13_3_1_1_0(), currentNode); 
	    }
		lv_providedCapabilities_60_0=ruleProvidedCapability		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"providedCapabilities",
	        		lv_providedCapabilities_60_0, 
	        		"ProvidedCapability", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_13_3_1_2(), null); 
    }
))*	'}' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getRightCurlyBracketKeyword_13_4(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_13_5(), null); 
    }
)?(	'-' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getHyphenMinusKeyword_14_0(), null); 
    }
(
(
		lv_defaultPropertiesRemovals_65_0=RULE_PID
		{
			createLeafNode(grammarAccess.getBuilderConcernContextAccess().getDefaultPropertiesRemovalsPIDTerminalRuleCall_14_1_0(), "defaultPropertiesRemovals"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"defaultPropertiesRemovals",
	        		lv_defaultPropertiesRemovals_65_0, 
	        		"PID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getCommaKeyword_14_2_0(), null); 
    }
(
(
		lv_defaultPropertiesRemovals_67_0=RULE_PID
		{
			createLeafNode(grammarAccess.getBuilderConcernContextAccess().getDefaultPropertiesRemovalsPIDTerminalRuleCall_14_2_1_0(), "defaultPropertiesRemovals"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"defaultPropertiesRemovals",
	        		lv_defaultPropertiesRemovals_67_0, 
	        		"PID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))*	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_14_3(), null); 
    }
)?(	'+' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getPlusSignKeyword_15_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getDefaultPropertiesAdditionsPropertySetDefaultParserRuleCall_15_1_0(), currentNode); 
	    }
		lv_defaultPropertiesAdditions_70_0=rulePropertySetDefault		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"defaultPropertiesAdditions",
	        		lv_defaultPropertiesAdditions_70_0, 
	        		"PropertySetDefault", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'input' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getInputKeyword_16_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getColonKeyword_16_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getLeftCurlyBracketKeyword_16_2(), null); 
    }
((	'+' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getPlusSignKeyword_16_3_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getInputAdditionsPrerequisiteParserRuleCall_16_3_0_1_0(), currentNode); 
	    }
		lv_inputAdditions_75_0=rulePrerequisite		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"inputAdditions",
	        		lv_inputAdditions_75_0, 
	        		"Prerequisite", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_16_3_0_2(), null); 
    }
)
    |(	'-' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getHyphenMinusKeyword_16_3_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getInputRemovalsInputPredicateParserRuleCall_16_3_1_1_0(), currentNode); 
	    }
		lv_inputRemovals_78_0=ruleInputPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"inputRemovals",
	        		lv_inputRemovals_78_0, 
	        		"InputPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_16_3_1_2(), null); 
    }
))*	'}' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getRightCurlyBracketKeyword_16_4(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_16_5(), null); 
    }
)?(	'source' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSourceKeyword_17_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getColonKeyword_17_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getLeftCurlyBracketKeyword_17_2(), null); 
    }
((	'+' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getPlusSignKeyword_17_3_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getSourceAdditionsConditionalPathVectorParserRuleCall_17_3_0_1_0(), currentNode); 
	    }
		lv_sourceAdditions_86_0=ruleConditionalPathVector		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"sourceAdditions",
	        		lv_sourceAdditions_86_0, 
	        		"ConditionalPathVector", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_17_3_0_2(), null); 
    }
)
    |(	'-' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getHyphenMinusKeyword_17_3_1_0(), null); 
    }
	'source' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSourceKeyword_17_3_1_1(), null); 
    }
	'~=' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getTildeEqualsSignKeyword_17_3_1_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getSourceRemovalsSourcePredicateParserRuleCall_17_3_1_3_0(), currentNode); 
	    }
		lv_sourceRemovals_91_0=ruleSourcePredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"sourceRemovals",
	        		lv_sourceRemovals_91_0, 
	        		"SourcePredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_17_3_1_4(), null); 
    }
))*(	'-' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getHyphenMinusKeyword_17_4_0(), null); 
    }
	'annotations' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getAnnotationsKeyword_17_4_1(), null); 
    }
	'~=' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getTildeEqualsSignKeyword_17_4_2(), null); 
    }
	'[' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getLeftSquareBracketKeyword_17_4_3(), null); 
    }
(
(
		lv_sourceAnnotationsRemovals_97_0=RULE_PID
		{
			createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSourceAnnotationsRemovalsPIDTerminalRuleCall_17_4_4_0(), "sourceAnnotationsRemovals"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"sourceAnnotationsRemovals",
	        		lv_sourceAnnotationsRemovals_97_0, 
	        		"PID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getCommaKeyword_17_4_5_0(), null); 
    }
(
(
		lv_outputAnnotationsRemovals_99_0=RULE_PID
		{
			createLeafNode(grammarAccess.getBuilderConcernContextAccess().getOutputAnnotationsRemovalsPIDTerminalRuleCall_17_4_5_1_0(), "outputAnnotationsRemovals"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"outputAnnotationsRemovals",
	        		lv_outputAnnotationsRemovals_99_0, 
	        		"PID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getRightSquareBracketKeyword_17_4_6(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_17_4_7(), null); 
    }
)?(	'+' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getPlusSignKeyword_17_5_0(), null); 
    }
	'annotations' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getAnnotationsKeyword_17_5_1(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getColonKeyword_17_5_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getSourceAnnotationAdditionsAnnotationSetParserRuleCall_17_5_3_0(), currentNode); 
	    }
		lv_sourceAnnotationAdditions_105_0=ruleAnnotationSet		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"sourceAnnotationAdditions",
	        		lv_sourceAnnotationAdditions_105_0, 
	        		"AnnotationSet", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getRightCurlyBracketKeyword_17_6(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_17_7(), null); 
    }
)?(	'output' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getOutputKeyword_18_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getColonKeyword_18_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getLeftCurlyBracketKeyword_18_2(), null); 
    }
((	'+' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getPlusSignKeyword_18_3_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getOutputAdditionsConditionalPathVectorParserRuleCall_18_3_0_1_0(), currentNode); 
	    }
		lv_outputAdditions_112_0=ruleConditionalPathVector		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"outputAdditions",
	        		lv_outputAdditions_112_0, 
	        		"ConditionalPathVector", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_18_3_0_2(), null); 
    }
)
    |(	'-' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getHyphenMinusKeyword_18_3_1_0(), null); 
    }
	'output' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getOutputKeyword_18_3_1_1(), null); 
    }
	'~=' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getTildeEqualsSignKeyword_18_3_1_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getOutputRemovalsOutputPredicateParserRuleCall_18_3_1_3_0(), currentNode); 
	    }
		lv_outputRemovals_117_0=ruleOutputPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"outputRemovals",
	        		lv_outputRemovals_117_0, 
	        		"OutputPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_18_3_1_4(), null); 
    }
))*(	'-' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getHyphenMinusKeyword_18_4_0(), null); 
    }
	'annotations' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getAnnotationsKeyword_18_4_1(), null); 
    }
	'~=' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getTildeEqualsSignKeyword_18_4_2(), null); 
    }
	'[' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getLeftSquareBracketKeyword_18_4_3(), null); 
    }
(
(
		lv_outputAnnotationsRemovals_123_0=RULE_PID
		{
			createLeafNode(grammarAccess.getBuilderConcernContextAccess().getOutputAnnotationsRemovalsPIDTerminalRuleCall_18_4_4_0(), "outputAnnotationsRemovals"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"outputAnnotationsRemovals",
	        		lv_outputAnnotationsRemovals_123_0, 
	        		"PID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getCommaKeyword_18_4_5_0(), null); 
    }
(
(
		lv_outputAnnotationsRemovals_125_0=RULE_PID
		{
			createLeafNode(grammarAccess.getBuilderConcernContextAccess().getOutputAnnotationsRemovalsPIDTerminalRuleCall_18_4_5_1_0(), "outputAnnotationsRemovals"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"outputAnnotationsRemovals",
	        		lv_outputAnnotationsRemovals_125_0, 
	        		"PID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getRightSquareBracketKeyword_18_4_6(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_18_4_7(), null); 
    }
)?(	'+' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getPlusSignKeyword_18_5_0(), null); 
    }
	'annotations' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getAnnotationsKeyword_18_5_1(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getColonKeyword_18_5_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getOutputAnnotationAdditionsAnnotationSetParserRuleCall_18_5_3_0(), currentNode); 
	    }
		lv_outputAnnotationAdditions_131_0=ruleAnnotationSet		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"outputAnnotationAdditions",
	        		lv_outputAnnotationAdditions_131_0, 
	        		"AnnotationSet", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getRightCurlyBracketKeyword_18_6(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_18_7(), null); 
    }
)?(	'result' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getResultKeyword_19_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getColonKeyword_19_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderConcernContextAccess().getFuncExprExpressionParserRuleCall_19_2_0(), currentNode); 
	    }
		lv_funcExpr_136_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderConcernContextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"funcExpr",
	        		lv_funcExpr_136_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_19_3(), null); 
    }
)?	'}' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getRightCurlyBracketKeyword_20(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getSemicolonKeyword_21(), null); 
    }
	'}' 
    {
        createLeafNode(grammarAccess.getBuilderConcernContextAccess().getRightCurlyBracketKeyword_22(), null); 
    }
)
;





// Entry rule entryRuleUnitOrExpression
entryRuleUnitOrExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnitOrExpressionRule(), currentNode); }
	 iv_ruleUnitOrExpression=ruleUnitOrExpression 
	 { $current=$iv_ruleUnitOrExpression.current; } 
	 EOF 
;

// Rule UnitOrExpression
ruleUnitOrExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getUnitOrExpressionAccess().getUnitAndExpressionParserRuleCall_0(), currentNode); 
    }
    this_UnitAndExpression_0=ruleUnitAndExpression
    { 
        $current = $this_UnitAndExpression_0.current; 
        currentNode = currentNode.getParent();
    }
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getUnitOrExpressionAccess().getBOrExpressionLeftExprAction_1_0().getType().getClassifier());
        try {
        	factory.set(temp, "leftExpr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getUnitOrExpressionAccess().getBOrExpressionLeftExprAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'||' 
    {
        createLeafNode(grammarAccess.getUnitOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitOrExpressionAccess().getRightExprUnitAndExpressionParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_rightExpr_3_0=ruleUnitAndExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitOrExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"rightExpr",
	        		lv_rightExpr_3_0, 
	        		"UnitAndExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleUnitAndExpression
entryRuleUnitAndExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnitAndExpressionRule(), currentNode); }
	 iv_ruleUnitAndExpression=ruleUnitAndExpression 
	 { $current=$iv_ruleUnitAndExpression.current; } 
	 EOF 
;

// Rule UnitAndExpression
ruleUnitAndExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getUnitAndExpressionAccess().getUnitNotOrPrimaryExpressionParserRuleCall_0(), currentNode); 
    }
    this_UnitNotOrPrimaryExpression_0=ruleUnitNotOrPrimaryExpression
    { 
        $current = $this_UnitNotOrPrimaryExpression_0.current; 
        currentNode = currentNode.getParent();
    }
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getUnitAndExpressionAccess().getBAndExpressionLeftExprAction_1_0().getType().getClassifier());
        try {
        	factory.set(temp, "leftExpr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getUnitAndExpressionAccess().getBAndExpressionLeftExprAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'&&' 
    {
        createLeafNode(grammarAccess.getUnitAndExpressionAccess().getAmpersandAmpersandKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitAndExpressionAccess().getRightExprUnitNotOrPrimaryExpressionParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_rightExpr_3_0=ruleUnitNotOrPrimaryExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitAndExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"rightExpr",
	        		lv_rightExpr_3_0, 
	        		"UnitNotOrPrimaryExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleUnitNotOrPrimaryExpression
entryRuleUnitNotOrPrimaryExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnitNotOrPrimaryExpressionRule(), currentNode); }
	 iv_ruleUnitNotOrPrimaryExpression=ruleUnitNotOrPrimaryExpression 
	 { $current=$iv_ruleUnitNotOrPrimaryExpression.current; } 
	 EOF 
;

// Rule UnitNotOrPrimaryExpression
ruleUnitNotOrPrimaryExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getUnitNotOrPrimaryExpressionAccess().getUnitNotExpressionParserRuleCall_0(), currentNode); 
    }
    this_UnitNotExpression_0=ruleUnitNotExpression
    { 
        $current = $this_UnitNotExpression_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getUnitNotOrPrimaryExpressionAccess().getUnitPrimaryExpressionParserRuleCall_1(), currentNode); 
    }
    this_UnitPrimaryExpression_1=ruleUnitPrimaryExpression
    { 
        $current = $this_UnitPrimaryExpression_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleUnitNotExpression
entryRuleUnitNotExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnitNotExpressionRule(), currentNode); }
	 iv_ruleUnitNotExpression=ruleUnitNotExpression 
	 { $current=$iv_ruleUnitNotExpression.current; } 
	 EOF 
;

// Rule UnitNotExpression
ruleUnitNotExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getUnitNotExpressionAccess().getBUnaryOpExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getUnitNotExpressionAccess().getBUnaryOpExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_functionName_1_0=	'!' 
    {
        createLeafNode(grammarAccess.getUnitNotExpressionAccess().getFunctionNameExclamationMarkKeyword_1_0(), "functionName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitNotExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "functionName", lv_functionName_1_0, "!", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitNotExpressionAccess().getExprUnitPrimaryExpressionParserRuleCall_2_0(), currentNode); 
	    }
		lv_expr_2_0=ruleUnitPrimaryExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitNotExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_2_0, 
	        		"UnitPrimaryExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleUnitPrimaryExpression
entryRuleUnitPrimaryExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnitPrimaryExpressionRule(), currentNode); }
	 iv_ruleUnitPrimaryExpression=ruleUnitPrimaryExpression 
	 { $current=$iv_ruleUnitPrimaryExpression.current; } 
	 EOF 
;

// Rule UnitPrimaryExpression
ruleUnitPrimaryExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getUnitPrimaryExpressionAccess().getRequiresPredicateParserRuleCall_0(), currentNode); 
    }
    this_RequiresPredicate_0=ruleRequiresPredicate
    { 
        $current = $this_RequiresPredicate_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getUnitPrimaryExpressionAccess().getImplementsPredcicateParserRuleCall_1(), currentNode); 
    }
    this_ImplementsPredcicate_1=ruleImplementsPredcicate
    { 
        $current = $this_ImplementsPredcicate_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getUnitPrimaryExpressionAccess().getProvidesPredicateParserRuleCall_2(), currentNode); 
    }
    this_ProvidesPredicate_2=ruleProvidesPredicate
    { 
        $current = $this_ProvidesPredicate_2.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getUnitPrimaryExpressionAccess().getUnitNamePredicateParserRuleCall_3(), currentNode); 
    }
    this_UnitNamePredicate_3=ruleUnitNamePredicate
    { 
        $current = $this_UnitNamePredicate_3.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getUnitPrimaryExpressionAccess().getGroupedUnitPrimaryExpressionParserRuleCall_4(), currentNode); 
    }
    this_GroupedUnitPrimaryExpression_4=ruleGroupedUnitPrimaryExpression
    { 
        $current = $this_GroupedUnitPrimaryExpression_4.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleGroupedUnitPrimaryExpression
entryRuleGroupedUnitPrimaryExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getGroupedUnitPrimaryExpressionRule(), currentNode); }
	 iv_ruleGroupedUnitPrimaryExpression=ruleGroupedUnitPrimaryExpression 
	 { $current=$iv_ruleGroupedUnitPrimaryExpression.current; } 
	 EOF 
;

// Rule GroupedUnitPrimaryExpression
ruleGroupedUnitPrimaryExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'(' 
    {
        createLeafNode(grammarAccess.getGroupedUnitPrimaryExpressionAccess().getLeftParenthesisKeyword_0(), null); 
    }

	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getGroupedUnitPrimaryExpressionAccess().getUnitOrExpressionParserRuleCall_1(), currentNode); 
    }
    this_UnitOrExpression_1=ruleUnitOrExpression
    { 
        $current = $this_UnitOrExpression_1.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getGroupedUnitPrimaryExpressionAccess().getRightParenthesisKeyword_2(), null); 
    }
)
;





// Entry rule entryRuleRequiresPredicate
entryRuleRequiresPredicate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRequiresPredicateRule(), currentNode); }
	 iv_ruleRequiresPredicate=ruleRequiresPredicate 
	 { $current=$iv_ruleRequiresPredicate.current; } 
	 EOF 
;

// Rule RequiresPredicate
ruleRequiresPredicate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getRequiresPredicateAccess().getRequiresPredicateAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRequiresPredicateAccess().getRequiresPredicateAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'requires' 
    {
        createLeafNode(grammarAccess.getRequiresPredicateAccess().getRequiresKeyword_1(), null); 
    }
(
(
		lv_meta_2_0=	'env' 
    {
        createLeafNode(grammarAccess.getRequiresPredicateAccess().getMetaEnvKeyword_2_0(), "meta"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequiresPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "meta", true, "env", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'~=' 
    {
        createLeafNode(grammarAccess.getRequiresPredicateAccess().getTildeEqualsSignKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequiresPredicateAccess().getCapabilityPredicateCapabilityPredicateParserRuleCall_4_0(), currentNode); 
	    }
		lv_capabilityPredicate_4_0=ruleCapabilityPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequiresPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"capabilityPredicate",
	        		lv_capabilityPredicate_4_0, 
	        		"CapabilityPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleImplementsPredcicate
entryRuleImplementsPredcicate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getImplementsPredcicateRule(), currentNode); }
	 iv_ruleImplementsPredcicate=ruleImplementsPredcicate 
	 { $current=$iv_ruleImplementsPredcicate.current; } 
	 EOF 
;

// Rule ImplementsPredcicate
ruleImplementsPredcicate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getImplementsPredcicateAccess().getImplementsPredicateAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getImplementsPredcicateAccess().getImplementsPredicateAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'implements' 
    {
        createLeafNode(grammarAccess.getImplementsPredcicateAccess().getImplementsKeyword_1(), null); 
    }
	'==' 
    {
        createLeafNode(grammarAccess.getImplementsPredcicateAccess().getEqualsSignEqualsSignKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImplementsPredcicateAccess().getTypeTypeRefParserRuleCall_3_0(), currentNode); 
	    }
		lv_type_3_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImplementsPredcicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_3_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleProvidesPredicate
entryRuleProvidesPredicate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getProvidesPredicateRule(), currentNode); }
	 iv_ruleProvidesPredicate=ruleProvidesPredicate 
	 { $current=$iv_ruleProvidesPredicate.current; } 
	 EOF 
;

// Rule ProvidesPredicate
ruleProvidesPredicate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getProvidesPredicateAccess().getProvidesPredicateAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getProvidesPredicateAccess().getProvidesPredicateAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'provides' 
    {
        createLeafNode(grammarAccess.getProvidesPredicateAccess().getProvidesKeyword_1(), null); 
    }
	'~=' 
    {
        createLeafNode(grammarAccess.getProvidesPredicateAccess().getTildeEqualsSignKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProvidesPredicateAccess().getCapabilityPredicateCapabilityPredicateParserRuleCall_3_0(), currentNode); 
	    }
		lv_capabilityPredicate_3_0=ruleCapabilityPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProvidesPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"capabilityPredicate",
	        		lv_capabilityPredicate_3_0, 
	        		"CapabilityPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleUnitNamePredicate
entryRuleUnitNamePredicate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnitNamePredicateRule(), currentNode); }
	 iv_ruleUnitNamePredicate=ruleUnitNamePredicate 
	 { $current=$iv_ruleUnitNamePredicate.current; } 
	 EOF 
;

// Rule UnitNamePredicate
ruleUnitNamePredicate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getUnitNamePredicateAccess().getUnitNamePredicateAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getUnitNamePredicateAccess().getUnitNamePredicateAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'unit' 
    {
        createLeafNode(grammarAccess.getUnitNamePredicateAccess().getUnitKeyword_1(), null); 
    }
	'~=' 
    {
        createLeafNode(grammarAccess.getUnitNamePredicateAccess().getTildeEqualsSignKeyword_2(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getUnitNamePredicateAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(	'name' 
    {
        createLeafNode(grammarAccess.getUnitNamePredicateAccess().getNameKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitNamePredicateAccess().getNamePredicateQualifiedNamePredicateParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_namePredicate_5_0=ruleQualifiedNamePredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitNamePredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"namePredicate",
	        		lv_namePredicate_5_0, 
	        		"QualifiedNamePredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getUnitNamePredicateAccess().getSemicolonKeyword_4_2(), null); 
    }
)(	'version' 
    {
        createLeafNode(grammarAccess.getUnitNamePredicateAccess().getVersionKeyword_5_0(), null); 
    }
	'~=' 
    {
        createLeafNode(grammarAccess.getUnitNamePredicateAccess().getTildeEqualsSignKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitNamePredicateAccess().getVersionRangeVersionRangeLiteralParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_versionRange_9_0=ruleVersionRangeLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitNamePredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"versionRange",
	        		lv_versionRange_9_0, 
	        		"VersionRangeLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getUnitNamePredicateAccess().getSemicolonKeyword_5_3(), null); 
    }
)?	'}' 
    {
        createLeafNode(grammarAccess.getUnitNamePredicateAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleBuilderNamePredicate
entryRuleBuilderNamePredicate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBuilderNamePredicateRule(), currentNode); }
	 iv_ruleBuilderNamePredicate=ruleBuilderNamePredicate 
	 { $current=$iv_ruleBuilderNamePredicate.current; } 
	 EOF 
;

// Rule BuilderNamePredicate
ruleBuilderNamePredicate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBuilderNamePredicateAccess().getBuilderNamePredicateAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBuilderNamePredicateAccess().getBuilderNamePredicateAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'builder' 
    {
        createLeafNode(grammarAccess.getBuilderNamePredicateAccess().getBuilderKeyword_1(), null); 
    }
	'~=' 
    {
        createLeafNode(grammarAccess.getBuilderNamePredicateAccess().getTildeEqualsSignKeyword_2(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getBuilderNamePredicateAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(	'name' 
    {
        createLeafNode(grammarAccess.getBuilderNamePredicateAccess().getNameKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderNamePredicateAccess().getNamePredicateQualifiedNamePredicateParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_namePredicate_5_0=ruleQualifiedNamePredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderNamePredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"namePredicate",
	        		lv_namePredicate_5_0, 
	        		"QualifiedNamePredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBuilderNamePredicateAccess().getSemicolonKeyword_4_2(), null); 
    }
)	'}' 
    {
        createLeafNode(grammarAccess.getBuilderNamePredicateAccess().getRightCurlyBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleInputPredicate
entryRuleInputPredicate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInputPredicateRule(), currentNode); }
	 iv_ruleInputPredicate=ruleInputPredicate 
	 { $current=$iv_ruleInputPredicate.current; } 
	 EOF 
;

// Rule InputPredicate
ruleInputPredicate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getInputPredicateAccess().getInputPredicateAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getInputPredicateAccess().getInputPredicateAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'input' 
    {
        createLeafNode(grammarAccess.getInputPredicateAccess().getInputKeyword_1(), null); 
    }
	'~=' 
    {
        createLeafNode(grammarAccess.getInputPredicateAccess().getTildeEqualsSignKeyword_2(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getInputPredicateAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInputPredicateAccess().getCapabilityPredicateCapabilityPredicateParserRuleCall_4_0_0(), currentNode); 
	    }
		lv_capabilityPredicate_4_0=ruleCapabilityPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInputPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"capabilityPredicate",
	        		lv_capabilityPredicate_4_0, 
	        		"CapabilityPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInputPredicateAccess().getCapabilityPredicateUnitNamePredicateParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_capabilityPredicate_5_0=ruleUnitNamePredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInputPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"capabilityPredicate",
	        		lv_capabilityPredicate_5_0, 
	        		"UnitNamePredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(	'unit' 
    {
        createLeafNode(grammarAccess.getInputPredicateAccess().getUnitKeyword_4_2(), null); 
    }
)?)	'builder' 
    {
        createLeafNode(grammarAccess.getInputPredicateAccess().getBuilderKeyword_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInputPredicateAccess().getBuilderPredicateQualifiedNamePredicateParserRuleCall_6_0(), currentNode); 
	    }
		lv_builderPredicate_8_0=ruleQualifiedNamePredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInputPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"builderPredicate",
	        		lv_builderPredicate_8_0, 
	        		"QualifiedNamePredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getInputPredicateAccess().getSemicolonKeyword_7(), null); 
    }
	'}' 
    {
        createLeafNode(grammarAccess.getInputPredicateAccess().getRightCurlyBracketKeyword_8(), null); 
    }
)
;





// Entry rule entryRuleSourcePredicate
entryRuleSourcePredicate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSourcePredicateRule(), currentNode); }
	 iv_ruleSourcePredicate=ruleSourcePredicate 
	 { $current=$iv_ruleSourcePredicate.current; } 
	 EOF 
;

// Rule SourcePredicate
ruleSourcePredicate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getSourcePredicateAccess().getSourcePredicateAction_0_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSourcePredicateAccess().getSourcePredicateAction_0_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSourcePredicateAccess().getPathVectorBasePathPredicateParserRuleCall_0_1_0(), currentNode); 
	    }
		lv_pathVector_1_0=ruleBasePathPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSourcePredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"pathVector",
	        		lv_pathVector_1_0, 
	        		"BasePathPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSourcePredicateAccess().getPathVectorPathPredicateParserRuleCall_1_0(), currentNode); 
	    }
		lv_pathVector_2_0=rulePathPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSourcePredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"pathVector",
	        		lv_pathVector_2_0, 
	        		"PathPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSourcePredicateAccess().getPathPatternPatternLiteralParserRuleCall_2_0(), currentNode); 
	    }
		lv_pathPattern_3_0=rulePatternLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSourcePredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"pathPattern",
	        		lv_pathPattern_3_0, 
	        		"PatternLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleOutputPredicate
entryRuleOutputPredicate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getOutputPredicateRule(), currentNode); }
	 iv_ruleOutputPredicate=ruleOutputPredicate 
	 { $current=$iv_ruleOutputPredicate.current; } 
	 EOF 
;

// Rule OutputPredicate
ruleOutputPredicate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getOutputPredicateAccess().getOutputPredicateAction_0_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getOutputPredicateAccess().getOutputPredicateAction_0_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOutputPredicateAccess().getPathVectorBasePathPredicateParserRuleCall_0_1_0(), currentNode); 
	    }
		lv_pathVector_1_0=ruleBasePathPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"pathVector",
	        		lv_pathVector_1_0, 
	        		"BasePathPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOutputPredicateAccess().getPathVectorPathPredicateParserRuleCall_1_0(), currentNode); 
	    }
		lv_pathVector_2_0=rulePathPredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"pathVector",
	        		lv_pathVector_2_0, 
	        		"PathPredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOutputPredicateAccess().getPathPatternPatternLiteralParserRuleCall_2_0(), currentNode); 
	    }
		lv_pathPattern_3_0=rulePatternLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"pathPattern",
	        		lv_pathPattern_3_0, 
	        		"PatternLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleBasePathPredicate
entryRuleBasePathPredicate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBasePathPredicateRule(), currentNode); }
	 iv_ruleBasePathPredicate=ruleBasePathPredicate 
	 { $current=$iv_ruleBasePathPredicate.current; } 
	 EOF 
;

// Rule BasePathPredicate
ruleBasePathPredicate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBasePathPredicateAccess().getPathVectorAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBasePathPredicateAccess().getPathVectorAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBasePathPredicateAccess().getBasePathPathParserRuleCall_1_0(), currentNode); 
	    }
		lv_basePath_1_0=rulePath		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBasePathPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"basePath",
	        		lv_basePath_1_0, 
	        		"Path", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'[' 
    {
        createLeafNode(grammarAccess.getBasePathPredicateAccess().getLeftSquareBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBasePathPredicateAccess().getPathsPathParserRuleCall_3_0(), currentNode); 
	    }
		lv_paths_3_0=rulePath		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBasePathPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"paths",
	        		lv_paths_3_0, 
	        		"Path", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getBasePathPredicateAccess().getCommaKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBasePathPredicateAccess().getPathsPathParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_paths_5_0=rulePath		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBasePathPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"paths",
	        		lv_paths_5_0, 
	        		"Path", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getBasePathPredicateAccess().getRightSquareBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRulePathPredicate
entryRulePathPredicate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPathPredicateRule(), currentNode); }
	 iv_rulePathPredicate=rulePathPredicate 
	 { $current=$iv_rulePathPredicate.current; } 
	 EOF 
;

// Rule PathPredicate
rulePathPredicate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getPathPredicateAccess().getPathVectorAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPathPredicateAccess().getPathVectorAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPathPredicateAccess().getPathsPathParserRuleCall_1_0(), currentNode); 
	    }
		lv_paths_1_0=rulePath		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPathPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"paths",
	        		lv_paths_1_0, 
	        		"Path", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getPathPredicateAccess().getCommaKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPathPredicateAccess().getPathsPathParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_paths_3_0=rulePath		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPathPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"paths",
	        		lv_paths_3_0, 
	        		"Path", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleCapabilityPredicate
entryRuleCapabilityPredicate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCapabilityPredicateRule(), currentNode); }
	 iv_ruleCapabilityPredicate=ruleCapabilityPredicate 
	 { $current=$iv_ruleCapabilityPredicate.current; } 
	 EOF 
;

// Rule CapabilityPredicate
ruleCapabilityPredicate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getCapabilityPredicateAccess().getCapabilityPredicateAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getCapabilityPredicateAccess().getCapabilityPredicateAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'capability' 
    {
        createLeafNode(grammarAccess.getCapabilityPredicateAccess().getCapabilityKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getCapabilityPredicateAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'name-space' 
    {
        createLeafNode(grammarAccess.getCapabilityPredicateAccess().getNameSpaceKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCapabilityPredicateAccess().getNameSpacePredicateQualifiedNamePredicateParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_nameSpacePredicate_4_0=ruleQualifiedNamePredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCapabilityPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"nameSpacePredicate",
	        		lv_nameSpacePredicate_4_0, 
	        		"QualifiedNamePredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getCapabilityPredicateAccess().getSemicolonKeyword_3_2(), null); 
    }
)(	'name' 
    {
        createLeafNode(grammarAccess.getCapabilityPredicateAccess().getNameKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCapabilityPredicateAccess().getNamePredicateQualifiedNamePredicateParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_namePredicate_7_0=ruleQualifiedNamePredicate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCapabilityPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"namePredicate",
	        		lv_namePredicate_7_0, 
	        		"QualifiedNamePredicate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getCapabilityPredicateAccess().getSemicolonKeyword_4_2(), null); 
    }
)(	'version' 
    {
        createLeafNode(grammarAccess.getCapabilityPredicateAccess().getVersionKeyword_5_0(), null); 
    }
	'~=' 
    {
        createLeafNode(grammarAccess.getCapabilityPredicateAccess().getTildeEqualsSignKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCapabilityPredicateAccess().getVersionRangeVersionRangeLiteralParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_versionRange_11_0=ruleVersionRangeLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCapabilityPredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"versionRange",
	        		lv_versionRange_11_0, 
	        		"VersionRangeLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getCapabilityPredicateAccess().getSemicolonKeyword_5_3(), null); 
    }
)?	'}' 
    {
        createLeafNode(grammarAccess.getCapabilityPredicateAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleQualifiedNamePredicate
entryRuleQualifiedNamePredicate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getQualifiedNamePredicateRule(), currentNode); }
	 iv_ruleQualifiedNamePredicate=ruleQualifiedNamePredicate 
	 { $current=$iv_ruleQualifiedNamePredicate.current; } 
	 EOF 
;

// Rule QualifiedNamePredicate
ruleQualifiedNamePredicate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getQualifiedNamePredicateAccess().getBNamePredicateAction_0_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getQualifiedNamePredicateAccess().getBNamePredicateAction_0_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'==' 
    {
        createLeafNode(grammarAccess.getQualifiedNamePredicateAccess().getEqualsSignEqualsSignKeyword_0_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQualifiedNamePredicateAccess().getNameEscapedQualifiedNameParserRuleCall_0_1_1_0(), currentNode); 
	    }
		lv_name_2_0=ruleEscapedQualifiedName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQualifiedNamePredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"EscapedQualifiedName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))
    |(	'~=' 
    {
        createLeafNode(grammarAccess.getQualifiedNamePredicateAccess().getTildeEqualsSignKeyword_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQualifiedNamePredicateAccess().getNamePatternPatternLiteralParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_namePattern_4_0=rulePatternLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQualifiedNamePredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"namePattern",
	        		lv_namePattern_4_0, 
	        		"PatternLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))
;





// Entry rule entryRuleNamePredicate
entryRuleNamePredicate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNamePredicateRule(), currentNode); }
	 iv_ruleNamePredicate=ruleNamePredicate 
	 { $current=$iv_ruleNamePredicate.current; } 
	 EOF 
;

// Rule NamePredicate
ruleNamePredicate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getNamePredicateAccess().getBNamePredicateAction_0_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getNamePredicateAccess().getBNamePredicateAction_0_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNamePredicateAccess().getNameEscapedQualifiedNameParserRuleCall_0_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleEscapedQualifiedName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNamePredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"EscapedQualifiedName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNamePredicateAccess().getNamePatternPatternLiteralParserRuleCall_1_0(), currentNode); 
	    }
		lv_namePattern_2_0=rulePatternLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNamePredicateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"namePattern",
	        		lv_namePattern_2_0, 
	        		"PatternLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleBuilderOrExpression
entryRuleBuilderOrExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBuilderOrExpressionRule(), currentNode); }
	 iv_ruleBuilderOrExpression=ruleBuilderOrExpression 
	 { $current=$iv_ruleBuilderOrExpression.current; } 
	 EOF 
;

// Rule BuilderOrExpression
ruleBuilderOrExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getBuilderOrExpressionAccess().getBuilderAndExpressionParserRuleCall_0(), currentNode); 
    }
    this_BuilderAndExpression_0=ruleBuilderAndExpression
    { 
        $current = $this_BuilderAndExpression_0.current; 
        currentNode = currentNode.getParent();
    }
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBuilderOrExpressionAccess().getBOrExpressionLeftExprAction_1_0().getType().getClassifier());
        try {
        	factory.set(temp, "leftExpr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBuilderOrExpressionAccess().getBOrExpressionLeftExprAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'||' 
    {
        createLeafNode(grammarAccess.getBuilderOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderOrExpressionAccess().getRightExprBuilderAndExpressionParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_rightExpr_3_0=ruleBuilderAndExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderOrExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"rightExpr",
	        		lv_rightExpr_3_0, 
	        		"BuilderAndExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleBuilderAndExpression
entryRuleBuilderAndExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBuilderAndExpressionRule(), currentNode); }
	 iv_ruleBuilderAndExpression=ruleBuilderAndExpression 
	 { $current=$iv_ruleBuilderAndExpression.current; } 
	 EOF 
;

// Rule BuilderAndExpression
ruleBuilderAndExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getBuilderAndExpressionAccess().getBuilderNotOrPrimaryExpressionParserRuleCall_0(), currentNode); 
    }
    this_BuilderNotOrPrimaryExpression_0=ruleBuilderNotOrPrimaryExpression
    { 
        $current = $this_BuilderNotOrPrimaryExpression_0.current; 
        currentNode = currentNode.getParent();
    }
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBuilderAndExpressionAccess().getBAndExpressionLeftExprAction_1_0().getType().getClassifier());
        try {
        	factory.set(temp, "leftExpr", $current, null /*ParserRule*/, currentNode);
        } catch(ValueConverterException vce) {
        	handleValueConverterException(vce);
        }
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBuilderAndExpressionAccess().getBAndExpressionLeftExprAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'&&' 
    {
        createLeafNode(grammarAccess.getBuilderAndExpressionAccess().getAmpersandAmpersandKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderAndExpressionAccess().getRightExprBuilderNotOrPrimaryExpressionParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_rightExpr_3_0=ruleBuilderNotOrPrimaryExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderAndExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"rightExpr",
	        		lv_rightExpr_3_0, 
	        		"BuilderNotOrPrimaryExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleBuilderNotOrPrimaryExpression
entryRuleBuilderNotOrPrimaryExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBuilderNotOrPrimaryExpressionRule(), currentNode); }
	 iv_ruleBuilderNotOrPrimaryExpression=ruleBuilderNotOrPrimaryExpression 
	 { $current=$iv_ruleBuilderNotOrPrimaryExpression.current; } 
	 EOF 
;

// Rule BuilderNotOrPrimaryExpression
ruleBuilderNotOrPrimaryExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getBuilderNotOrPrimaryExpressionAccess().getBuilderNotExpressionParserRuleCall_0(), currentNode); 
    }
    this_BuilderNotExpression_0=ruleBuilderNotExpression
    { 
        $current = $this_BuilderNotExpression_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getBuilderNotOrPrimaryExpressionAccess().getBuilderPrimaryExpressionParserRuleCall_1(), currentNode); 
    }
    this_BuilderPrimaryExpression_1=ruleBuilderPrimaryExpression
    { 
        $current = $this_BuilderPrimaryExpression_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleBuilderNotExpression
entryRuleBuilderNotExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBuilderNotExpressionRule(), currentNode); }
	 iv_ruleBuilderNotExpression=ruleBuilderNotExpression 
	 { $current=$iv_ruleBuilderNotExpression.current; } 
	 EOF 
;

// Rule BuilderNotExpression
ruleBuilderNotExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBuilderNotExpressionAccess().getBUnaryOpExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBuilderNotExpressionAccess().getBUnaryOpExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_functionName_1_0=	'!' 
    {
        createLeafNode(grammarAccess.getBuilderNotExpressionAccess().getFunctionNameExclamationMarkKeyword_1_0(), "functionName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderNotExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "functionName", lv_functionName_1_0, "!", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBuilderNotExpressionAccess().getExprBuilderPrimaryExpressionParserRuleCall_2_0(), currentNode); 
	    }
		lv_expr_2_0=ruleBuilderPrimaryExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuilderNotExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_2_0, 
	        		"BuilderPrimaryExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleBuilderPrimaryExpression
entryRuleBuilderPrimaryExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBuilderPrimaryExpressionRule(), currentNode); }
	 iv_ruleBuilderPrimaryExpression=ruleBuilderPrimaryExpression 
	 { $current=$iv_ruleBuilderPrimaryExpression.current; } 
	 EOF 
;

// Rule BuilderPrimaryExpression
ruleBuilderPrimaryExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getBuilderPrimaryExpressionAccess().getInputPredicateParserRuleCall_0(), currentNode); 
    }
    this_InputPredicate_0=ruleInputPredicate
    { 
        $current = $this_InputPredicate_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getBuilderPrimaryExpressionAccess().getProvidesPredicateParserRuleCall_1(), currentNode); 
    }
    this_ProvidesPredicate_1=ruleProvidesPredicate
    { 
        $current = $this_ProvidesPredicate_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getBuilderPrimaryExpressionAccess().getBuilderNamePredicateParserRuleCall_2(), currentNode); 
    }
    this_BuilderNamePredicate_2=ruleBuilderNamePredicate
    { 
        $current = $this_BuilderNamePredicate_2.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getBuilderPrimaryExpressionAccess().getGroupedBuilderPrimaryExpressionParserRuleCall_3(), currentNode); 
    }
    this_GroupedBuilderPrimaryExpression_3=ruleGroupedBuilderPrimaryExpression
    { 
        $current = $this_GroupedBuilderPrimaryExpression_3.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleGroupedBuilderPrimaryExpression
entryRuleGroupedBuilderPrimaryExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getGroupedBuilderPrimaryExpressionRule(), currentNode); }
	 iv_ruleGroupedBuilderPrimaryExpression=ruleGroupedBuilderPrimaryExpression 
	 { $current=$iv_ruleGroupedBuilderPrimaryExpression.current; } 
	 EOF 
;

// Rule GroupedBuilderPrimaryExpression
ruleGroupedBuilderPrimaryExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'(' 
    {
        createLeafNode(grammarAccess.getGroupedBuilderPrimaryExpressionAccess().getLeftParenthesisKeyword_0(), null); 
    }

	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getGroupedBuilderPrimaryExpressionAccess().getBuilderOrExpressionParserRuleCall_1(), currentNode); 
    }
    this_BuilderOrExpression_1=ruleBuilderOrExpression
    { 
        $current = $this_BuilderOrExpression_1.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getGroupedBuilderPrimaryExpressionAccess().getRightParenthesisKeyword_2(), null); 
    }
)
;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLiteralRule(), currentNode); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0(), currentNode); 
    }
    this_ValueLiteral_0=ruleValueLiteral
    { 
        $current = $this_ValueLiteral_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getPatternLiteralParserRuleCall_1(), currentNode); 
    }
    this_PatternLiteral_1=rulePatternLiteral
    { 
        $current = $this_PatternLiteral_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getLiteralMapParserRuleCall_2(), currentNode); 
    }
    this_LiteralMap_2=ruleLiteralMap
    { 
        $current = $this_LiteralMap_2.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getLiteralListParserRuleCall_3(), currentNode); 
    }
    this_LiteralList_3=ruleLiteralList
    { 
        $current = $this_LiteralList_3.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getLiteralFunctionParserRuleCall_4(), currentNode); 
    }
    this_LiteralFunction_4=ruleLiteralFunction
    { 
        $current = $this_LiteralFunction_4.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRulePatternLiteral
entryRulePatternLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPatternLiteralRule(), currentNode); }
	 iv_rulePatternLiteral=rulePatternLiteral 
	 { $current=$iv_rulePatternLiteral.current; } 
	 EOF 
;

// Rule PatternLiteral
rulePatternLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPatternLiteralAccess().getRegexpLiteralParserRuleCall_0(), currentNode); 
    }
    this_RegexpLiteral_0=ruleRegexpLiteral
    { 
        $current = $this_RegexpLiteral_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPatternLiteralAccess().getSimplePatternLiteralParserRuleCall_1(), currentNode); 
    }
    this_SimplePatternLiteral_1=ruleSimplePatternLiteral
    { 
        $current = $this_SimplePatternLiteral_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPatternLiteralAccess().getWildcardExpressionParserRuleCall_2(), currentNode); 
    }
    this_WildcardExpression_2=ruleWildcardExpression
    { 
        $current = $this_WildcardExpression_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleLiteralList
entryRuleLiteralList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLiteralListRule(), currentNode); }
	 iv_ruleLiteralList=ruleLiteralList 
	 { $current=$iv_ruleLiteralList.current; } 
	 EOF 
;

// Rule LiteralList
ruleLiteralList returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getLiteralListAccess().getBLiteralListExpressionAction_0_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getLiteralListAccess().getBLiteralListExpressionAction_0_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'[' 
    {
        createLeafNode(grammarAccess.getLiteralListAccess().getLeftSquareBracketKeyword_0_1(), null); 
    }
(	'<' 
    {
        createLeafNode(grammarAccess.getLiteralListAccess().getLessThanSignKeyword_0_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLiteralListAccess().getEntryTypeTypeRefParserRuleCall_0_2_1_0(), currentNode); 
	    }
		lv_entryType_3_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"entryType",
	        		lv_entryType_3_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'>' 
    {
        createLeafNode(grammarAccess.getLiteralListAccess().getGreaterThanSignKeyword_0_2_2(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLiteralListAccess().getEntriesExpressionParserRuleCall_0_3_0(), currentNode); 
	    }
		lv_entries_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"entries",
	        		lv_entries_5_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getLiteralListAccess().getCommaKeyword_0_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLiteralListAccess().getEntriesExpressionParserRuleCall_0_4_1_0(), currentNode); 
	    }
		lv_entries_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"entries",
	        		lv_entries_7_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getLiteralListAccess().getRightSquareBracketKeyword_0_5(), null); 
    }
)
    |((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getLiteralListAccess().getBLiteralListExpressionAction_1_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getLiteralListAccess().getBLiteralListExpressionAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'[' 
    {
        createLeafNode(grammarAccess.getLiteralListAccess().getLeftSquareBracketKeyword_1_1(), null); 
    }
	'<' 
    {
        createLeafNode(grammarAccess.getLiteralListAccess().getLessThanSignKeyword_1_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLiteralListAccess().getEntryTypeTypeRefParserRuleCall_1_3_0(), currentNode); 
	    }
		lv_entryType_12_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"entryType",
	        		lv_entryType_12_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'>' 
    {
        createLeafNode(grammarAccess.getLiteralListAccess().getGreaterThanSignKeyword_1_4(), null); 
    }
	']' 
    {
        createLeafNode(grammarAccess.getLiteralListAccess().getRightSquareBracketKeyword_1_5(), null); 
    }
))
;





// Entry rule entryRuleLiteralMap
entryRuleLiteralMap returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLiteralMapRule(), currentNode); }
	 iv_ruleLiteralMap=ruleLiteralMap 
	 { $current=$iv_ruleLiteralMap.current; } 
	 EOF 
;

// Rule LiteralMap
ruleLiteralMap returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getLiteralMapAccess().getBLiteralMapExpressionAction_0_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getLiteralMapAccess().getBLiteralMapExpressionAction_0_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'[' 
    {
        createLeafNode(grammarAccess.getLiteralMapAccess().getLeftSquareBracketKeyword_0_1(), null); 
    }
(	'<' 
    {
        createLeafNode(grammarAccess.getLiteralMapAccess().getLessThanSignKeyword_0_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLiteralMapAccess().getKeyTypeTypeRefParserRuleCall_0_2_1_0(), currentNode); 
	    }
		lv_keyType_3_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralMapRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"keyType",
	        		lv_keyType_3_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getLiteralMapAccess().getCommaKeyword_0_2_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLiteralMapAccess().getValueTypeTypeRefParserRuleCall_0_2_3_0(), currentNode); 
	    }
		lv_valueType_5_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralMapRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"valueType",
	        		lv_valueType_5_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'>' 
    {
        createLeafNode(grammarAccess.getLiteralMapAccess().getGreaterThanSignKeyword_0_2_4(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLiteralMapAccess().getEntriesMapEntryParserRuleCall_0_3_0(), currentNode); 
	    }
		lv_entries_7_0=ruleMapEntry		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralMapRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"entries",
	        		lv_entries_7_0, 
	        		"MapEntry", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getLiteralMapAccess().getCommaKeyword_0_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLiteralMapAccess().getEntriesMapEntryParserRuleCall_0_4_1_0(), currentNode); 
	    }
		lv_entries_9_0=ruleMapEntry		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralMapRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"entries",
	        		lv_entries_9_0, 
	        		"MapEntry", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getLiteralMapAccess().getRightSquareBracketKeyword_0_5(), null); 
    }
)
    |((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getLiteralMapAccess().getBLiteralMapExpressionAction_1_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getLiteralMapAccess().getBLiteralMapExpressionAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'[' 
    {
        createLeafNode(grammarAccess.getLiteralMapAccess().getLeftSquareBracketKeyword_1_1(), null); 
    }
	'<' 
    {
        createLeafNode(grammarAccess.getLiteralMapAccess().getLessThanSignKeyword_1_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLiteralMapAccess().getKeyTypeTypeRefParserRuleCall_1_3_0(), currentNode); 
	    }
		lv_keyType_14_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralMapRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"keyType",
	        		lv_keyType_14_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getLiteralMapAccess().getCommaKeyword_1_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLiteralMapAccess().getValueTypeTypeRefParserRuleCall_1_5_0(), currentNode); 
	    }
		lv_valueType_16_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralMapRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"valueType",
	        		lv_valueType_16_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'>' 
    {
        createLeafNode(grammarAccess.getLiteralMapAccess().getGreaterThanSignKeyword_1_6(), null); 
    }
	']' 
    {
        createLeafNode(grammarAccess.getLiteralMapAccess().getRightSquareBracketKeyword_1_7(), null); 
    }
))
;





// Entry rule entryRuleLiteralFunction
entryRuleLiteralFunction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLiteralFunctionRule(), currentNode); }
	 iv_ruleLiteralFunction=ruleLiteralFunction 
	 { $current=$iv_ruleLiteralFunction.current; } 
	 EOF 
;

// Rule LiteralFunction
ruleLiteralFunction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'{' 
    {
        createLeafNode(grammarAccess.getLiteralFunctionAccess().getLeftCurlyBracketKeyword_0(), null); 
    }

	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getLiteralFunctionAccess().getClosureExpressionParserRuleCall_1(), currentNode); 
    }
    this_ClosureExpression_1=ruleClosureExpression
    { 
        $current = $this_ClosureExpression_1.current; 
        currentNode = currentNode.getParent();
    }
	'}' 
    {
        createLeafNode(grammarAccess.getLiteralFunctionAccess().getRightCurlyBracketKeyword_2(), null); 
    }
)
;





// Entry rule entryRuleClosureExpression
entryRuleClosureExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getClosureExpressionRule(), currentNode); }
	 iv_ruleClosureExpression=ruleClosureExpression 
	 { $current=$iv_ruleClosureExpression.current; } 
	 EOF 
;

// Rule ClosureExpression
ruleClosureExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getClosureExpressionAccess().getB3FunctionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getClosureExpressionAccess().getB3FunctionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'<' 
    {
        createLeafNode(grammarAccess.getClosureExpressionAccess().getLessThanSignKeyword_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getReturnTypeTypeRefParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_returnType_2_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"returnType",
	        		lv_returnType_2_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'>' 
    {
        createLeafNode(grammarAccess.getClosureExpressionAccess().getGreaterThanSignKeyword_1_2(), null); 
    }
)?(((	'|' 
    {
        createLeafNode(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_2_0_0(), null); 
    }
)?((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_0_0(), currentNode); 
	    }
		lv_parameters_5_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_5_0, 
	        		"ParameterDeclaration", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_1_1_0(), currentNode); 
	    }
		lv_parameters_7_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_7_0, 
	        		"ParameterDeclaration", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(	',' 
    {
        createLeafNode(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_2_0(), null); 
    }
(
(
		lv_varArgs_9_0=	'...' 
    {
        createLeafNode(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0(), "varArgs"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "varArgs", true, "...", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_2_2_0(), currentNode); 
	    }
		lv_parameters_10_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_10_0, 
	        		"ParameterDeclaration", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?))
    |((
(
		lv_varArgs_11_0=	'...' 
    {
        createLeafNode(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0(), "varArgs"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "varArgs", true, "...", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_parameters_12_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"parameters",
	        		lv_parameters_12_0, 
	        		"ParameterDeclaration", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))?	'|' 
    {
        createLeafNode(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getFuncExprOneOrManyExpressionsParserRuleCall_4_0(), currentNode); 
	    }
		lv_funcExpr_14_0=ruleOneOrManyExpressions		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"funcExpr",
	        		lv_funcExpr_14_0, 
	        		"OneOrManyExpressions", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleOneOrManyExpressions
entryRuleOneOrManyExpressions returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getOneOrManyExpressionsRule(), currentNode); }
	 iv_ruleOneOrManyExpressions=ruleOneOrManyExpressions 
	 { $current=$iv_ruleOneOrManyExpressions.current; } 
	 EOF 
;

// Rule OneOrManyExpressions
ruleOneOrManyExpressions returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0(), currentNode); 
    }
    this_BlockExpressionWithoutBrackets_0=ruleBlockExpressionWithoutBrackets
    { 
        $current = $this_BlockExpressionWithoutBrackets_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getOneOrManyExpressionsAccess().getExpressionParserRuleCall_1(), currentNode); 
    }
    this_Expression_1=ruleExpression
    { 
        $current = $this_Expression_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleBlockExpressionWithoutBrackets
entryRuleBlockExpressionWithoutBrackets returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBlockExpressionWithoutBracketsRule(), currentNode); }
	 iv_ruleBlockExpressionWithoutBrackets=ruleBlockExpressionWithoutBrackets 
	 { $current=$iv_ruleBlockExpressionWithoutBrackets.current; } 
	 EOF 
;

// Rule BlockExpressionWithoutBrackets
ruleBlockExpressionWithoutBrackets returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBlockExpressionWithoutBracketsAccess().getBChainedExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBlockExpressionWithoutBracketsAccess().getBChainedExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsTopLevelExpressionParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_expressions_1_0=ruleTopLevelExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBlockExpressionWithoutBracketsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"expressions",
	        		lv_expressions_1_0, 
	        		"TopLevelExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBlockExpressionWithoutBracketsAccess().getSemicolonKeyword_1_1(), null); 
    }
)*)
;





// Entry rule entryRuleMapEntry
entryRuleMapEntry returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMapEntryRule(), currentNode); }
	 iv_ruleMapEntry=ruleMapEntry 
	 { $current=$iv_ruleMapEntry.current; } 
	 EOF 
;

// Rule MapEntry
ruleMapEntry returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getMapEntryAccess().getBMapEntryAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getMapEntryAccess().getBMapEntryAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMapEntryAccess().getKeyKeyLiteralParserRuleCall_1_0(), currentNode); 
	    }
		lv_key_1_0=ruleKeyLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMapEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"key",
	        		lv_key_1_0, 
	        		"KeyLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getMapEntryAccess().getColonKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMapEntryAccess().getValueExpressionParserRuleCall_3_0(), currentNode); 
	    }
		lv_value_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMapEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_3_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleKeyLiteral
entryRuleKeyLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getKeyLiteralRule(), currentNode); }
	 iv_ruleKeyLiteral=ruleKeyLiteral 
	 { $current=$iv_ruleKeyLiteral.current; } 
	 EOF 
;

// Rule KeyLiteral
ruleKeyLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getKeyLiteralAccess().getBLiteralExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getKeyLiteralAccess().getBLiteralExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
(
		lv_value_1_1=RULE_ID
		{
			createLeafNode(grammarAccess.getKeyLiteralAccess().getValueIDTerminalRuleCall_1_0_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getKeyLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_1, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_value_1_2=RULE_PID
		{
			createLeafNode(grammarAccess.getKeyLiteralAccess().getValuePIDTerminalRuleCall_1_0_1(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getKeyLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_2, 
	        		"PID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_value_1_3=RULE_STRING
		{
			createLeafNode(grammarAccess.getKeyLiteralAccess().getValueSTRINGTerminalRuleCall_1_0_2(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getKeyLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_3, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
))
;





// Entry rule entryRuleLiteralType
entryRuleLiteralType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLiteralTypeRule(), currentNode); }
	 iv_ruleLiteralType=ruleLiteralType 
	 { $current=$iv_ruleLiteralType.current; } 
	 EOF 
;

// Rule LiteralType
ruleLiteralType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getLiteralTypeAccess().getBLiteralTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getLiteralTypeAccess().getBLiteralTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeTypeRefParserRuleCall_1_0(), currentNode); 
	    }
		lv_type_1_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_1_0, 
	        		"TypeRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleValueLiteral
entryRuleValueLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getValueLiteralRule(), currentNode); }
	 iv_ruleValueLiteral=ruleValueLiteral 
	 { $current=$iv_ruleValueLiteral.current; } 
	 EOF 
;

// Rule ValueLiteral
ruleValueLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getBooleanLiteralParserRuleCall_0(), currentNode); 
    }
    this_BooleanLiteral_0=ruleBooleanLiteral
    { 
        $current = $this_BooleanLiteral_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getRealLiteralParserRuleCall_1(), currentNode); 
    }
    this_RealLiteral_1=ruleRealLiteral
    { 
        $current = $this_RealLiteral_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getIntegerLiteralParserRuleCall_2(), currentNode); 
    }
    this_IntegerLiteral_2=ruleIntegerLiteral
    { 
        $current = $this_IntegerLiteral_2.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getNullLiteralParserRuleCall_3(), currentNode); 
    }
    this_NullLiteral_3=ruleNullLiteral
    { 
        $current = $this_NullLiteral_3.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getStringLiteralParserRuleCall_4(), currentNode); 
    }
    this_StringLiteral_4=ruleStringLiteral
    { 
        $current = $this_StringLiteral_4.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getUnitLiteralParserRuleCall_5(), currentNode); 
    }
    this_UnitLiteral_5=ruleUnitLiteral
    { 
        $current = $this_UnitLiteral_5.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBooleanLiteralRule(), currentNode); }
	 iv_ruleBooleanLiteral=ruleBooleanLiteral 
	 { $current=$iv_ruleBooleanLiteral.current; } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getBooleanLiteralAccess().getBLiteralExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBooleanLiteralAccess().getBLiteralExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBooleanLiteralAccess().getValueBooleanValueParserRuleCall_1_0(), currentNode); 
	    }
		lv_value_1_0=ruleBooleanValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBooleanLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"BooleanValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getIntegerLiteralRule(), currentNode); }
	 iv_ruleIntegerLiteral=ruleIntegerLiteral 
	 { $current=$iv_ruleIntegerLiteral.current; } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getIntegerLiteralAccess().getBLiteralExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getIntegerLiteralAccess().getBLiteralExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getIntegerLiteralAccess().getValueIntValueParserRuleCall_1_0(), currentNode); 
	    }
		lv_value_1_0=ruleIntValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getIntegerLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"IntValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleUnitLiteral
entryRuleUnitLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnitLiteralRule(), currentNode); }
	 iv_ruleUnitLiteral=ruleUnitLiteral 
	 { $current=$iv_ruleUnitLiteral.current; } 
	 EOF 
;

// Rule UnitLiteral
ruleUnitLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getUnitLiteralAccess().getBLiteralExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getUnitLiteralAccess().getBLiteralExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_value_1_0=	'unit' 
    {
        createLeafNode(grammarAccess.getUnitLiteralAccess().getValueUnitKeyword_1_0(), "value"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "value", lv_value_1_0, "unit", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStringLiteralRule(), currentNode); }
	 iv_ruleStringLiteral=ruleStringLiteral 
	 { $current=$iv_ruleStringLiteral.current; } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getStringLiteralAccess().getBLiteralExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getStringLiteralAccess().getBLiteralExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStringLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleRealLiteral
entryRuleRealLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRealLiteralRule(), currentNode); }
	 iv_ruleRealLiteral=ruleRealLiteral 
	 { $current=$iv_ruleRealLiteral.current; } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getRealLiteralAccess().getBLiteralExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRealLiteralAccess().getBLiteralExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRealLiteralAccess().getValueRealValueParserRuleCall_1_0(), currentNode); 
	    }
		lv_value_1_0=ruleRealValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRealLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"RealValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleRegexpLiteral
entryRuleRegexpLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRegexpLiteralRule(), currentNode); }
	 iv_ruleRegexpLiteral=ruleRegexpLiteral 
	 { $current=$iv_ruleRegexpLiteral.current; } 
	 EOF 
;

// Rule RegexpLiteral
ruleRegexpLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getRegexpLiteralAccess().getBRegularExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRegexpLiteralAccess().getBRegularExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_pattern_1_0=RULE_REGULAR_EXPR
		{
			createLeafNode(grammarAccess.getRegexpLiteralAccess().getPatternREGULAR_EXPRTerminalRuleCall_1_0(), "pattern"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRegexpLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"pattern",
	        		lv_pattern_1_0, 
	        		"REGULAR_EXPR", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleSimplePatternLiteral
entryRuleSimplePatternLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSimplePatternLiteralRule(), currentNode); }
	 iv_ruleSimplePatternLiteral=ruleSimplePatternLiteral 
	 { $current=$iv_ruleSimplePatternLiteral.current; } 
	 EOF 
;

// Rule SimplePatternLiteral
ruleSimplePatternLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getSimplePatternLiteralAccess().getBSimplePatternExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSimplePatternLiteralAccess().getBSimplePatternExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_pattern_1_0=RULE_SIMPLE_PATTERN
		{
			createLeafNode(grammarAccess.getSimplePatternLiteralAccess().getPatternSIMPLE_PATTERNTerminalRuleCall_1_0(), "pattern"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimplePatternLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"pattern",
	        		lv_pattern_1_0, 
	        		"SIMPLE_PATTERN", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleNullLiteral
entryRuleNullLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNullLiteralRule(), currentNode); }
	 iv_ruleNullLiteral=ruleNullLiteral 
	 { $current=$iv_ruleNullLiteral.current; } 
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
	{ 
	  /* */ 
	}
    { 
        temp=factory.create(grammarAccess.getNullLiteralAccess().getBLiteralExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getNullLiteralAccess().getBLiteralExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'null' 
    {
        createLeafNode(grammarAccess.getNullLiteralAccess().getNullKeyword_1(), null); 
    }
)
;





// Entry rule entryRuleBooleanValue
entryRuleBooleanValue returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBooleanValueRule(), currentNode); } 
	 iv_ruleBooleanValue=ruleBooleanValue 
	 { $current=$iv_ruleBooleanValue.current.getText(); }  
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='true' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getBooleanValueAccess().getTrueKeyword_0(), null); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getBooleanValueAccess().getFalseKeyword_1(), null); 
    }
)
    ;





// Entry rule entryRuleRealValue
entryRuleRealValue returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRealValueRule(), currentNode); } 
	 iv_ruleRealValue=ruleRealValue 
	 { $current=$iv_ruleRealValue.current.getText(); }  
	 EOF 
;

// Rule RealValue
ruleRealValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getRealValueAccess().getREALParserRuleCall(), currentNode); 
    }
    this_REAL_0=ruleREAL    {
		$current.merge(this_REAL_0);
    }

    { 
        currentNode = currentNode.getParent();
    }

    ;





// Entry rule entryRuleIntValue
entryRuleIntValue returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getIntValueRule(), currentNode); } 
	 iv_ruleIntValue=ruleIntValue 
	 { $current=$iv_ruleIntValue.current.getText(); }  
	 EOF 
;

// Rule IntValue
ruleIntValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    createLeafNode(grammarAccess.getIntValueAccess().getINTTerminalRuleCall_0(), null); 
    }

    |    this_HEX_1=RULE_HEX    {
		$current.merge(this_HEX_1);
    }

    { 
    createLeafNode(grammarAccess.getIntValueAccess().getHEXTerminalRuleCall_1(), null); 
    }
)
    ;





// Entry rule entryRuleParanthesizedExpression
entryRuleParanthesizedExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getParanthesizedExpressionRule(), currentNode); }
	 iv_ruleParanthesizedExpression=ruleParanthesizedExpression 
	 { $current=$iv_ruleParanthesizedExpression.current; } 
	 EOF 
;

// Rule ParanthesizedExpression
ruleParanthesizedExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'(' 
    {
        createLeafNode(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0(), null); 
    }

	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1(), currentNode); 
    }
    this_Expression_1=ruleExpression
    { 
        $current = $this_Expression_1.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2(), null); 
    }
)
;





// Entry rule entryRuleVersionLiteral
entryRuleVersionLiteral returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getVersionLiteralRule(), currentNode); } 
	 iv_ruleVersionLiteral=ruleVersionLiteral 
	 { $current=$iv_ruleVersionLiteral.current.getText(); }  
	 EOF 
;

// Rule VersionLiteral
ruleVersionLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    createLeafNode(grammarAccess.getVersionLiteralAccess().getSTRINGTerminalRuleCall_0(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getVersionLiteralAccess().getAlfanumSymParserRuleCall_1(), currentNode); 
    }
    this_AlfanumSym_1=ruleAlfanumSym    {
		$current.merge(this_AlfanumSym_1);
    }

    { 
        currentNode = currentNode.getParent();
    }
)
    ;





// Entry rule entryRuleVersionRangeLiteral
entryRuleVersionRangeLiteral returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getVersionRangeLiteralRule(), currentNode); } 
	 iv_ruleVersionRangeLiteral=ruleVersionRangeLiteral 
	 { $current=$iv_ruleVersionRangeLiteral.current.getText(); }  
	 EOF 
;

// Rule VersionRangeLiteral
ruleVersionRangeLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(((
	kw='[' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getVersionRangeLiteralAccess().getLeftSquareBracketKeyword_0_0_0(), null); 
    }

    |
	kw='(' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getVersionRangeLiteralAccess().getLeftParenthesisKeyword_0_0_1(), null); 
    }
)(    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    createLeafNode(grammarAccess.getVersionRangeLiteralAccess().getSTRINGTerminalRuleCall_0_1_0(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getVersionRangeLiteralAccess().getAlfanumSymParserRuleCall_0_1_1(), currentNode); 
    }
    this_AlfanumSym_3=ruleAlfanumSym    {
		$current.merge(this_AlfanumSym_3);
    }

    { 
        currentNode = currentNode.getParent();
    }
)(
	kw=',' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getVersionRangeLiteralAccess().getCommaKeyword_0_2_0(), null); 
    }
(    this_STRING_5=RULE_STRING    {
		$current.merge(this_STRING_5);
    }

    { 
    createLeafNode(grammarAccess.getVersionRangeLiteralAccess().getSTRINGTerminalRuleCall_0_2_1_0(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getVersionRangeLiteralAccess().getAlfanumSymParserRuleCall_0_2_1_1(), currentNode); 
    }
    this_AlfanumSym_6=ruleAlfanumSym    {
		$current.merge(this_AlfanumSym_6);
    }

    { 
        currentNode = currentNode.getParent();
    }
))?(
	kw=']' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getVersionRangeLiteralAccess().getRightSquareBracketKeyword_0_3_0(), null); 
    }

    |
	kw=')' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getVersionRangeLiteralAccess().getRightParenthesisKeyword_0_3_1(), null); 
    }
))
    |(    this_STRING_9=RULE_STRING    {
		$current.merge(this_STRING_9);
    }

    { 
    createLeafNode(grammarAccess.getVersionRangeLiteralAccess().getSTRINGTerminalRuleCall_1_0(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getVersionRangeLiteralAccess().getAlfanumSymParserRuleCall_1_1(), currentNode); 
    }
    this_AlfanumSym_10=ruleAlfanumSym    {
		$current.merge(this_AlfanumSym_10);
    }

    { 
        currentNode = currentNode.getParent();
    }
))
    ;





// Entry rule entryRuleQIDREF
entryRuleQIDREF returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getQIDREFRule(), currentNode); } 
	 iv_ruleQIDREF=ruleQIDREF 
	 { $current=$iv_ruleQIDREF.current.getText(); }  
	 EOF 
;

// Rule QIDREF
ruleQIDREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(((
	kw='super' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getQIDREFAccess().getSuperKeyword_0_0_0(), null); 
    }

    |((
	kw='unit' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getQIDREFAccess().getUnitKeyword_0_0_1_0_0(), null); 
    }

    |
	kw='this' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getQIDREFAccess().getThisKeyword_0_0_1_0_1(), null); 
    }
)(
	kw='.' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getQIDREFAccess().getFullStopKeyword_0_0_1_1_0(), null); 
    }

	kw='super' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getQIDREFAccess().getSuperKeyword_0_0_1_1_1(), null); 
    }
)?))(
	kw='.' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getQIDREFAccess().getFullStopKeyword_0_1_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getQIDREFAccess().getQIDParserRuleCall_0_1_1(), currentNode); 
    }
    this_QID_6=ruleQID    {
		$current.merge(this_QID_6);
    }

    { 
        currentNode = currentNode.getParent();
    }
)?)
    |
    { 
        currentNode=createCompositeNode(grammarAccess.getQIDREFAccess().getQIDParserRuleCall_1(), currentNode); 
    }
    this_QID_7=ruleQID    {
		$current.merge(this_QID_7);
    }

    { 
        currentNode = currentNode.getParent();
    }
)
    ;





// Entry rule entryRuleQID
entryRuleQID returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ currentNode = createCompositeNode(grammarAccess.getQIDRule(), currentNode); } 
	 iv_ruleQID=ruleQID 
	 { $current=$iv_ruleQID.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QID
ruleQID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getQIDAccess().getID_or_KWParserRuleCall_0(), currentNode); 
    }
    this_ID_or_KW_0=ruleID_or_KW    {
		$current.merge(this_ID_or_KW_0);
    }

    { 
        currentNode = currentNode.getParent();
    }
(    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    createLeafNode(grammarAccess.getQIDAccess().getINTTerminalRuleCall_1_0(), null); 
    }

    |    this_HEX_2=RULE_HEX    {
		$current.merge(this_HEX_2);
    }

    { 
    createLeafNode(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_1_1(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getQIDAccess().getID_or_KWParserRuleCall_1_2(), currentNode); 
    }
    this_ID_or_KW_3=ruleID_or_KW    {
		$current.merge(this_ID_or_KW_3);
    }

    { 
        currentNode = currentNode.getParent();
    }
)*(
	kw='.' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getQIDAccess().getFullStopKeyword_2_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getQIDAccess().getID_or_KWParserRuleCall_2_1(), currentNode); 
    }
    this_ID_or_KW_5=ruleID_or_KW    {
		$current.merge(this_ID_or_KW_5);
    }

    { 
        currentNode = currentNode.getParent();
    }
(    this_INT_6=RULE_INT    {
		$current.merge(this_INT_6);
    }

    { 
    createLeafNode(grammarAccess.getQIDAccess().getINTTerminalRuleCall_2_2_0(), null); 
    }

    |    this_HEX_7=RULE_HEX    {
		$current.merge(this_HEX_7);
    }

    { 
    createLeafNode(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_2_2_1(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getQIDAccess().getID_or_KWParserRuleCall_2_2_2(), currentNode); 
    }
    this_ID_or_KW_8=ruleID_or_KW    {
		$current.merge(this_ID_or_KW_8);
    }

    { 
        currentNode = currentNode.getParent();
    }
)*)*)
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleEscapedQualifiedName
entryRuleEscapedQualifiedName returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEscapedQualifiedNameRule(), currentNode); } 
	 iv_ruleEscapedQualifiedName=ruleEscapedQualifiedName 
	 { $current=$iv_ruleEscapedQualifiedName.current.getText(); }  
	 EOF 
;

// Rule EscapedQualifiedName
ruleEscapedQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    createLeafNode(grammarAccess.getEscapedQualifiedNameAccess().getSTRINGTerminalRuleCall_0(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getEscapedQualifiedNameAccess().getQIDParserRuleCall_1(), currentNode); 
    }
    this_QID_1=ruleQID    {
		$current.merge(this_QID_1);
    }

    { 
        currentNode = currentNode.getParent();
    }
)
    ;





// Entry rule entryRuleCapabilityInterface
entryRuleCapabilityInterface returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCapabilityInterfaceRule(), currentNode); } 
	 iv_ruleCapabilityInterface=ruleCapabilityInterface 
	 { $current=$iv_ruleCapabilityInterface.current.getText(); }  
	 EOF 
;

// Rule CapabilityInterface
ruleCapabilityInterface returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getCapabilityInterfaceAccess().getQIDParserRuleCall(), currentNode); 
    }
    this_QID_0=ruleQID    {
		$current.merge(this_QID_0);
    }

    { 
        currentNode = currentNode.getParent();
    }

    ;





// Entry rule entryRuleUnitName
entryRuleUnitName returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnitNameRule(), currentNode); } 
	 iv_ruleUnitName=ruleUnitName 
	 { $current=$iv_ruleUnitName.current.getText(); }  
	 EOF 
;

// Rule UnitName
ruleUnitName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getUnitNameAccess().getEscapedQualifiedNameParserRuleCall(), currentNode); 
    }
    this_EscapedQualifiedName_0=ruleEscapedQualifiedName    {
		$current.merge(this_EscapedQualifiedName_0);
    }

    { 
        currentNode = currentNode.getParent();
    }

    ;





// Entry rule entryRuleBuilderName
entryRuleBuilderName returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBuilderNameRule(), currentNode); } 
	 iv_ruleBuilderName=ruleBuilderName 
	 { $current=$iv_ruleBuilderName.current.getText(); }  
	 EOF 
;

// Rule BuilderName
ruleBuilderName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getBuilderNameAccess().getEscapedQualifiedNameParserRuleCall(), currentNode); 
    }
    this_EscapedQualifiedName_0=ruleEscapedQualifiedName    {
		$current.merge(this_EscapedQualifiedName_0);
    }

    { 
        currentNode = currentNode.getParent();
    }

    ;









// Entry rule entryRuleSeparator
entryRuleSeparator returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSeparatorRule(), currentNode); } 
	 iv_ruleSeparator=ruleSeparator 
	 { $current=$iv_ruleSeparator.current.getText(); }  
	 EOF 
;

// Rule Separator
ruleSeparator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='-' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSeparatorAccess().getHyphenMinusKeyword_0(), null); 
    }

    |
	kw='!' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSeparatorAccess().getExclamationMarkKeyword_1(), null); 
    }

    |
	kw='@' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSeparatorAccess().getCommercialAtKeyword_2(), null); 
    }

    |
	kw='$' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSeparatorAccess().getDollarSignKeyword_3(), null); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSeparatorAccess().getPercentSignKeyword_4(), null); 
    }

    |
	kw='&' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSeparatorAccess().getAmpersandKeyword_5(), null); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSeparatorAccess().getPlusSignKeyword_6(), null); 
    }

    |
	kw='=' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSeparatorAccess().getEqualsSignKeyword_7(), null); 
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSeparatorAccess().getAsteriskKeyword_8(), null); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSeparatorAccess().getLessThanSignKeyword_9(), null); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSeparatorAccess().getGreaterThanSignKeyword_10(), null); 
    }

    |
	kw=':' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSeparatorAccess().getColonKeyword_11(), null); 
    }

    |
	kw='?' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSeparatorAccess().getQuestionMarkKeyword_12(), null); 
    }
)
    ;





// Entry rule entryRuleAlfanumSym
entryRuleAlfanumSym returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ currentNode = createCompositeNode(grammarAccess.getAlfanumSymRule(), currentNode); } 
	 iv_ruleAlfanumSym=ruleAlfanumSym 
	 { $current=$iv_ruleAlfanumSym.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AlfanumSym
ruleAlfanumSym returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_0_0(), null); 
    }

    |    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    createLeafNode(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_0_1(), null); 
    }

    |    this_HEX_2=RULE_HEX    {
		$current.merge(this_HEX_2);
    }

    { 
    createLeafNode(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_0_2(), null); 
    }

    |    this_EXT_INT_3=RULE_EXT_INT    {
		$current.merge(this_EXT_INT_3);
    }

    { 
    createLeafNode(grammarAccess.getAlfanumSymAccess().getEXT_INTTerminalRuleCall_0_3(), null); 
    }
)((
	kw='.' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAlfanumSymAccess().getFullStopKeyword_1_0(), null); 
    }
)?(
    { 
        currentNode=createCompositeNode(grammarAccess.getAlfanumSymAccess().getSeparatorParserRuleCall_1_1_0(), currentNode); 
    }
    this_Separator_5=ruleSeparator    {
		$current.merge(this_Separator_5);
    }

    { 
        currentNode = currentNode.getParent();
    }

    |    this_ID_6=RULE_ID    {
		$current.merge(this_ID_6);
    }

    { 
    createLeafNode(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_1_1_1(), null); 
    }

    |    this_INT_7=RULE_INT    {
		$current.merge(this_INT_7);
    }

    { 
    createLeafNode(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_1_1_2(), null); 
    }

    |    this_HEX_8=RULE_HEX    {
		$current.merge(this_HEX_8);
    }

    { 
    createLeafNode(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_1_1_3(), null); 
    }

    |    this_EXT_INT_9=RULE_EXT_INT    {
		$current.merge(this_EXT_INT_9);
    }

    { 
    createLeafNode(grammarAccess.getAlfanumSymAccess().getEXT_INTTerminalRuleCall_1_1_4(), null); 
    }
))*)
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleREAL
entryRuleREAL returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ currentNode = createCompositeNode(grammarAccess.getREALRule(), currentNode); } 
	 iv_ruleREAL=ruleREAL 
	 { $current=$iv_ruleREAL.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule REAL
ruleREAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
((    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    createLeafNode(grammarAccess.getREALAccess().getINTTerminalRuleCall_0(), null); 
    }
)?
	kw='.' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getREALAccess().getFullStopKeyword_1(), null); 
    }
(    this_EXT_INT_2=RULE_EXT_INT    {
		$current.merge(this_EXT_INT_2);
    }

    { 
    createLeafNode(grammarAccess.getREALAccess().getEXT_INTTerminalRuleCall_2_0(), null); 
    }

    |    this_INT_3=RULE_INT    {
		$current.merge(this_INT_3);
    }

    { 
    createLeafNode(grammarAccess.getREALAccess().getINTTerminalRuleCall_2_1(), null); 
    }
))
    ;
finally {
	myHiddenTokenState.restore();
}





// Rule BranchPointTypeLatest
ruleBranchPointTypeLatest returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'latest' 
	{
        $current = grammarAccess.getBranchPointTypeLatestAccess().getLatestEnumLiteralDeclaration().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getBranchPointTypeLatestAccess().getLatestEnumLiteralDeclaration(), null); 
    }
);



// Rule BranchPointTypeOther
ruleBranchPointTypeOther returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'latest' 
	{
        $current = grammarAccess.getBranchPointTypeOtherAccess().getLatestEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getBranchPointTypeOtherAccess().getLatestEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'revision' 
	{
        $current = grammarAccess.getBranchPointTypeOtherAccess().getRevisionEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getBranchPointTypeOtherAccess().getRevisionEnumLiteralDeclaration_1(), null); 
    }
)
    |(	'tag' 
	{
        $current = grammarAccess.getBranchPointTypeOtherAccess().getTagEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getBranchPointTypeOtherAccess().getTagEnumLiteralDeclaration_2(), null); 
    }
)
    |(	'timestamp' 
	{
        $current = grammarAccess.getBranchPointTypeOtherAccess().getTimestampEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getBranchPointTypeOtherAccess().getTimestampEnumLiteralDeclaration_3(), null); 
    }
));



// Rule UpdateStrategy
ruleUpdateStrategy returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'fail-modified' 
	{
        $current = grammarAccess.getUpdateStrategyAccess().getFailModifiedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUpdateStrategyAccess().getFailModifiedEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'keep-modified' 
	{
        $current = grammarAccess.getUpdateStrategyAccess().getKeepModifiedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUpdateStrategyAccess().getKeepModifiedEnumLiteralDeclaration_1(), null); 
    }
)
    |(	'merge-modified' 
	{
        $current = grammarAccess.getUpdateStrategyAccess().getMergeEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUpdateStrategyAccess().getMergeEnumLiteralDeclaration_2(), null); 
    }
)
    |(	'no-update' 
	{
        $current = grammarAccess.getUpdateStrategyAccess().getNoUpdateEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUpdateStrategyAccess().getNoUpdateEnumLiteralDeclaration_3(), null); 
    }
)
    |(	'replace-modified' 
	{
        $current = grammarAccess.getUpdateStrategyAccess().getReplaceModifiedEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUpdateStrategyAccess().getReplaceModifiedEnumLiteralDeclaration_4(), null); 
    }
)
    |(	'default' 
	{
        $current = grammarAccess.getUpdateStrategyAccess().getBranchPointDefaultEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUpdateStrategyAccess().getBranchPointDefaultEnumLiteralDeclaration_5(), null); 
    }
));



// Rule Visibility
ruleVisibility returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'public' 
	{
        $current = grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'private' 
	{
        $current = grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1(), null); 
    }
));



// Rule ExecutionMode
ruleExecutionMode returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'parallel' 
	{
        $current = grammarAccess.getExecutionModeAccess().getParallelEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getExecutionModeAccess().getParallelEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'sequential' 
	{
        $current = grammarAccess.getExecutionModeAccess().getSequentialEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getExecutionModeAccess().getSequentialEnumLiteralDeclaration_1(), null); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

RULE_PID : '$' '{' RULE_ID ('.' RULE_ID)* '}';

RULE_REGULAR_EXPR : '~/' ('\\' ~(('\t'|'\r'|'\n'))|~(('\\'|'/'|' '|'\t'|'\r'|'\n')))* '/' ('u'|'m'|'i'|'c'|'d')*;

RULE_SIMPLE_PATTERN : '~' RULE_STRING;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'x'|'0'|'"'|'\''|'\\')|~(('\\'|'"'|'\r'|'\n')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'x'|'0'|'"'|'\''|'\\')|~(('\\'|'\''|'\r'|'\n')))* '\'');

RULE_DOCUMENTATION : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_HEX : '0' ('x'|'X') ('0'..'9'|'a'..'f'|'A'..'F')+;

RULE_INT : ('0'..'9')+;

RULE_EXT_INT : RULE_INT ('e'|'E') ('-'|'+') RULE_INT;

RULE_ANY_OTHER : .;


