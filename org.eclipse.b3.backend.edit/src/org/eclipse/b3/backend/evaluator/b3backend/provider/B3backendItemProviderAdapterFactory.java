/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.b3.backend.evaluator.b3backend.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.b3.backend.evaluator.b3backend.util.B3backendAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * 
 * @generated
 */
public class B3backendItemProviderAdapterFactory extends B3backendAdapterFactory implements ComposeableAdapterFactory,
		IChangeNotifier, IDisposable {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public static final String copyright = "Copyright (c) 2009, Cloudsmith Inc and others.\nAll rights reserved. This program and the accompanying materials\nare made available under the terms of the Eclipse Public License v1.0\nwhich accompanies this distribution, and is available at\nhttp://www.eclipse.org/legal/epl-v10.html\n\rContributors:\n- Cloudsmith Inc - initial API and implementation.\r";

	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BIfExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BIfExpressionItemProvider bIfExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BSwitchExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BSwitchExpressionItemProvider bSwitchExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BCase} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BCaseItemProvider bCaseItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BTryExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BTryExpressionItemProvider bTryExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BCatch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BCatchItemProvider bCatchItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BOrExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BOrExpressionItemProvider bOrExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BAndExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BAndExpressionItemProvider bAndExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BChainedExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BChainedExpressionItemProvider bChainedExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BThrowExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BThrowExpressionItemProvider bThrowExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BUnaryOpExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BUnaryOpExpressionItemProvider bUnaryOpExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BUnaryPostOpExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BUnaryPostOpExpressionItemProvider bUnaryPostOpExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BBinaryOpExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BBinaryOpExpressionItemProvider bBinaryOpExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BCachedExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BCachedExpressionItemProvider bCachedExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BLiteralExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BLiteralExpressionItemProvider bLiteralExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BLiteralListExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BLiteralListExpressionItemProvider bLiteralListExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BLiteralMapExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BLiteralMapExpressionItemProvider bLiteralMapExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BMapEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BMapEntryItemProvider bMapEntryItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BFeatureExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BFeatureExpressionItemProvider bFeatureExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BAtExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BAtExpressionItemProvider bAtExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BVariableExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BVariableExpressionItemProvider bVariableExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BLiteralAny} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BLiteralAnyItemProvider bLiteralAnyItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BCreateExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BCreateExpressionItemProvider bCreateExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BGuardExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BGuardExpressionItemProvider bGuardExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BSystemContext} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BSystemContextItemProvider bSystemContextItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BContext} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BContextItemProvider bContextItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BInnerContext} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BInnerContextItemProvider bInnerContextItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BInvocationContext} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BInvocationContextItemProvider bInvocationContextItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BUnaryPreOpExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BUnaryPreOpExpressionItemProvider bUnaryPreOpExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BAssignmentExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BAssignmentExpressionItemProvider bAssignmentExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.B3Function} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected B3FunctionItemProvider b3FunctionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BJavaFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BJavaFunctionItemProvider bJavaFunctionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BDefValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BDefValueItemProvider bDefValueItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BRegularExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BRegularExpressionItemProvider bRegularExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BParameterList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BParameterListItemProvider bParameterListItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BParameterItemProvider bParameterItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BParameterDeclaration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BParameterDeclarationItemProvider bParameterDeclarationItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.B3FunctionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected B3FunctionTypeItemProvider b3FunctionTypeItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.B3ParameterizedType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected B3ParameterizedTypeItemProvider b3ParameterizedTypeItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.B3WildcardType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected B3WildcardTypeItemProvider b3WildcardTypeItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.B3FuncTypeVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected B3FuncTypeVariableItemProvider b3FuncTypeVariableItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.B3JavaImport} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected B3JavaImportItemProvider b3JavaImportItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BLiteralType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BLiteralTypeItemProvider bLiteralTypeItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BGuardFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BGuardFunctionItemProvider bGuardFunctionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BTypeCalculator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BTypeCalculatorItemProvider bTypeCalculatorItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BTypeCalculatorFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BTypeCalculatorFunctionItemProvider bTypeCalculatorFunctionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BInstanceContext} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BInstanceContextItemProvider bInstanceContextItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BDefProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BDefPropertyItemProvider bDefPropertyItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BPropertySet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BPropertySetItemProvider bPropertySetItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BDefaultPropertySet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BDefaultPropertySetItemProvider bDefaultPropertySetItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BPropertyDefinitionOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BPropertyDefinitionOperationItemProvider bPropertyDefinitionOperationItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BConditionalPropertyOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BConditionalPropertyOperationItemProvider bConditionalPropertyOperationItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BPropertySetOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BPropertySetOperationItemProvider bPropertySetOperationItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BAdvice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BAdviceItemProvider bAdviceItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BConcern} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BConcernItemProvider bConcernItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BWithExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BWithExpressionItemProvider bWithExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BFunctionItemProvider bFunctionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BFunctionWrapper} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BFunctionWrapperItemProvider bFunctionWrapperItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BNamePredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BNamePredicateItemProvider bNamePredicateItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BFunctionNamePredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BFunctionNamePredicateItemProvider bFunctionNamePredicateItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BFunctionConcernContext} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BFunctionConcernContextItemProvider bFunctionConcernContextItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BParameterPredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BParameterPredicateItemProvider bParameterPredicateItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BProceedExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BProceedExpressionItemProvider bProceedExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BDelegatingContext} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BDelegatingContextItemProvider bDelegatingContextItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BWrappingContext} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BWrappingContextItemProvider bWrappingContextItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.B3MetaClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected B3MetaClassItemProvider b3MetaClassItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BExpressionWrapper} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BExpressionWrapperItemProvider bExpressionWrapperItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BWithContextExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BWithContextExpressionItemProvider bWithContextExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BCallFeature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BCallFeatureItemProvider bCallFeatureItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BCallNamedFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BCallNamedFunctionItemProvider bCallNamedFunctionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BCallFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BCallFunctionItemProvider bCallFunctionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BPatternLiteralExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BPatternLiteralExpressionItemProvider bPatternLiteralExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.BSimplePatternExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BSimplePatternExpressionItemProvider bSimplePatternExpressionItemProvider;

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.b3.backend.evaluator.b3backend.B3Type} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected B3TypeItemProvider b3TypeItemProvider;

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public B3backendItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if(isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if(!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.B3Function}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createB3FunctionAdapter() {
		if(b3FunctionItemProvider == null) {
			b3FunctionItemProvider = new B3FunctionItemProvider(this);
		}

		return b3FunctionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.B3FunctionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createB3FunctionTypeAdapter() {
		if(b3FunctionTypeItemProvider == null) {
			b3FunctionTypeItemProvider = new B3FunctionTypeItemProvider(this);
		}

		return b3FunctionTypeItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.B3FuncTypeVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createB3FuncTypeVariableAdapter() {
		if(b3FuncTypeVariableItemProvider == null) {
			b3FuncTypeVariableItemProvider = new B3FuncTypeVariableItemProvider(this);
		}

		return b3FuncTypeVariableItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.B3JavaImport}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createB3JavaImportAdapter() {
		if(b3JavaImportItemProvider == null) {
			b3JavaImportItemProvider = new B3JavaImportItemProvider(this);
		}

		return b3JavaImportItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.B3MetaClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createB3MetaClassAdapter() {
		if(b3MetaClassItemProvider == null) {
			b3MetaClassItemProvider = new B3MetaClassItemProvider(this);
		}

		return b3MetaClassItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.B3ParameterizedType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createB3ParameterizedTypeAdapter() {
		if(b3ParameterizedTypeItemProvider == null) {
			b3ParameterizedTypeItemProvider = new B3ParameterizedTypeItemProvider(this);
		}

		return b3ParameterizedTypeItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.B3Type}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createB3TypeAdapter() {
		if(b3TypeItemProvider == null) {
			b3TypeItemProvider = new B3TypeItemProvider(this);
		}

		return b3TypeItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.B3WildcardType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createB3WildcardTypeAdapter() {
		if(b3WildcardTypeItemProvider == null) {
			b3WildcardTypeItemProvider = new B3WildcardTypeItemProvider(this);
		}

		return b3WildcardTypeItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BAdvice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBAdviceAdapter() {
		if(bAdviceItemProvider == null) {
			bAdviceItemProvider = new BAdviceItemProvider(this);
		}

		return bAdviceItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BAndExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBAndExpressionAdapter() {
		if(bAndExpressionItemProvider == null) {
			bAndExpressionItemProvider = new BAndExpressionItemProvider(this);
		}

		return bAndExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BAssignmentExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBAssignmentExpressionAdapter() {
		if(bAssignmentExpressionItemProvider == null) {
			bAssignmentExpressionItemProvider = new BAssignmentExpressionItemProvider(this);
		}

		return bAssignmentExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BAtExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBAtExpressionAdapter() {
		if(bAtExpressionItemProvider == null) {
			bAtExpressionItemProvider = new BAtExpressionItemProvider(this);
		}

		return bAtExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BBinaryOpExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBBinaryOpExpressionAdapter() {
		if(bBinaryOpExpressionItemProvider == null) {
			bBinaryOpExpressionItemProvider = new BBinaryOpExpressionItemProvider(this);
		}

		return bBinaryOpExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BCachedExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBCachedExpressionAdapter() {
		if(bCachedExpressionItemProvider == null) {
			bCachedExpressionItemProvider = new BCachedExpressionItemProvider(this);
		}

		return bCachedExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BCallFeature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBCallFeatureAdapter() {
		if(bCallFeatureItemProvider == null) {
			bCallFeatureItemProvider = new BCallFeatureItemProvider(this);
		}

		return bCallFeatureItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BCallFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBCallFunctionAdapter() {
		if(bCallFunctionItemProvider == null) {
			bCallFunctionItemProvider = new BCallFunctionItemProvider(this);
		}

		return bCallFunctionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BCallNamedFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBCallNamedFunctionAdapter() {
		if(bCallNamedFunctionItemProvider == null) {
			bCallNamedFunctionItemProvider = new BCallNamedFunctionItemProvider(this);
		}

		return bCallNamedFunctionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BCase}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBCaseAdapter() {
		if(bCaseItemProvider == null) {
			bCaseItemProvider = new BCaseItemProvider(this);
		}

		return bCaseItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BCatch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBCatchAdapter() {
		if(bCatchItemProvider == null) {
			bCatchItemProvider = new BCatchItemProvider(this);
		}

		return bCatchItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BChainedExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBChainedExpressionAdapter() {
		if(bChainedExpressionItemProvider == null) {
			bChainedExpressionItemProvider = new BChainedExpressionItemProvider(this);
		}

		return bChainedExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BConcern}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBConcernAdapter() {
		if(bConcernItemProvider == null) {
			bConcernItemProvider = new BConcernItemProvider(this);
		}

		return bConcernItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BConditionalPropertyOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBConditionalPropertyOperationAdapter() {
		if(bConditionalPropertyOperationItemProvider == null) {
			bConditionalPropertyOperationItemProvider = new BConditionalPropertyOperationItemProvider(this);
		}

		return bConditionalPropertyOperationItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BContext}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBContextAdapter() {
		if(bContextItemProvider == null) {
			bContextItemProvider = new BContextItemProvider(this);
		}

		return bContextItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BCreateExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBCreateExpressionAdapter() {
		if(bCreateExpressionItemProvider == null) {
			bCreateExpressionItemProvider = new BCreateExpressionItemProvider(this);
		}

		return bCreateExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BDefaultPropertySet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBDefaultPropertySetAdapter() {
		if(bDefaultPropertySetItemProvider == null) {
			bDefaultPropertySetItemProvider = new BDefaultPropertySetItemProvider(this);
		}

		return bDefaultPropertySetItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BDefProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBDefPropertyAdapter() {
		if(bDefPropertyItemProvider == null) {
			bDefPropertyItemProvider = new BDefPropertyItemProvider(this);
		}

		return bDefPropertyItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BDefValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBDefValueAdapter() {
		if(bDefValueItemProvider == null) {
			bDefValueItemProvider = new BDefValueItemProvider(this);
		}

		return bDefValueItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BDelegatingContext}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBDelegatingContextAdapter() {
		if(bDelegatingContextItemProvider == null) {
			bDelegatingContextItemProvider = new BDelegatingContextItemProvider(this);
		}

		return bDelegatingContextItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BExpressionWrapper}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBExpressionWrapperAdapter() {
		if(bExpressionWrapperItemProvider == null) {
			bExpressionWrapperItemProvider = new BExpressionWrapperItemProvider(this);
		}

		return bExpressionWrapperItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BFeatureExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBFeatureExpressionAdapter() {
		if(bFeatureExpressionItemProvider == null) {
			bFeatureExpressionItemProvider = new BFeatureExpressionItemProvider(this);
		}

		return bFeatureExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBFunctionAdapter() {
		if(bFunctionItemProvider == null) {
			bFunctionItemProvider = new BFunctionItemProvider(this);
		}

		return bFunctionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BFunctionConcernContext}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBFunctionConcernContextAdapter() {
		if(bFunctionConcernContextItemProvider == null) {
			bFunctionConcernContextItemProvider = new BFunctionConcernContextItemProvider(this);
		}

		return bFunctionConcernContextItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BFunctionNamePredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBFunctionNamePredicateAdapter() {
		if(bFunctionNamePredicateItemProvider == null) {
			bFunctionNamePredicateItemProvider = new BFunctionNamePredicateItemProvider(this);
		}

		return bFunctionNamePredicateItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BFunctionWrapper}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBFunctionWrapperAdapter() {
		if(bFunctionWrapperItemProvider == null) {
			bFunctionWrapperItemProvider = new BFunctionWrapperItemProvider(this);
		}

		return bFunctionWrapperItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BGuardExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBGuardExpressionAdapter() {
		if(bGuardExpressionItemProvider == null) {
			bGuardExpressionItemProvider = new BGuardExpressionItemProvider(this);
		}

		return bGuardExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BGuardFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBGuardFunctionAdapter() {
		if(bGuardFunctionItemProvider == null) {
			bGuardFunctionItemProvider = new BGuardFunctionItemProvider(this);
		}

		return bGuardFunctionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BIfExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBIfExpressionAdapter() {
		if(bIfExpressionItemProvider == null) {
			bIfExpressionItemProvider = new BIfExpressionItemProvider(this);
		}

		return bIfExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BInnerContext}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBInnerContextAdapter() {
		if(bInnerContextItemProvider == null) {
			bInnerContextItemProvider = new BInnerContextItemProvider(this);
		}

		return bInnerContextItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BInstanceContext}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBInstanceContextAdapter() {
		if(bInstanceContextItemProvider == null) {
			bInstanceContextItemProvider = new BInstanceContextItemProvider(this);
		}

		return bInstanceContextItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BInvocationContext}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBInvocationContextAdapter() {
		if(bInvocationContextItemProvider == null) {
			bInvocationContextItemProvider = new BInvocationContextItemProvider(this);
		}

		return bInvocationContextItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BJavaFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBJavaFunctionAdapter() {
		if(bJavaFunctionItemProvider == null) {
			bJavaFunctionItemProvider = new BJavaFunctionItemProvider(this);
		}

		return bJavaFunctionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BLiteralAny}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBLiteralAnyAdapter() {
		if(bLiteralAnyItemProvider == null) {
			bLiteralAnyItemProvider = new BLiteralAnyItemProvider(this);
		}

		return bLiteralAnyItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BLiteralExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBLiteralExpressionAdapter() {
		if(bLiteralExpressionItemProvider == null) {
			bLiteralExpressionItemProvider = new BLiteralExpressionItemProvider(this);
		}

		return bLiteralExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BLiteralListExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBLiteralListExpressionAdapter() {
		if(bLiteralListExpressionItemProvider == null) {
			bLiteralListExpressionItemProvider = new BLiteralListExpressionItemProvider(this);
		}

		return bLiteralListExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BLiteralMapExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBLiteralMapExpressionAdapter() {
		if(bLiteralMapExpressionItemProvider == null) {
			bLiteralMapExpressionItemProvider = new BLiteralMapExpressionItemProvider(this);
		}

		return bLiteralMapExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BLiteralType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBLiteralTypeAdapter() {
		if(bLiteralTypeItemProvider == null) {
			bLiteralTypeItemProvider = new BLiteralTypeItemProvider(this);
		}

		return bLiteralTypeItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BMapEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBMapEntryAdapter() {
		if(bMapEntryItemProvider == null) {
			bMapEntryItemProvider = new BMapEntryItemProvider(this);
		}

		return bMapEntryItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BNamePredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBNamePredicateAdapter() {
		if(bNamePredicateItemProvider == null) {
			bNamePredicateItemProvider = new BNamePredicateItemProvider(this);
		}

		return bNamePredicateItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BOrExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBOrExpressionAdapter() {
		if(bOrExpressionItemProvider == null) {
			bOrExpressionItemProvider = new BOrExpressionItemProvider(this);
		}

		return bOrExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBParameterAdapter() {
		if(bParameterItemProvider == null) {
			bParameterItemProvider = new BParameterItemProvider(this);
		}

		return bParameterItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BParameterDeclaration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBParameterDeclarationAdapter() {
		if(bParameterDeclarationItemProvider == null) {
			bParameterDeclarationItemProvider = new BParameterDeclarationItemProvider(this);
		}

		return bParameterDeclarationItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BParameterList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBParameterListAdapter() {
		if(bParameterListItemProvider == null) {
			bParameterListItemProvider = new BParameterListItemProvider(this);
		}

		return bParameterListItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BParameterPredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBParameterPredicateAdapter() {
		if(bParameterPredicateItemProvider == null) {
			bParameterPredicateItemProvider = new BParameterPredicateItemProvider(this);
		}

		return bParameterPredicateItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BPatternLiteralExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBPatternLiteralExpressionAdapter() {
		if(bPatternLiteralExpressionItemProvider == null) {
			bPatternLiteralExpressionItemProvider = new BPatternLiteralExpressionItemProvider(this);
		}

		return bPatternLiteralExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BProceedExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBProceedExpressionAdapter() {
		if(bProceedExpressionItemProvider == null) {
			bProceedExpressionItemProvider = new BProceedExpressionItemProvider(this);
		}

		return bProceedExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BPropertyDefinitionOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBPropertyDefinitionOperationAdapter() {
		if(bPropertyDefinitionOperationItemProvider == null) {
			bPropertyDefinitionOperationItemProvider = new BPropertyDefinitionOperationItemProvider(this);
		}

		return bPropertyDefinitionOperationItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BPropertySet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBPropertySetAdapter() {
		if(bPropertySetItemProvider == null) {
			bPropertySetItemProvider = new BPropertySetItemProvider(this);
		}

		return bPropertySetItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BPropertySetOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBPropertySetOperationAdapter() {
		if(bPropertySetOperationItemProvider == null) {
			bPropertySetOperationItemProvider = new BPropertySetOperationItemProvider(this);
		}

		return bPropertySetOperationItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BRegularExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBRegularExpressionAdapter() {
		if(bRegularExpressionItemProvider == null) {
			bRegularExpressionItemProvider = new BRegularExpressionItemProvider(this);
		}

		return bRegularExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BSimplePatternExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBSimplePatternExpressionAdapter() {
		if(bSimplePatternExpressionItemProvider == null) {
			bSimplePatternExpressionItemProvider = new BSimplePatternExpressionItemProvider(this);
		}

		return bSimplePatternExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BSwitchExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBSwitchExpressionAdapter() {
		if(bSwitchExpressionItemProvider == null) {
			bSwitchExpressionItemProvider = new BSwitchExpressionItemProvider(this);
		}

		return bSwitchExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BSystemContext}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBSystemContextAdapter() {
		if(bSystemContextItemProvider == null) {
			bSystemContextItemProvider = new BSystemContextItemProvider(this);
		}

		return bSystemContextItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BThrowExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBThrowExpressionAdapter() {
		if(bThrowExpressionItemProvider == null) {
			bThrowExpressionItemProvider = new BThrowExpressionItemProvider(this);
		}

		return bThrowExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BTryExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBTryExpressionAdapter() {
		if(bTryExpressionItemProvider == null) {
			bTryExpressionItemProvider = new BTryExpressionItemProvider(this);
		}

		return bTryExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BTypeCalculator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBTypeCalculatorAdapter() {
		if(bTypeCalculatorItemProvider == null) {
			bTypeCalculatorItemProvider = new BTypeCalculatorItemProvider(this);
		}

		return bTypeCalculatorItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BTypeCalculatorFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBTypeCalculatorFunctionAdapter() {
		if(bTypeCalculatorFunctionItemProvider == null) {
			bTypeCalculatorFunctionItemProvider = new BTypeCalculatorFunctionItemProvider(this);
		}

		return bTypeCalculatorFunctionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BUnaryOpExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBUnaryOpExpressionAdapter() {
		if(bUnaryOpExpressionItemProvider == null) {
			bUnaryOpExpressionItemProvider = new BUnaryOpExpressionItemProvider(this);
		}

		return bUnaryOpExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BUnaryPostOpExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBUnaryPostOpExpressionAdapter() {
		if(bUnaryPostOpExpressionItemProvider == null) {
			bUnaryPostOpExpressionItemProvider = new BUnaryPostOpExpressionItemProvider(this);
		}

		return bUnaryPostOpExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BUnaryPreOpExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBUnaryPreOpExpressionAdapter() {
		if(bUnaryPreOpExpressionItemProvider == null) {
			bUnaryPreOpExpressionItemProvider = new BUnaryPreOpExpressionItemProvider(this);
		}

		return bUnaryPreOpExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BVariableExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBVariableExpressionAdapter() {
		if(bVariableExpressionItemProvider == null) {
			bVariableExpressionItemProvider = new BVariableExpressionItemProvider(this);
		}

		return bVariableExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BWithContextExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBWithContextExpressionAdapter() {
		if(bWithContextExpressionItemProvider == null) {
			bWithContextExpressionItemProvider = new BWithContextExpressionItemProvider(this);
		}

		return bWithContextExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BWithExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBWithExpressionAdapter() {
		if(bWithExpressionItemProvider == null) {
			bWithExpressionItemProvider = new BWithExpressionItemProvider(this);
		}

		return bWithExpressionItemProvider;
	}

	/**
	 * This creates an adapter for a {@link org.eclipse.b3.backend.evaluator.b3backend.BWrappingContext}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBWrappingContextAdapter() {
		if(bWrappingContextItemProvider == null) {
			bWrappingContextItemProvider = new BWrappingContextItemProvider(this);
		}

		return bWrappingContextItemProvider;
	}

	/**
	 * This disposes all of the item providers created by this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void dispose() {
		if(bIfExpressionItemProvider != null)
			bIfExpressionItemProvider.dispose();
		if(bSwitchExpressionItemProvider != null)
			bSwitchExpressionItemProvider.dispose();
		if(bCaseItemProvider != null)
			bCaseItemProvider.dispose();
		if(bTryExpressionItemProvider != null)
			bTryExpressionItemProvider.dispose();
		if(bCatchItemProvider != null)
			bCatchItemProvider.dispose();
		if(bOrExpressionItemProvider != null)
			bOrExpressionItemProvider.dispose();
		if(bAndExpressionItemProvider != null)
			bAndExpressionItemProvider.dispose();
		if(bChainedExpressionItemProvider != null)
			bChainedExpressionItemProvider.dispose();
		if(bThrowExpressionItemProvider != null)
			bThrowExpressionItemProvider.dispose();
		if(bUnaryOpExpressionItemProvider != null)
			bUnaryOpExpressionItemProvider.dispose();
		if(bUnaryPostOpExpressionItemProvider != null)
			bUnaryPostOpExpressionItemProvider.dispose();
		if(bBinaryOpExpressionItemProvider != null)
			bBinaryOpExpressionItemProvider.dispose();
		if(bCachedExpressionItemProvider != null)
			bCachedExpressionItemProvider.dispose();
		if(bLiteralExpressionItemProvider != null)
			bLiteralExpressionItemProvider.dispose();
		if(bLiteralListExpressionItemProvider != null)
			bLiteralListExpressionItemProvider.dispose();
		if(bLiteralMapExpressionItemProvider != null)
			bLiteralMapExpressionItemProvider.dispose();
		if(bMapEntryItemProvider != null)
			bMapEntryItemProvider.dispose();
		if(bFeatureExpressionItemProvider != null)
			bFeatureExpressionItemProvider.dispose();
		if(bAtExpressionItemProvider != null)
			bAtExpressionItemProvider.dispose();
		if(bVariableExpressionItemProvider != null)
			bVariableExpressionItemProvider.dispose();
		if(bLiteralAnyItemProvider != null)
			bLiteralAnyItemProvider.dispose();
		if(bCreateExpressionItemProvider != null)
			bCreateExpressionItemProvider.dispose();
		if(bGuardExpressionItemProvider != null)
			bGuardExpressionItemProvider.dispose();
		if(bSystemContextItemProvider != null)
			bSystemContextItemProvider.dispose();
		if(bContextItemProvider != null)
			bContextItemProvider.dispose();
		if(bInnerContextItemProvider != null)
			bInnerContextItemProvider.dispose();
		if(bInvocationContextItemProvider != null)
			bInvocationContextItemProvider.dispose();
		if(bUnaryPreOpExpressionItemProvider != null)
			bUnaryPreOpExpressionItemProvider.dispose();
		if(bAssignmentExpressionItemProvider != null)
			bAssignmentExpressionItemProvider.dispose();
		if(b3FunctionItemProvider != null)
			b3FunctionItemProvider.dispose();
		if(bJavaFunctionItemProvider != null)
			bJavaFunctionItemProvider.dispose();
		if(bDefValueItemProvider != null)
			bDefValueItemProvider.dispose();
		if(bRegularExpressionItemProvider != null)
			bRegularExpressionItemProvider.dispose();
		if(bParameterListItemProvider != null)
			bParameterListItemProvider.dispose();
		if(bParameterItemProvider != null)
			bParameterItemProvider.dispose();
		if(bParameterDeclarationItemProvider != null)
			bParameterDeclarationItemProvider.dispose();
		if(b3FunctionTypeItemProvider != null)
			b3FunctionTypeItemProvider.dispose();
		if(b3ParameterizedTypeItemProvider != null)
			b3ParameterizedTypeItemProvider.dispose();
		if(b3WildcardTypeItemProvider != null)
			b3WildcardTypeItemProvider.dispose();
		if(b3FuncTypeVariableItemProvider != null)
			b3FuncTypeVariableItemProvider.dispose();
		if(b3JavaImportItemProvider != null)
			b3JavaImportItemProvider.dispose();
		if(bLiteralTypeItemProvider != null)
			bLiteralTypeItemProvider.dispose();
		if(bGuardFunctionItemProvider != null)
			bGuardFunctionItemProvider.dispose();
		if(bTypeCalculatorItemProvider != null)
			bTypeCalculatorItemProvider.dispose();
		if(bTypeCalculatorFunctionItemProvider != null)
			bTypeCalculatorFunctionItemProvider.dispose();
		if(bInstanceContextItemProvider != null)
			bInstanceContextItemProvider.dispose();
		if(bDefPropertyItemProvider != null)
			bDefPropertyItemProvider.dispose();
		if(bPropertySetItemProvider != null)
			bPropertySetItemProvider.dispose();
		if(bDefaultPropertySetItemProvider != null)
			bDefaultPropertySetItemProvider.dispose();
		if(bPropertyDefinitionOperationItemProvider != null)
			bPropertyDefinitionOperationItemProvider.dispose();
		if(bConditionalPropertyOperationItemProvider != null)
			bConditionalPropertyOperationItemProvider.dispose();
		if(bPropertySetOperationItemProvider != null)
			bPropertySetOperationItemProvider.dispose();
		if(bAdviceItemProvider != null)
			bAdviceItemProvider.dispose();
		if(bConcernItemProvider != null)
			bConcernItemProvider.dispose();
		if(bWithExpressionItemProvider != null)
			bWithExpressionItemProvider.dispose();
		if(bFunctionItemProvider != null)
			bFunctionItemProvider.dispose();
		if(bFunctionWrapperItemProvider != null)
			bFunctionWrapperItemProvider.dispose();
		if(bNamePredicateItemProvider != null)
			bNamePredicateItemProvider.dispose();
		if(bFunctionNamePredicateItemProvider != null)
			bFunctionNamePredicateItemProvider.dispose();
		if(bFunctionConcernContextItemProvider != null)
			bFunctionConcernContextItemProvider.dispose();
		if(bParameterPredicateItemProvider != null)
			bParameterPredicateItemProvider.dispose();
		if(bProceedExpressionItemProvider != null)
			bProceedExpressionItemProvider.dispose();
		if(bDelegatingContextItemProvider != null)
			bDelegatingContextItemProvider.dispose();
		if(bWrappingContextItemProvider != null)
			bWrappingContextItemProvider.dispose();
		if(b3MetaClassItemProvider != null)
			b3MetaClassItemProvider.dispose();
		if(bExpressionWrapperItemProvider != null)
			bExpressionWrapperItemProvider.dispose();
		if(bWithContextExpressionItemProvider != null)
			bWithContextExpressionItemProvider.dispose();
		if(bCallFeatureItemProvider != null)
			bCallFeatureItemProvider.dispose();
		if(bCallNamedFunctionItemProvider != null)
			bCallNamedFunctionItemProvider.dispose();
		if(bCallFunctionItemProvider != null)
			bCallFunctionItemProvider.dispose();
		if(bPatternLiteralExpressionItemProvider != null)
			bPatternLiteralExpressionItemProvider.dispose();
		if(bSimplePatternExpressionItemProvider != null)
			bSimplePatternExpressionItemProvider.dispose();
		if(b3TypeItemProvider != null)
			b3TypeItemProvider.dispose();
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if(parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null
				? this
				: parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

}
